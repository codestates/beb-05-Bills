{
	"id": "506535ec5810e46d3e2baa97844e4599",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CouponMarket.sol": {
				"content": "// contracts/GameItems.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\n\ninterface others {\n    function balanceOf(address account, uint256 id)\n        external\n        view\n        returns (uint256);\n\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) external;\n}\n\ncontract CouponMarket {\n    mapping(uint256 => address) private _seller;\n    mapping(uint256 => uint256) private _amount;\n\n    function seller(uint256 discount) public view returns (address) {\n        return _seller[discount];\n    }\n\n    function amount(uint256 discount) public view returns (uint256) {\n        return _amount[discount];\n    }\n\n    function buyCoupon(\n        uint256 discount,\n        uint256 amount,\n        address ContractAddr\n    ) public payable returns (bool) {\n        address payable receiver = payable(_seller[discount]);\n        uint256 price = 1;\n        receiver.transfer(price);\n        others(ContractAddr).safeTransferFrom(\n            address(this),\n            msg.sender,\n            discount,\n            amount,\n            \"0x00\"\n        );\n        _reduceAmount(discount, amount);\n        return true;\n    }\n\n    function _reduceAmount(uint256 discount, uint256 amount) private {\n        _amount[discount] = _amount[discount] - amount;\n    }\n\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4) {\n        _seller[id] = from;\n        _amount[id] = _amount[id] + value;\n        return\n            bytes4(\n                keccak256(\n                    (\"onERC1155Received(address,address,uint256,uint256,bytes)\")\n                )\n            );\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17261  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1157:1161  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17261  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8173:8259  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8246:8252  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8239:8243  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8239:8252  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8173:8259  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17261  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_14:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_23:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_25:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_26:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_27:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_28:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_29:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_30:\n    /* \"#utility.yul\":957:984   */\n  tag_46\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_28\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_48\n  tag_29\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1030:1118   */\ntag_47:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_31:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_50\n  tag_23\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_51\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_30\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_32:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_54\n  tag_29\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1434:1490   */\ntag_53:\n    /* \"#utility.yul\":1508:1537   */\n  tag_55\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_33:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_57:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_57)\ntag_59:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_60:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_34:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_62\n    /* \"#utility.yul\":2053:2102   */\n  tag_63\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2037:2103   */\n  tag_31\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_65\n  tag_27\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2178:2290   */\ntag_64:\n    /* \"#utility.yul\":2299:2338   */\n  tag_66\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_33\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_35:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_69\n  tag_26\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2447:2569   */\ntag_68:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_70\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_34\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3249   */\ntag_3:\n    /* \"#utility.yul\":2805:2811   */\n  0x00\n    /* \"#utility.yul\":2854:2856   */\n  0x20\n    /* \"#utility.yul\":2842:2851   */\n  dup3\n    /* \"#utility.yul\":2833:2840   */\n  dup5\n    /* \"#utility.yul\":2829:2852   */\n  sub\n    /* \"#utility.yul\":2825:2857   */\n  slt\n    /* \"#utility.yul\":2822:2941   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2860:2939   */\n  tag_73\n  tag_24\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2822:2941   */\ntag_72:\n    /* \"#utility.yul\":3001:3002   */\n  0x00\n    /* \"#utility.yul\":2990:2999   */\n  dup3\n    /* \"#utility.yul\":2986:3003   */\n  add\n    /* \"#utility.yul\":2980:3004   */\n  mload\n    /* \"#utility.yul\":3031:3049   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3023:3029   */\n  dup2\n    /* \"#utility.yul\":3020:3050   */\n  gt\n    /* \"#utility.yul\":3017:3134   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3053:3132   */\n  tag_75\n  tag_25\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3017:3134   */\ntag_74:\n    /* \"#utility.yul\":3158:3232   */\n  tag_76\n    /* \"#utility.yul\":3224:3231   */\n  dup5\n    /* \"#utility.yul\":3215:3221   */\n  dup3\n    /* \"#utility.yul\":3204:3213   */\n  dup6\n    /* \"#utility.yul\":3200:3222   */\n  add\n    /* \"#utility.yul\":3158:3232   */\n  tag_35\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3148:3232   */\n  swap2\n  pop\n    /* \"#utility.yul\":2951:3242   */\n  pop\n    /* \"#utility.yul\":2725:3249   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3255:3435   */\ntag_36:\n    /* \"#utility.yul\":3303:3380   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3300:3301   */\n  0x00\n    /* \"#utility.yul\":3293:3381   */\n  mstore\n    /* \"#utility.yul\":3400:3404   */\n  0x22\n    /* \"#utility.yul\":3397:3398   */\n  0x04\n    /* \"#utility.yul\":3390:3405   */\n  mstore\n    /* \"#utility.yul\":3424:3428   */\n  0x24\n    /* \"#utility.yul\":3421:3422   */\n  0x00\n    /* \"#utility.yul\":3414:3429   */\n  revert\n    /* \"#utility.yul\":3441:3761   */\ntag_13:\n    /* \"#utility.yul\":3485:3491   */\n  0x00\n    /* \"#utility.yul\":3522:3523   */\n  0x02\n    /* \"#utility.yul\":3516:3520   */\n  dup3\n    /* \"#utility.yul\":3512:3524   */\n  div\n    /* \"#utility.yul\":3502:3524   */\n  swap1\n  pop\n    /* \"#utility.yul\":3569:3570   */\n  0x01\n    /* \"#utility.yul\":3563:3567   */\n  dup3\n    /* \"#utility.yul\":3559:3571   */\n  and\n    /* \"#utility.yul\":3590:3608   */\n  dup1\n    /* \"#utility.yul\":3580:3661   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3646:3650   */\n  0x7f\n    /* \"#utility.yul\":3638:3644   */\n  dup3\n    /* \"#utility.yul\":3634:3651   */\n  and\n    /* \"#utility.yul\":3624:3651   */\n  swap2\n  pop\n    /* \"#utility.yul\":3580:3661   */\ntag_79:\n    /* \"#utility.yul\":3708:3710   */\n  0x20\n    /* \"#utility.yul\":3700:3706   */\n  dup3\n    /* \"#utility.yul\":3697:3711   */\n  lt\n    /* \"#utility.yul\":3677:3695   */\n  dup2\n    /* \"#utility.yul\":3674:3712   */\n  eq\n    /* \"#utility.yul\":3671:3755   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3727:3745   */\n  tag_81\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3671:3755   */\ntag_80:\n    /* \"#utility.yul\":3492:3761   */\n  pop\n    /* \"#utility.yul\":3441:3761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17261  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17261  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4065:4492  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3993  function safeTransferFrom(... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2317:2318  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2305  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2366  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2392  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2396  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2393:2395  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2396  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2405  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2397:2404  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2405  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2376:2405  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1388:1414  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1384  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1445:1482  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1441  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1522:1533  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1521  super.supportsInterface */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4065:4492  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4298:4310  _msgSender() */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4298:4308  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4298:4310  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4310  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4294  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4310  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4350  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4314:4350  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4331:4335  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4337:4349  _msgSender() */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4337:4347  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4337:4349  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4314:4330  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4314:4350  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4350  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4423  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4433:4485  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4456:4460  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4462:4464  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4466:4469  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4471:4478  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4480:4484  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4433:4455  _safeBatchTransferFrom */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4433:4485  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4065:4492  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2720:2736  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2779:2782  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2779:2789  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2768  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2775  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2789  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2846:2876  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:2901  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:2908  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2909  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2846:2909  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2925:2934  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2944:2952  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2944:2959  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2940:2941  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2940:2959  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3029  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3017  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3020  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3025  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3026:3027  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3028  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3008  balanceOf */\n      tag_15\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3029  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2993  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2994:2995  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2996  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:3029  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2961:2964  ++i */\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3057:3070  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3050:3070  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3270  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3268  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3272:3280  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3282:3290  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3257  _setApprovalForAll */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3464:3468  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3505  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3506:3513  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3524  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3515:3523  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3524  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3524  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3993  function safeTransferFrom(... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3806:3818  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3806:3816  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3806:3818  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3818  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3802  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3818  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3858  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3858  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3839:3843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3845:3857  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3845:3855  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3845:3857  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3838  isApprovedForAll */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3858  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3858  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3777:3931  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_77\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3941:3986  _safeTransferFrom(from, to, id, amount, data) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3959:3963  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3965:3967  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3969:3971  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3973:3979  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3981:3985  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3941:3958  _safeTransferFrom */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3941:3986  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3993  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6235:7350  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6455:6462  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6455:6469  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6441:6444  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6441:6451  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6441:6469  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6433:6514  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6546:6547  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6532:6548  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6532:6534  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6532:6548  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6524:6590  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6601:6617  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6620:6632  _msgSender() */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6620:6630  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6620:6632  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6601:6632  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6643:6703  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6664:6672  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6674:6678  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6680:6682  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6684:6687  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6689:6696  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6698:6702  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6643:6663  _beforeTokenTransfer */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6643:6703  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6719:6728  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6714:7125  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6738:6741  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6738:6748  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6734:6735  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6734:6748  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6714:7125  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6769:6779  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6782:6785  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6786:6787  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6782:6788  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_130\n      jumpi\n      tag_131\n      tag_94\n      jump\t// in\n    tag_131:\n    tag_130:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6769:6788  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6802:6816  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6819:6826  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6827:6828  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6819:6829  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_133\n      tag_94\n      jump\t// in\n    tag_133:\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6802:6829  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6844:6863  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6866:6875  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6866:6879  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6876:6878  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6866:6879  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6866:6885  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6880:6884  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6866:6885  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6844:6885  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6922:6928  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6907:6918  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6907:6928  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6899:6975  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7053:7059  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7039:7050  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7039:7059  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7026  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7030  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7027:7029  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7030  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7036  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7035  from */\n      dup13\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7036  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7059  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7108:7114  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7096  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7100  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7097:7099  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7100  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7104  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7103  to */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7104  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7114  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7125  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6750:6753  ++i */\n      dup1\n      tag_139\n      swap1\n      tag_100\n      jump\t// in\n    tag_139:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6714:7125  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7170:7172  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7164:7168  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7154:7162  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7174:7177  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7179:7186  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7198:7257  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7218:7226  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7232  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7234:7236  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7238:7241  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7243:7250  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7252:7256  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7198:7217  _afterTokenTransfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7198:7257  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7268:7343  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7304:7312  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7314:7318  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7320:7322  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7324:7327  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7329:7336  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7338:7342  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7268:7303  _doSafeBatchTransferAcceptanceCheck */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7268:7343  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6423:7350  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6235:7350  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12912:13235  function _setApprovalForAll(... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13062:13070  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13053:13070  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13053:13058  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13053:13070  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13045:13116  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13164:13172  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13144  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13151  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13145:13150  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13151  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13161  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13152:13160  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13161  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13172  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13209:13217  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13187:13228  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13202:13207  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13187:13228  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13219:13227  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13187:13228  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12912:13235  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4942:5889  function _safeTransferFrom(... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5137:5138  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5123:5139  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5123:5125  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5123:5139  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5115:5181  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_123\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5192:5208  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5211:5223  _msgSender() */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5211:5221  _msgSender */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5211:5223  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5192:5223  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5233:5253  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5256:5277  _asSingletonArray(id) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5274:5276  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5256:5273  _asSingletonArray */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5256:5277  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5233:5277  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5287:5311  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5314:5339  _asSingletonArray(amount) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5332:5338  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5314:5331  _asSingletonArray */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5314:5339  _asSingletonArray(amount) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5287:5339  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5350:5410  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5371:5379  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5381:5385  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5387:5389  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5391:5394  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5396:5403  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5405:5409  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5350:5370  _beforeTokenTransfer */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5350:5410  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5421:5440  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5443:5452  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5443:5456  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5453:5455  id */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5443:5456  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5443:5462  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5457:5461  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5443:5462  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5421:5462  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5495:5501  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5480:5491  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5480:5501  fromBalance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5472:5548  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_136\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5618:5624  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5604:5615  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5604:5624  fromBalance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5591  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5595  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5592:5594  id */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5595  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5601  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:5600  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5601  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5624  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5665:5671  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5653  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5657  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5654:5656  id */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5657  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5661  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5658:5660  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5661  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5671  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_161:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5718:5720  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5687:5733  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5712:5716  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5687:5733  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5710  operator */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5687:5733  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5722:5724  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5726:5732  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5687:5733  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5744:5803  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5764:5772  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5774:5778  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5780:5782  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5787  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5789:5796  amounts */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5798:5802  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5744:5763  _afterTokenTransfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5744:5803  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5814:5882  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5845:5853  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5855:5859  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5861:5863  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5865:5867  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5869:5875  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5877:5881  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5814:5844  _doSafeTransferAcceptanceCheck */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5814:5882  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5105:5889  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4942:5889  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14171:14385  function _beforeTokenTransfer(... */\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15318:15531  function _afterTokenTransfer(... */\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16268:17060  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16500:16515  to.isContract() */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16500:16502  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16500:16513  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16500:16515  to.isContract() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16496:17054  if (to.isContract()) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16552:16554  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16535:16578  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16579:16587  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16589:16593  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16595:16598  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16600:16607  amounts */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16609:16613  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16535:16614  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      0x01\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16531:17044  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_178\n      jumpi\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_181\n      jumpi\n      pop\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n      dup1\n      tag_186\n      jumpi\n      pop\n      jump(tag_180)\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16920:16926  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16913:16927  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16531:17044  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_181:\n      pop\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16967:17029  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16531:17044  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16705:16753  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16693:16753  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16693:16701  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16693:16753  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16689:16846  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16777:16827  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16689:16846  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16615:16860  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16496:17054  if (to.isContract()) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16268:17060  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17066:17259  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17132:17148  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17160:17182  uint256[] memory array */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17199:17200  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17185:17201  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_195\n      jumpi\n      tag_196\n      tag_86\n      jump\t// in\n    tag_196:\n    tag_195:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_197\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_197:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17160:17201  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17222:17229  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17211:17216  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17217:17218  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17211:17219  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_198\n      jumpi\n      tag_199\n      tag_94\n      jump\t// in\n    tag_199:\n    tag_198:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17211:17229  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17247:17252  array */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17240:17252  return array */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17066:17259  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:16262  function _doSafeTransferAcceptanceCheck(... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15744:15759  to.isContract() */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15744:15746  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15744:15757  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15744:15759  to.isContract() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15740:16256  if (to.isContract()) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15796:15798  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15779:15817  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15818:15826  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15828:15832  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15834:15836  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15844  amount */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15846:15850  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15779:15851  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_206:\n      0x01\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15775:16246  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_207\n      jumpi\n      tag_211\n      tag_183\n      jump\t// in\n    tag_211:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_210\n      jumpi\n      pop\n      tag_212\n      tag_185\n      jump\t// in\n    tag_212:\n      dup1\n      tag_213\n      jumpi\n      pop\n      jump(tag_209)\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16122:16128  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16115:16129  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15775:16246  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_210:\n      pop\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16169:16231  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_189\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15775:16246  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15912:15955  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15900:15955  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15900:15908  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15900:15955  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15896:16048  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15979:16029  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_193\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15896:16048  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15852:16062  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15740:16256  if (to.isContract()) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:16262  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_220:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_221:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_222:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_223:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_224:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_297\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_223\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_225:\n        /* \"#utility.yul\":641:665   */\n      tag_299\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_224\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_300:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_226:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_302\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_225\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_227:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_228:\n        /* \"#utility.yul\":997:1021   */\n      tag_305\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_227\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_306:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_229:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_308\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_228\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_14:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_311\n      tag_221\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1290:1409   */\n    tag_310:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_312\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_226\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_313\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_229\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_230:\n        /* \"#utility.yul\":1764:1788   */\n      tag_315\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_227\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_17:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_317\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_230\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_231:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_232:\n        /* \"#utility.yul\":2256:2279   */\n      tag_320\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_231\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_321:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_233:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_323\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_232\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_20:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_326\n      tag_221\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2528:2647   */\n    tag_325:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_327\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_233\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_234:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_235:\n        /* \"#utility.yul\":2963:2984   */\n      tag_330\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_234\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_23:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_332\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_235\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_26:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_335\n      tag_221\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3289:3408   */\n    tag_334:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_336\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_229\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_236:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_237:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4135   */\n    tag_238:\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3906:4019   */\n    tag_340:\n        /* \"#utility.yul\":3920:3926   */\n      dup4\n        /* \"#utility.yul\":3917:3918   */\n      dup2\n        /* \"#utility.yul\":3914:3927   */\n      lt\n        /* \"#utility.yul\":3906:4019   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":4005:4006   */\n      dup1\n        /* \"#utility.yul\":4000:4003   */\n      dup3\n        /* \"#utility.yul\":3996:4007   */\n      add\n        /* \"#utility.yul\":3990:4008   */\n      mload\n        /* \"#utility.yul\":3986:3987   */\n      dup2\n        /* \"#utility.yul\":3981:3984   */\n      dup5\n        /* \"#utility.yul\":3977:3988   */\n      add\n        /* \"#utility.yul\":3970:4009   */\n      mstore\n        /* \"#utility.yul\":3942:3944   */\n      0x20\n        /* \"#utility.yul\":3939:3940   */\n      dup2\n        /* \"#utility.yul\":3935:3945   */\n      add\n        /* \"#utility.yul\":3930:3945   */\n      swap1\n      pop\n        /* \"#utility.yul\":3906:4019   */\n      jump(tag_340)\n    tag_342:\n        /* \"#utility.yul\":4037:4043   */\n      dup4\n        /* \"#utility.yul\":4034:4035   */\n      dup2\n        /* \"#utility.yul\":4031:4044   */\n      gt\n        /* \"#utility.yul\":4028:4129   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4108:4114   */\n      dup5\n        /* \"#utility.yul\":4103:4106   */\n      dup5\n        /* \"#utility.yul\":4099:4115   */\n      add\n        /* \"#utility.yul\":4092:4119   */\n      mstore\n        /* \"#utility.yul\":4028:4129   */\n    tag_343:\n        /* \"#utility.yul\":3877:4135   */\n      pop\n        /* \"#utility.yul\":3828:4135   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4141:4243   */\n    tag_239:\n        /* \"#utility.yul\":4182:4188   */\n      0x00\n        /* \"#utility.yul\":4233:4235   */\n      0x1f\n        /* \"#utility.yul\":4229:4236   */\n      not\n        /* \"#utility.yul\":4224:4226   */\n      0x1f\n        /* \"#utility.yul\":4217:4222   */\n      dup4\n        /* \"#utility.yul\":4213:4227   */\n      add\n        /* \"#utility.yul\":4209:4237   */\n      and\n        /* \"#utility.yul\":4199:4237   */\n      swap1\n      pop\n        /* \"#utility.yul\":4141:4243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4249:4613   */\n    tag_240:\n        /* \"#utility.yul\":4337:4340   */\n      0x00\n        /* \"#utility.yul\":4365:4404   */\n      tag_346\n        /* \"#utility.yul\":4398:4403   */\n      dup3\n        /* \"#utility.yul\":4365:4404   */\n      tag_236\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4420:4491   */\n      tag_347\n        /* \"#utility.yul\":4484:4490   */\n      dup2\n        /* \"#utility.yul\":4479:4482   */\n      dup6\n        /* \"#utility.yul\":4420:4491   */\n      tag_237\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":4413:4491   */\n      swap4\n      pop\n        /* \"#utility.yul\":4500:4552   */\n      tag_348\n        /* \"#utility.yul\":4545:4551   */\n      dup2\n        /* \"#utility.yul\":4540:4543   */\n      dup6\n        /* \"#utility.yul\":4533:4537   */\n      0x20\n        /* \"#utility.yul\":4526:4531   */\n      dup7\n        /* \"#utility.yul\":4522:4538   */\n      add\n        /* \"#utility.yul\":4500:4552   */\n      tag_238\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4577:4606   */\n      tag_349\n        /* \"#utility.yul\":4599:4605   */\n      dup2\n        /* \"#utility.yul\":4577:4606   */\n      tag_239\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4572:4575   */\n      dup5\n        /* \"#utility.yul\":4568:4607   */\n      add\n        /* \"#utility.yul\":4561:4607   */\n      swap2\n      pop\n        /* \"#utility.yul\":4341:4613   */\n      pop\n        /* \"#utility.yul\":4249:4613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4619:4932   */\n    tag_29:\n        /* \"#utility.yul\":4732:4736   */\n      0x00\n        /* \"#utility.yul\":4770:4772   */\n      0x20\n        /* \"#utility.yul\":4759:4768   */\n      dup3\n        /* \"#utility.yul\":4755:4773   */\n      add\n        /* \"#utility.yul\":4747:4773   */\n      swap1\n      pop\n        /* \"#utility.yul\":4819:4828   */\n      dup2\n        /* \"#utility.yul\":4813:4817   */\n      dup2\n        /* \"#utility.yul\":4809:4829   */\n      sub\n        /* \"#utility.yul\":4805:4806   */\n      0x00\n        /* \"#utility.yul\":4794:4803   */\n      dup4\n        /* \"#utility.yul\":4790:4807   */\n      add\n        /* \"#utility.yul\":4783:4830   */\n      mstore\n        /* \"#utility.yul\":4847:4925   */\n      tag_351\n        /* \"#utility.yul\":4920:4924   */\n      dup2\n        /* \"#utility.yul\":4911:4917   */\n      dup5\n        /* \"#utility.yul\":4847:4925   */\n      tag_240\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4839:4925   */\n      swap1\n      pop\n        /* \"#utility.yul\":4619:4932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5055   */\n    tag_241:\n        /* \"#utility.yul\":5047:5048   */\n      0x00\n        /* \"#utility.yul\":5044:5045   */\n      dup1\n        /* \"#utility.yul\":5037:5049   */\n      revert\n        /* \"#utility.yul\":5061:5241   */\n    tag_86:\n        /* \"#utility.yul\":5109:5186   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5106:5107   */\n      0x00\n        /* \"#utility.yul\":5099:5187   */\n      mstore\n        /* \"#utility.yul\":5206:5210   */\n      0x41\n        /* \"#utility.yul\":5203:5204   */\n      0x04\n        /* \"#utility.yul\":5196:5211   */\n      mstore\n        /* \"#utility.yul\":5230:5234   */\n      0x24\n        /* \"#utility.yul\":5227:5228   */\n      0x00\n        /* \"#utility.yul\":5220:5235   */\n      revert\n        /* \"#utility.yul\":5247:5528   */\n    tag_242:\n        /* \"#utility.yul\":5330:5357   */\n      tag_355\n        /* \"#utility.yul\":5352:5356   */\n      dup3\n        /* \"#utility.yul\":5330:5357   */\n      tag_239\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5322:5328   */\n      dup2\n        /* \"#utility.yul\":5318:5358   */\n      add\n        /* \"#utility.yul\":5460:5466   */\n      dup2\n        /* \"#utility.yul\":5448:5458   */\n      dup2\n        /* \"#utility.yul\":5445:5467   */\n      lt\n        /* \"#utility.yul\":5424:5442   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5412:5422   */\n      dup3\n        /* \"#utility.yul\":5409:5443   */\n      gt\n        /* \"#utility.yul\":5406:5468   */\n      or\n        /* \"#utility.yul\":5403:5491   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":5471:5489   */\n      tag_357\n      tag_86\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5403:5491   */\n    tag_356:\n        /* \"#utility.yul\":5511:5521   */\n      dup1\n        /* \"#utility.yul\":5507:5509   */\n      0x40\n        /* \"#utility.yul\":5500:5522   */\n      mstore\n        /* \"#utility.yul\":5290:5528   */\n      pop\n        /* \"#utility.yul\":5247:5528   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5534:5663   */\n    tag_243:\n        /* \"#utility.yul\":5568:5574   */\n      0x00\n        /* \"#utility.yul\":5595:5615   */\n      tag_359\n      tag_220\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5585:5615   */\n      swap1\n      pop\n        /* \"#utility.yul\":5624:5657   */\n      tag_360\n        /* \"#utility.yul\":5652:5656   */\n      dup3\n        /* \"#utility.yul\":5644:5650   */\n      dup3\n        /* \"#utility.yul\":5624:5657   */\n      tag_242\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5534:5663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5669:5980   */\n    tag_244:\n        /* \"#utility.yul\":5746:5750   */\n      0x00\n        /* \"#utility.yul\":5836:5854   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5828:5834   */\n      dup3\n        /* \"#utility.yul\":5825:5855   */\n      gt\n        /* \"#utility.yul\":5822:5878   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":5858:5876   */\n      tag_363\n      tag_86\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5822:5878   */\n    tag_362:\n        /* \"#utility.yul\":5908:5912   */\n      0x20\n        /* \"#utility.yul\":5900:5906   */\n      dup3\n        /* \"#utility.yul\":5896:5913   */\n      mul\n        /* \"#utility.yul\":5888:5913   */\n      swap1\n      pop\n        /* \"#utility.yul\":5968:5972   */\n      0x20\n        /* \"#utility.yul\":5962:5966   */\n      dup2\n        /* \"#utility.yul\":5958:5973   */\n      add\n        /* \"#utility.yul\":5950:5973   */\n      swap1\n      pop\n        /* \"#utility.yul\":5669:5980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6103   */\n    tag_245:\n        /* \"#utility.yul\":6095:6096   */\n      0x00\n        /* \"#utility.yul\":6092:6093   */\n      dup1\n        /* \"#utility.yul\":6085:6097   */\n      revert\n        /* \"#utility.yul\":6126:6836   */\n    tag_246:\n        /* \"#utility.yul\":6222:6227   */\n      0x00\n        /* \"#utility.yul\":6247:6328   */\n      tag_366\n        /* \"#utility.yul\":6263:6327   */\n      tag_367\n        /* \"#utility.yul\":6320:6326   */\n      dup5\n        /* \"#utility.yul\":6263:6327   */\n      tag_244\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6247:6328   */\n      tag_243\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6238:6328   */\n      swap1\n      pop\n        /* \"#utility.yul\":6348:6353   */\n      dup1\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6370:6375   */\n      dup3\n        /* \"#utility.yul\":6363:6384   */\n      mstore\n        /* \"#utility.yul\":6411:6415   */\n      0x20\n        /* \"#utility.yul\":6404:6409   */\n      dup3\n        /* \"#utility.yul\":6400:6416   */\n      add\n        /* \"#utility.yul\":6393:6416   */\n      swap1\n      pop\n        /* \"#utility.yul\":6464:6468   */\n      0x20\n        /* \"#utility.yul\":6456:6462   */\n      dup5\n        /* \"#utility.yul\":6452:6469   */\n      mul\n        /* \"#utility.yul\":6444:6450   */\n      dup4\n        /* \"#utility.yul\":6440:6470   */\n      add\n        /* \"#utility.yul\":6493:6496   */\n      dup6\n        /* \"#utility.yul\":6485:6491   */\n      dup2\n        /* \"#utility.yul\":6482:6497   */\n      gt\n        /* \"#utility.yul\":6479:6601   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":6512:6591   */\n      tag_369\n      tag_245\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6479:6601   */\n    tag_368:\n        /* \"#utility.yul\":6627:6633   */\n      dup4\n        /* \"#utility.yul\":6610:6830   */\n    tag_370:\n        /* \"#utility.yul\":6644:6650   */\n      dup2\n        /* \"#utility.yul\":6639:6642   */\n      dup2\n        /* \"#utility.yul\":6636:6651   */\n      lt\n        /* \"#utility.yul\":6610:6830   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":6719:6722   */\n      dup1\n        /* \"#utility.yul\":6748:6785   */\n      tag_373\n        /* \"#utility.yul\":6781:6784   */\n      dup9\n        /* \"#utility.yul\":6769:6779   */\n      dup3\n        /* \"#utility.yul\":6748:6785   */\n      tag_229\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6743:6746   */\n      dup5\n        /* \"#utility.yul\":6736:6786   */\n      mstore\n        /* \"#utility.yul\":6815:6819   */\n      0x20\n        /* \"#utility.yul\":6810:6813   */\n      dup5\n        /* \"#utility.yul\":6806:6820   */\n      add\n        /* \"#utility.yul\":6799:6820   */\n      swap4\n      pop\n        /* \"#utility.yul\":6686:6830   */\n      pop\n        /* \"#utility.yul\":6670:6674   */\n      0x20\n        /* \"#utility.yul\":6665:6668   */\n      dup2\n        /* \"#utility.yul\":6661:6675   */\n      add\n        /* \"#utility.yul\":6654:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6610:6830   */\n      jump(tag_370)\n    tag_372:\n        /* \"#utility.yul\":6614:6635   */\n      pop\n        /* \"#utility.yul\":6228:6836   */\n      pop\n      pop\n        /* \"#utility.yul\":6126:6836   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6859:7229   */\n    tag_247:\n        /* \"#utility.yul\":6930:6935   */\n      0x00\n        /* \"#utility.yul\":6979:6982   */\n      dup3\n        /* \"#utility.yul\":6972:6976   */\n      0x1f\n        /* \"#utility.yul\":6964:6970   */\n      dup4\n        /* \"#utility.yul\":6960:6977   */\n      add\n        /* \"#utility.yul\":6956:6983   */\n      slt\n        /* \"#utility.yul\":6946:7068   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":6987:7066   */\n      tag_376\n      tag_241\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6946:7068   */\n    tag_375:\n        /* \"#utility.yul\":7104:7110   */\n      dup2\n        /* \"#utility.yul\":7091:7111   */\n      calldataload\n        /* \"#utility.yul\":7129:7223   */\n      tag_377\n        /* \"#utility.yul\":7219:7222   */\n      dup5\n        /* \"#utility.yul\":7211:7217   */\n      dup3\n        /* \"#utility.yul\":7204:7208   */\n      0x20\n        /* \"#utility.yul\":7196:7202   */\n      dup7\n        /* \"#utility.yul\":7192:7209   */\n      add\n        /* \"#utility.yul\":7129:7223   */\n      tag_246\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7120:7223   */\n      swap2\n      pop\n        /* \"#utility.yul\":6936:7229   */\n      pop\n        /* \"#utility.yul\":6859:7229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7235:7352   */\n    tag_248:\n        /* \"#utility.yul\":7344:7345   */\n      0x00\n        /* \"#utility.yul\":7341:7342   */\n      dup1\n        /* \"#utility.yul\":7334:7346   */\n      revert\n        /* \"#utility.yul\":7358:7665   */\n    tag_249:\n        /* \"#utility.yul\":7419:7423   */\n      0x00\n        /* \"#utility.yul\":7509:7527   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7501:7507   */\n      dup3\n        /* \"#utility.yul\":7498:7528   */\n      gt\n        /* \"#utility.yul\":7495:7551   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":7531:7549   */\n      tag_381\n      tag_86\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7495:7551   */\n    tag_380:\n        /* \"#utility.yul\":7569:7598   */\n      tag_382\n        /* \"#utility.yul\":7591:7597   */\n      dup3\n        /* \"#utility.yul\":7569:7598   */\n      tag_239\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7561:7598   */\n      swap1\n      pop\n        /* \"#utility.yul\":7653:7657   */\n      0x20\n        /* \"#utility.yul\":7647:7651   */\n      dup2\n        /* \"#utility.yul\":7643:7658   */\n      add\n        /* \"#utility.yul\":7635:7658   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:7825   */\n    tag_250:\n        /* \"#utility.yul\":7755:7761   */\n      dup3\n        /* \"#utility.yul\":7750:7753   */\n      dup2\n        /* \"#utility.yul\":7745:7748   */\n      dup4\n        /* \"#utility.yul\":7732:7762   */\n      calldatacopy\n        /* \"#utility.yul\":7817:7818   */\n      0x00\n        /* \"#utility.yul\":7808:7814   */\n      dup4\n        /* \"#utility.yul\":7803:7806   */\n      dup4\n        /* \"#utility.yul\":7799:7815   */\n      add\n        /* \"#utility.yul\":7792:7819   */\n      mstore\n        /* \"#utility.yul\":7671:7825   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7831:8241   */\n    tag_251:\n        /* \"#utility.yul\":7908:7913   */\n      0x00\n        /* \"#utility.yul\":7933:7998   */\n      tag_385\n        /* \"#utility.yul\":7949:7997   */\n      tag_386\n        /* \"#utility.yul\":7990:7996   */\n      dup5\n        /* \"#utility.yul\":7949:7997   */\n      tag_249\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7933:7998   */\n      tag_243\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7924:7998   */\n      swap1\n      pop\n        /* \"#utility.yul\":8021:8027   */\n      dup3\n        /* \"#utility.yul\":8014:8019   */\n      dup2\n        /* \"#utility.yul\":8007:8028   */\n      mstore\n        /* \"#utility.yul\":8059:8063   */\n      0x20\n        /* \"#utility.yul\":8052:8057   */\n      dup2\n        /* \"#utility.yul\":8048:8064   */\n      add\n        /* \"#utility.yul\":8097:8100   */\n      dup5\n        /* \"#utility.yul\":8088:8094   */\n      dup5\n        /* \"#utility.yul\":8083:8086   */\n      dup5\n        /* \"#utility.yul\":8079:8095   */\n      add\n        /* \"#utility.yul\":8076:8101   */\n      gt\n        /* \"#utility.yul\":8073:8185   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":8104:8183   */\n      tag_388\n      tag_248\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8073:8185   */\n    tag_387:\n        /* \"#utility.yul\":8194:8235   */\n      tag_389\n        /* \"#utility.yul\":8228:8234   */\n      dup5\n        /* \"#utility.yul\":8223:8226   */\n      dup3\n        /* \"#utility.yul\":8218:8221   */\n      dup6\n        /* \"#utility.yul\":8194:8235   */\n      tag_250\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7914:8241   */\n      pop\n        /* \"#utility.yul\":7831:8241   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8260:8598   */\n    tag_252:\n        /* \"#utility.yul\":8315:8320   */\n      0x00\n        /* \"#utility.yul\":8364:8367   */\n      dup3\n        /* \"#utility.yul\":8357:8361   */\n      0x1f\n        /* \"#utility.yul\":8349:8355   */\n      dup4\n        /* \"#utility.yul\":8345:8362   */\n      add\n        /* \"#utility.yul\":8341:8368   */\n      slt\n        /* \"#utility.yul\":8331:8453   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":8372:8451   */\n      tag_392\n      tag_241\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8331:8453   */\n    tag_391:\n        /* \"#utility.yul\":8489:8495   */\n      dup2\n        /* \"#utility.yul\":8476:8496   */\n      calldataload\n        /* \"#utility.yul\":8514:8592   */\n      tag_393\n        /* \"#utility.yul\":8588:8591   */\n      dup5\n        /* \"#utility.yul\":8580:8586   */\n      dup3\n        /* \"#utility.yul\":8573:8577   */\n      0x20\n        /* \"#utility.yul\":8565:8571   */\n      dup7\n        /* \"#utility.yul\":8561:8578   */\n      add\n        /* \"#utility.yul\":8514:8592   */\n      tag_251\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8505:8592   */\n      swap2\n      pop\n        /* \"#utility.yul\":8321:8598   */\n      pop\n        /* \"#utility.yul\":8260:8598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:10113   */\n    tag_32:\n        /* \"#utility.yul\":8758:8764   */\n      0x00\n        /* \"#utility.yul\":8766:8772   */\n      dup1\n        /* \"#utility.yul\":8774:8780   */\n      0x00\n        /* \"#utility.yul\":8782:8788   */\n      dup1\n        /* \"#utility.yul\":8790:8796   */\n      0x00\n        /* \"#utility.yul\":8839:8842   */\n      0xa0\n        /* \"#utility.yul\":8827:8836   */\n      dup7\n        /* \"#utility.yul\":8818:8825   */\n      dup9\n        /* \"#utility.yul\":8814:8837   */\n      sub\n        /* \"#utility.yul\":8810:8843   */\n      slt\n        /* \"#utility.yul\":8807:8927   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":8846:8925   */\n      tag_396\n      tag_221\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8807:8927   */\n    tag_395:\n        /* \"#utility.yul\":8966:8967   */\n      0x00\n        /* \"#utility.yul\":8991:9044   */\n      tag_397\n        /* \"#utility.yul\":9036:9043   */\n      dup9\n        /* \"#utility.yul\":9027:9033   */\n      dup3\n        /* \"#utility.yul\":9016:9025   */\n      dup10\n        /* \"#utility.yul\":9012:9034   */\n      add\n        /* \"#utility.yul\":8991:9044   */\n      tag_226\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8981:9044   */\n      swap6\n      pop\n        /* \"#utility.yul\":8937:9054   */\n      pop\n        /* \"#utility.yul\":9093:9095   */\n      0x20\n        /* \"#utility.yul\":9119:9172   */\n      tag_398\n        /* \"#utility.yul\":9164:9171   */\n      dup9\n        /* \"#utility.yul\":9155:9161   */\n      dup3\n        /* \"#utility.yul\":9144:9153   */\n      dup10\n        /* \"#utility.yul\":9140:9162   */\n      add\n        /* \"#utility.yul\":9119:9172   */\n      tag_226\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9109:9172   */\n      swap5\n      pop\n        /* \"#utility.yul\":9064:9182   */\n      pop\n        /* \"#utility.yul\":9249:9251   */\n      0x40\n        /* \"#utility.yul\":9238:9247   */\n      dup7\n        /* \"#utility.yul\":9234:9252   */\n      add\n        /* \"#utility.yul\":9221:9253   */\n      calldataload\n        /* \"#utility.yul\":9280:9298   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9272:9278   */\n      dup2\n        /* \"#utility.yul\":9269:9299   */\n      gt\n        /* \"#utility.yul\":9266:9383   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":9302:9381   */\n      tag_400\n      tag_222\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9266:9383   */\n    tag_399:\n        /* \"#utility.yul\":9407:9485   */\n      tag_401\n        /* \"#utility.yul\":9477:9484   */\n      dup9\n        /* \"#utility.yul\":9468:9474   */\n      dup3\n        /* \"#utility.yul\":9457:9466   */\n      dup10\n        /* \"#utility.yul\":9453:9475   */\n      add\n        /* \"#utility.yul\":9407:9485   */\n      tag_247\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9397:9485   */\n      swap4\n      pop\n        /* \"#utility.yul\":9192:9495   */\n      pop\n        /* \"#utility.yul\":9562:9564   */\n      0x60\n        /* \"#utility.yul\":9551:9560   */\n      dup7\n        /* \"#utility.yul\":9547:9565   */\n      add\n        /* \"#utility.yul\":9534:9566   */\n      calldataload\n        /* \"#utility.yul\":9593:9611   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9585:9591   */\n      dup2\n        /* \"#utility.yul\":9582:9612   */\n      gt\n        /* \"#utility.yul\":9579:9696   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":9615:9694   */\n      tag_403\n      tag_222\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9579:9696   */\n    tag_402:\n        /* \"#utility.yul\":9720:9798   */\n      tag_404\n        /* \"#utility.yul\":9790:9797   */\n      dup9\n        /* \"#utility.yul\":9781:9787   */\n      dup3\n        /* \"#utility.yul\":9770:9779   */\n      dup10\n        /* \"#utility.yul\":9766:9788   */\n      add\n        /* \"#utility.yul\":9720:9798   */\n      tag_247\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9710:9798   */\n      swap3\n      pop\n        /* \"#utility.yul\":9505:9808   */\n      pop\n        /* \"#utility.yul\":9875:9878   */\n      0x80\n        /* \"#utility.yul\":9864:9873   */\n      dup7\n        /* \"#utility.yul\":9860:9879   */\n      add\n        /* \"#utility.yul\":9847:9880   */\n      calldataload\n        /* \"#utility.yul\":9907:9925   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9899:9905   */\n      dup2\n        /* \"#utility.yul\":9896:9926   */\n      gt\n        /* \"#utility.yul\":9893:10010   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":9929:10008   */\n      tag_406\n      tag_222\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9893:10010   */\n    tag_405:\n        /* \"#utility.yul\":10034:10096   */\n      tag_407\n        /* \"#utility.yul\":10088:10095   */\n      dup9\n        /* \"#utility.yul\":10079:10085   */\n      dup3\n        /* \"#utility.yul\":10068:10077   */\n      dup10\n        /* \"#utility.yul\":10064:10086   */\n      add\n        /* \"#utility.yul\":10034:10096   */\n      tag_252\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10024:10096   */\n      swap2\n      pop\n        /* \"#utility.yul\":9818:10106   */\n      pop\n        /* \"#utility.yul\":8604:10113   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10119:10430   */\n    tag_253:\n        /* \"#utility.yul\":10196:10200   */\n      0x00\n        /* \"#utility.yul\":10286:10304   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10278:10284   */\n      dup3\n        /* \"#utility.yul\":10275:10305   */\n      gt\n        /* \"#utility.yul\":10272:10328   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":10308:10326   */\n      tag_410\n      tag_86\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10272:10328   */\n    tag_409:\n        /* \"#utility.yul\":10358:10362   */\n      0x20\n        /* \"#utility.yul\":10350:10356   */\n      dup3\n        /* \"#utility.yul\":10346:10363   */\n      mul\n        /* \"#utility.yul\":10338:10363   */\n      swap1\n      pop\n        /* \"#utility.yul\":10418:10422   */\n      0x20\n        /* \"#utility.yul\":10412:10416   */\n      dup2\n        /* \"#utility.yul\":10408:10423   */\n      add\n        /* \"#utility.yul\":10400:10423   */\n      swap1\n      pop\n        /* \"#utility.yul\":10119:10430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10453:11163   */\n    tag_254:\n        /* \"#utility.yul\":10549:10554   */\n      0x00\n        /* \"#utility.yul\":10574:10655   */\n      tag_412\n        /* \"#utility.yul\":10590:10654   */\n      tag_413\n        /* \"#utility.yul\":10647:10653   */\n      dup5\n        /* \"#utility.yul\":10590:10654   */\n      tag_253\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10574:10655   */\n      tag_243\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10565:10655   */\n      swap1\n      pop\n        /* \"#utility.yul\":10675:10680   */\n      dup1\n        /* \"#utility.yul\":10704:10710   */\n      dup4\n        /* \"#utility.yul\":10697:10702   */\n      dup3\n        /* \"#utility.yul\":10690:10711   */\n      mstore\n        /* \"#utility.yul\":10738:10742   */\n      0x20\n        /* \"#utility.yul\":10731:10736   */\n      dup3\n        /* \"#utility.yul\":10727:10743   */\n      add\n        /* \"#utility.yul\":10720:10743   */\n      swap1\n      pop\n        /* \"#utility.yul\":10791:10795   */\n      0x20\n        /* \"#utility.yul\":10783:10789   */\n      dup5\n        /* \"#utility.yul\":10779:10796   */\n      mul\n        /* \"#utility.yul\":10771:10777   */\n      dup4\n        /* \"#utility.yul\":10767:10797   */\n      add\n        /* \"#utility.yul\":10820:10823   */\n      dup6\n        /* \"#utility.yul\":10812:10818   */\n      dup2\n        /* \"#utility.yul\":10809:10824   */\n      gt\n        /* \"#utility.yul\":10806:10928   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":10839:10918   */\n      tag_415\n      tag_245\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10806:10928   */\n    tag_414:\n        /* \"#utility.yul\":10954:10960   */\n      dup4\n        /* \"#utility.yul\":10937:11157   */\n    tag_416:\n        /* \"#utility.yul\":10971:10977   */\n      dup2\n        /* \"#utility.yul\":10966:10969   */\n      dup2\n        /* \"#utility.yul\":10963:10978   */\n      lt\n        /* \"#utility.yul\":10937:11157   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":11046:11049   */\n      dup1\n        /* \"#utility.yul\":11075:11112   */\n      tag_419\n        /* \"#utility.yul\":11108:11111   */\n      dup9\n        /* \"#utility.yul\":11096:11106   */\n      dup3\n        /* \"#utility.yul\":11075:11112   */\n      tag_226\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11070:11073   */\n      dup5\n        /* \"#utility.yul\":11063:11113   */\n      mstore\n        /* \"#utility.yul\":11142:11146   */\n      0x20\n        /* \"#utility.yul\":11137:11140   */\n      dup5\n        /* \"#utility.yul\":11133:11147   */\n      add\n        /* \"#utility.yul\":11126:11147   */\n      swap4\n      pop\n        /* \"#utility.yul\":11013:11157   */\n      pop\n        /* \"#utility.yul\":10997:11001   */\n      0x20\n        /* \"#utility.yul\":10992:10995   */\n      dup2\n        /* \"#utility.yul\":10988:11002   */\n      add\n        /* \"#utility.yul\":10981:11002   */\n      swap1\n      pop\n        /* \"#utility.yul\":10937:11157   */\n      jump(tag_416)\n    tag_418:\n        /* \"#utility.yul\":10941:10962   */\n      pop\n        /* \"#utility.yul\":10555:11163   */\n      pop\n      pop\n        /* \"#utility.yul\":10453:11163   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11186:11556   */\n    tag_255:\n        /* \"#utility.yul\":11257:11262   */\n      0x00\n        /* \"#utility.yul\":11306:11309   */\n      dup3\n        /* \"#utility.yul\":11299:11303   */\n      0x1f\n        /* \"#utility.yul\":11291:11297   */\n      dup4\n        /* \"#utility.yul\":11287:11304   */\n      add\n        /* \"#utility.yul\":11283:11310   */\n      slt\n        /* \"#utility.yul\":11273:11395   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":11314:11393   */\n      tag_422\n      tag_241\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":11273:11395   */\n    tag_421:\n        /* \"#utility.yul\":11431:11437   */\n      dup2\n        /* \"#utility.yul\":11418:11438   */\n      calldataload\n        /* \"#utility.yul\":11456:11550   */\n      tag_423\n        /* \"#utility.yul\":11546:11549   */\n      dup5\n        /* \"#utility.yul\":11538:11544   */\n      dup3\n        /* \"#utility.yul\":11531:11535   */\n      0x20\n        /* \"#utility.yul\":11523:11529   */\n      dup7\n        /* \"#utility.yul\":11519:11536   */\n      add\n        /* \"#utility.yul\":11456:11550   */\n      tag_254\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11447:11550   */\n      swap2\n      pop\n        /* \"#utility.yul\":11263:11556   */\n      pop\n        /* \"#utility.yul\":11186:11556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11562:12456   */\n    tag_36:\n        /* \"#utility.yul\":11680:11686   */\n      0x00\n        /* \"#utility.yul\":11688:11694   */\n      dup1\n        /* \"#utility.yul\":11737:11739   */\n      0x40\n        /* \"#utility.yul\":11725:11734   */\n      dup4\n        /* \"#utility.yul\":11716:11723   */\n      dup6\n        /* \"#utility.yul\":11712:11735   */\n      sub\n        /* \"#utility.yul\":11708:11740   */\n      slt\n        /* \"#utility.yul\":11705:11824   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":11743:11822   */\n      tag_426\n      tag_221\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":11705:11824   */\n    tag_425:\n        /* \"#utility.yul\":11891:11892   */\n      0x00\n        /* \"#utility.yul\":11880:11889   */\n      dup4\n        /* \"#utility.yul\":11876:11893   */\n      add\n        /* \"#utility.yul\":11863:11894   */\n      calldataload\n        /* \"#utility.yul\":11921:11939   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11913:11919   */\n      dup2\n        /* \"#utility.yul\":11910:11940   */\n      gt\n        /* \"#utility.yul\":11907:12024   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":11943:12022   */\n      tag_428\n      tag_222\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11907:12024   */\n    tag_427:\n        /* \"#utility.yul\":12048:12126   */\n      tag_429\n        /* \"#utility.yul\":12118:12125   */\n      dup6\n        /* \"#utility.yul\":12109:12115   */\n      dup3\n        /* \"#utility.yul\":12098:12107   */\n      dup7\n        /* \"#utility.yul\":12094:12116   */\n      add\n        /* \"#utility.yul\":12048:12126   */\n      tag_255\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":12038:12126   */\n      swap3\n      pop\n        /* \"#utility.yul\":11834:12136   */\n      pop\n        /* \"#utility.yul\":12203:12205   */\n      0x20\n        /* \"#utility.yul\":12192:12201   */\n      dup4\n        /* \"#utility.yul\":12188:12206   */\n      add\n        /* \"#utility.yul\":12175:12207   */\n      calldataload\n        /* \"#utility.yul\":12234:12252   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12226:12232   */\n      dup2\n        /* \"#utility.yul\":12223:12253   */\n      gt\n        /* \"#utility.yul\":12220:12337   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":12256:12335   */\n      tag_431\n      tag_222\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12220:12337   */\n    tag_430:\n        /* \"#utility.yul\":12361:12439   */\n      tag_432\n        /* \"#utility.yul\":12431:12438   */\n      dup6\n        /* \"#utility.yul\":12422:12428   */\n      dup3\n        /* \"#utility.yul\":12411:12420   */\n      dup7\n        /* \"#utility.yul\":12407:12429   */\n      add\n        /* \"#utility.yul\":12361:12439   */\n      tag_247\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12351:12439   */\n      swap2\n      pop\n        /* \"#utility.yul\":12146:12449   */\n      pop\n        /* \"#utility.yul\":11562:12456   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12462:12576   */\n    tag_256:\n        /* \"#utility.yul\":12529:12535   */\n      0x00\n        /* \"#utility.yul\":12563:12568   */\n      dup2\n        /* \"#utility.yul\":12557:12569   */\n      mload\n        /* \"#utility.yul\":12547:12569   */\n      swap1\n      pop\n        /* \"#utility.yul\":12462:12576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12582:12766   */\n    tag_257:\n        /* \"#utility.yul\":12681:12692   */\n      0x00\n        /* \"#utility.yul\":12715:12721   */\n      dup3\n        /* \"#utility.yul\":12710:12713   */\n      dup3\n        /* \"#utility.yul\":12703:12722   */\n      mstore\n        /* \"#utility.yul\":12755:12759   */\n      0x20\n        /* \"#utility.yul\":12750:12753   */\n      dup3\n        /* \"#utility.yul\":12746:12760   */\n      add\n        /* \"#utility.yul\":12731:12760   */\n      swap1\n      pop\n        /* \"#utility.yul\":12582:12766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12772:12904   */\n    tag_258:\n        /* \"#utility.yul\":12839:12843   */\n      0x00\n        /* \"#utility.yul\":12862:12865   */\n      dup2\n        /* \"#utility.yul\":12854:12865   */\n      swap1\n      pop\n        /* \"#utility.yul\":12892:12896   */\n      0x20\n        /* \"#utility.yul\":12887:12890   */\n      dup3\n        /* \"#utility.yul\":12883:12897   */\n      add\n        /* \"#utility.yul\":12875:12897   */\n      swap1\n      pop\n        /* \"#utility.yul\":12772:12904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12910:13018   */\n    tag_259:\n        /* \"#utility.yul\":12987:13011   */\n      tag_437\n        /* \"#utility.yul\":13005:13010   */\n      dup2\n        /* \"#utility.yul\":12987:13011   */\n      tag_227\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12982:12985   */\n      dup3\n        /* \"#utility.yul\":12975:13012   */\n      mstore\n        /* \"#utility.yul\":12910:13018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13024:13203   */\n    tag_260:\n        /* \"#utility.yul\":13093:13103   */\n      0x00\n        /* \"#utility.yul\":13114:13160   */\n      tag_439\n        /* \"#utility.yul\":13156:13159   */\n      dup4\n        /* \"#utility.yul\":13148:13154   */\n      dup4\n        /* \"#utility.yul\":13114:13160   */\n      tag_259\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13192:13196   */\n      0x20\n        /* \"#utility.yul\":13187:13190   */\n      dup4\n        /* \"#utility.yul\":13183:13197   */\n      add\n        /* \"#utility.yul\":13169:13197   */\n      swap1\n      pop\n        /* \"#utility.yul\":13024:13203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13209:13322   */\n    tag_261:\n        /* \"#utility.yul\":13279:13283   */\n      0x00\n        /* \"#utility.yul\":13311:13315   */\n      0x20\n        /* \"#utility.yul\":13306:13309   */\n      dup3\n        /* \"#utility.yul\":13302:13316   */\n      add\n        /* \"#utility.yul\":13294:13316   */\n      swap1\n      pop\n        /* \"#utility.yul\":13209:13322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13358:14090   */\n    tag_262:\n        /* \"#utility.yul\":13477:13480   */\n      0x00\n        /* \"#utility.yul\":13506:13560   */\n      tag_442\n        /* \"#utility.yul\":13554:13559   */\n      dup3\n        /* \"#utility.yul\":13506:13560   */\n      tag_256\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13576:13662   */\n      tag_443\n        /* \"#utility.yul\":13655:13661   */\n      dup2\n        /* \"#utility.yul\":13650:13653   */\n      dup6\n        /* \"#utility.yul\":13576:13662   */\n      tag_257\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13569:13662   */\n      swap4\n      pop\n        /* \"#utility.yul\":13686:13742   */\n      tag_444\n        /* \"#utility.yul\":13736:13741   */\n      dup4\n        /* \"#utility.yul\":13686:13742   */\n      tag_258\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13765:13772   */\n      dup1\n        /* \"#utility.yul\":13796:13797   */\n      0x00\n        /* \"#utility.yul\":13781:14065   */\n    tag_445:\n        /* \"#utility.yul\":13806:13812   */\n      dup4\n        /* \"#utility.yul\":13803:13804   */\n      dup2\n        /* \"#utility.yul\":13800:13813   */\n      lt\n        /* \"#utility.yul\":13781:14065   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":13882:13888   */\n      dup2\n        /* \"#utility.yul\":13876:13889   */\n      mload\n        /* \"#utility.yul\":13909:13972   */\n      tag_448\n        /* \"#utility.yul\":13968:13971   */\n      dup9\n        /* \"#utility.yul\":13953:13966   */\n      dup3\n        /* \"#utility.yul\":13909:13972   */\n      tag_260\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":13902:13972   */\n      swap8\n      pop\n        /* \"#utility.yul\":13995:14055   */\n      tag_449\n        /* \"#utility.yul\":14048:14054   */\n      dup4\n        /* \"#utility.yul\":13995:14055   */\n      tag_261\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13985:14055   */\n      swap3\n      pop\n        /* \"#utility.yul\":13841:14065   */\n      pop\n        /* \"#utility.yul\":13828:13829   */\n      0x01\n        /* \"#utility.yul\":13825:13826   */\n      dup2\n        /* \"#utility.yul\":13821:13830   */\n      add\n        /* \"#utility.yul\":13816:13830   */\n      swap1\n      pop\n        /* \"#utility.yul\":13781:14065   */\n      jump(tag_445)\n    tag_447:\n        /* \"#utility.yul\":13785:13799   */\n      pop\n        /* \"#utility.yul\":14081:14084   */\n      dup6\n        /* \"#utility.yul\":14074:14084   */\n      swap4\n      pop\n        /* \"#utility.yul\":13482:14090   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13358:14090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14096:14469   */\n    tag_39:\n        /* \"#utility.yul\":14239:14243   */\n      0x00\n        /* \"#utility.yul\":14277:14279   */\n      0x20\n        /* \"#utility.yul\":14266:14275   */\n      dup3\n        /* \"#utility.yul\":14262:14280   */\n      add\n        /* \"#utility.yul\":14254:14280   */\n      swap1\n      pop\n        /* \"#utility.yul\":14326:14335   */\n      dup2\n        /* \"#utility.yul\":14320:14324   */\n      dup2\n        /* \"#utility.yul\":14316:14336   */\n      sub\n        /* \"#utility.yul\":14312:14313   */\n      0x00\n        /* \"#utility.yul\":14301:14310   */\n      dup4\n        /* \"#utility.yul\":14297:14314   */\n      add\n        /* \"#utility.yul\":14290:14337   */\n      mstore\n        /* \"#utility.yul\":14354:14462   */\n      tag_451\n        /* \"#utility.yul\":14457:14461   */\n      dup2\n        /* \"#utility.yul\":14448:14454   */\n      dup5\n        /* \"#utility.yul\":14354:14462   */\n      tag_262\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":14346:14462   */\n      swap1\n      pop\n        /* \"#utility.yul\":14096:14469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14475:14591   */\n    tag_263:\n        /* \"#utility.yul\":14545:14566   */\n      tag_453\n        /* \"#utility.yul\":14560:14565   */\n      dup2\n        /* \"#utility.yul\":14545:14566   */\n      tag_234\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14538:14543   */\n      dup2\n        /* \"#utility.yul\":14535:14567   */\n      eq\n        /* \"#utility.yul\":14525:14585   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":14581:14582   */\n      0x00\n        /* \"#utility.yul\":14578:14579   */\n      dup1\n        /* \"#utility.yul\":14571:14583   */\n      revert\n        /* \"#utility.yul\":14525:14585   */\n    tag_454:\n        /* \"#utility.yul\":14475:14591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14597:14730   */\n    tag_264:\n        /* \"#utility.yul\":14640:14645   */\n      0x00\n        /* \"#utility.yul\":14678:14684   */\n      dup2\n        /* \"#utility.yul\":14665:14685   */\n      calldataload\n        /* \"#utility.yul\":14656:14685   */\n      swap1\n      pop\n        /* \"#utility.yul\":14694:14724   */\n      tag_456\n        /* \"#utility.yul\":14718:14723   */\n      dup2\n        /* \"#utility.yul\":14694:14724   */\n      tag_263\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":14597:14730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14736:15204   */\n    tag_42:\n        /* \"#utility.yul\":14801:14807   */\n      0x00\n        /* \"#utility.yul\":14809:14815   */\n      dup1\n        /* \"#utility.yul\":14858:14860   */\n      0x40\n        /* \"#utility.yul\":14846:14855   */\n      dup4\n        /* \"#utility.yul\":14837:14844   */\n      dup6\n        /* \"#utility.yul\":14833:14856   */\n      sub\n        /* \"#utility.yul\":14829:14861   */\n      slt\n        /* \"#utility.yul\":14826:14945   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":14864:14943   */\n      tag_459\n      tag_221\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":14826:14945   */\n    tag_458:\n        /* \"#utility.yul\":14984:14985   */\n      0x00\n        /* \"#utility.yul\":15009:15062   */\n      tag_460\n        /* \"#utility.yul\":15054:15061   */\n      dup6\n        /* \"#utility.yul\":15045:15051   */\n      dup3\n        /* \"#utility.yul\":15034:15043   */\n      dup7\n        /* \"#utility.yul\":15030:15052   */\n      add\n        /* \"#utility.yul\":15009:15062   */\n      tag_226\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":14999:15062   */\n      swap3\n      pop\n        /* \"#utility.yul\":14955:15072   */\n      pop\n        /* \"#utility.yul\":15111:15113   */\n      0x20\n        /* \"#utility.yul\":15137:15187   */\n      tag_461\n        /* \"#utility.yul\":15179:15186   */\n      dup6\n        /* \"#utility.yul\":15170:15176   */\n      dup3\n        /* \"#utility.yul\":15159:15168   */\n      dup7\n        /* \"#utility.yul\":15155:15177   */\n      add\n        /* \"#utility.yul\":15137:15187   */\n      tag_264\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15127:15187   */\n      swap2\n      pop\n        /* \"#utility.yul\":15082:15197   */\n      pop\n        /* \"#utility.yul\":14736:15204   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15210:15684   */\n    tag_46:\n        /* \"#utility.yul\":15278:15284   */\n      0x00\n        /* \"#utility.yul\":15286:15292   */\n      dup1\n        /* \"#utility.yul\":15335:15337   */\n      0x40\n        /* \"#utility.yul\":15323:15332   */\n      dup4\n        /* \"#utility.yul\":15314:15321   */\n      dup6\n        /* \"#utility.yul\":15310:15333   */\n      sub\n        /* \"#utility.yul\":15306:15338   */\n      slt\n        /* \"#utility.yul\":15303:15422   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":15341:15420   */\n      tag_464\n      tag_221\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15303:15422   */\n    tag_463:\n        /* \"#utility.yul\":15461:15462   */\n      0x00\n        /* \"#utility.yul\":15486:15539   */\n      tag_465\n        /* \"#utility.yul\":15531:15538   */\n      dup6\n        /* \"#utility.yul\":15522:15528   */\n      dup3\n        /* \"#utility.yul\":15511:15520   */\n      dup7\n        /* \"#utility.yul\":15507:15529   */\n      add\n        /* \"#utility.yul\":15486:15539   */\n      tag_226\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":15476:15539   */\n      swap3\n      pop\n        /* \"#utility.yul\":15432:15549   */\n      pop\n        /* \"#utility.yul\":15588:15590   */\n      0x20\n        /* \"#utility.yul\":15614:15667   */\n      tag_466\n        /* \"#utility.yul\":15659:15666   */\n      dup6\n        /* \"#utility.yul\":15650:15656   */\n      dup3\n        /* \"#utility.yul\":15639:15648   */\n      dup7\n        /* \"#utility.yul\":15635:15657   */\n      add\n        /* \"#utility.yul\":15614:15667   */\n      tag_226\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15604:15667   */\n      swap2\n      pop\n        /* \"#utility.yul\":15559:15677   */\n      pop\n        /* \"#utility.yul\":15210:15684   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15690:16779   */\n    tag_51:\n        /* \"#utility.yul\":15794:15800   */\n      0x00\n        /* \"#utility.yul\":15802:15808   */\n      dup1\n        /* \"#utility.yul\":15810:15816   */\n      0x00\n        /* \"#utility.yul\":15818:15824   */\n      dup1\n        /* \"#utility.yul\":15826:15832   */\n      0x00\n        /* \"#utility.yul\":15875:15878   */\n      0xa0\n        /* \"#utility.yul\":15863:15872   */\n      dup7\n        /* \"#utility.yul\":15854:15861   */\n      dup9\n        /* \"#utility.yul\":15850:15873   */\n      sub\n        /* \"#utility.yul\":15846:15879   */\n      slt\n        /* \"#utility.yul\":15843:15963   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":15882:15961   */\n      tag_469\n      tag_221\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15843:15963   */\n    tag_468:\n        /* \"#utility.yul\":16002:16003   */\n      0x00\n        /* \"#utility.yul\":16027:16080   */\n      tag_470\n        /* \"#utility.yul\":16072:16079   */\n      dup9\n        /* \"#utility.yul\":16063:16069   */\n      dup3\n        /* \"#utility.yul\":16052:16061   */\n      dup10\n        /* \"#utility.yul\":16048:16070   */\n      add\n        /* \"#utility.yul\":16027:16080   */\n      tag_226\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":16017:16080   */\n      swap6\n      pop\n        /* \"#utility.yul\":15973:16090   */\n      pop\n        /* \"#utility.yul\":16129:16131   */\n      0x20\n        /* \"#utility.yul\":16155:16208   */\n      tag_471\n        /* \"#utility.yul\":16200:16207   */\n      dup9\n        /* \"#utility.yul\":16191:16197   */\n      dup3\n        /* \"#utility.yul\":16180:16189   */\n      dup10\n        /* \"#utility.yul\":16176:16198   */\n      add\n        /* \"#utility.yul\":16155:16208   */\n      tag_226\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":16145:16208   */\n      swap5\n      pop\n        /* \"#utility.yul\":16100:16218   */\n      pop\n        /* \"#utility.yul\":16257:16259   */\n      0x40\n        /* \"#utility.yul\":16283:16336   */\n      tag_472\n        /* \"#utility.yul\":16328:16335   */\n      dup9\n        /* \"#utility.yul\":16319:16325   */\n      dup3\n        /* \"#utility.yul\":16308:16317   */\n      dup10\n        /* \"#utility.yul\":16304:16326   */\n      add\n        /* \"#utility.yul\":16283:16336   */\n      tag_229\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16273:16336   */\n      swap4\n      pop\n        /* \"#utility.yul\":16228:16346   */\n      pop\n        /* \"#utility.yul\":16385:16387   */\n      0x60\n        /* \"#utility.yul\":16411:16464   */\n      tag_473\n        /* \"#utility.yul\":16456:16463   */\n      dup9\n        /* \"#utility.yul\":16447:16453   */\n      dup3\n        /* \"#utility.yul\":16436:16445   */\n      dup10\n        /* \"#utility.yul\":16432:16454   */\n      add\n        /* \"#utility.yul\":16411:16464   */\n      tag_229\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":16401:16464   */\n      swap3\n      pop\n        /* \"#utility.yul\":16356:16474   */\n      pop\n        /* \"#utility.yul\":16541:16544   */\n      0x80\n        /* \"#utility.yul\":16530:16539   */\n      dup7\n        /* \"#utility.yul\":16526:16545   */\n      add\n        /* \"#utility.yul\":16513:16546   */\n      calldataload\n        /* \"#utility.yul\":16573:16591   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16565:16571   */\n      dup2\n        /* \"#utility.yul\":16562:16592   */\n      gt\n        /* \"#utility.yul\":16559:16676   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":16595:16674   */\n      tag_475\n      tag_222\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16559:16676   */\n    tag_474:\n        /* \"#utility.yul\":16700:16762   */\n      tag_476\n        /* \"#utility.yul\":16754:16761   */\n      dup9\n        /* \"#utility.yul\":16745:16751   */\n      dup3\n        /* \"#utility.yul\":16734:16743   */\n      dup10\n        /* \"#utility.yul\":16730:16752   */\n      add\n        /* \"#utility.yul\":16700:16762   */\n      tag_252\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16690:16762   */\n      swap2\n      pop\n        /* \"#utility.yul\":16484:16772   */\n      pop\n        /* \"#utility.yul\":15690:16779   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16785:17014   */\n    tag_265:\n        /* \"#utility.yul\":16925:16959   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":16921:16922   */\n      0x00\n        /* \"#utility.yul\":16913:16919   */\n      dup3\n        /* \"#utility.yul\":16909:16923   */\n      add\n        /* \"#utility.yul\":16902:16960   */\n      mstore\n        /* \"#utility.yul\":16994:17006   */\n      0x616c6964206f776e657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16989:16991   */\n      0x20\n        /* \"#utility.yul\":16981:16987   */\n      dup3\n        /* \"#utility.yul\":16977:16992   */\n      add\n        /* \"#utility.yul\":16970:17007   */\n      mstore\n        /* \"#utility.yul\":16785:17014   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17020:17386   */\n    tag_266:\n        /* \"#utility.yul\":17162:17165   */\n      0x00\n        /* \"#utility.yul\":17183:17250   */\n      tag_479\n        /* \"#utility.yul\":17247:17249   */\n      0x2a\n        /* \"#utility.yul\":17242:17245   */\n      dup4\n        /* \"#utility.yul\":17183:17250   */\n      tag_237\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17176:17250   */\n      swap2\n      pop\n        /* \"#utility.yul\":17259:17352   */\n      tag_480\n        /* \"#utility.yul\":17348:17351   */\n      dup3\n        /* \"#utility.yul\":17259:17352   */\n      tag_265\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":17377:17379   */\n      0x40\n        /* \"#utility.yul\":17372:17375   */\n      dup3\n        /* \"#utility.yul\":17368:17380   */\n      add\n        /* \"#utility.yul\":17361:17380   */\n      swap1\n      pop\n        /* \"#utility.yul\":17020:17386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17392:17811   */\n    tag_56:\n        /* \"#utility.yul\":17558:17562   */\n      0x00\n        /* \"#utility.yul\":17596:17598   */\n      0x20\n        /* \"#utility.yul\":17585:17594   */\n      dup3\n        /* \"#utility.yul\":17581:17599   */\n      add\n        /* \"#utility.yul\":17573:17599   */\n      swap1\n      pop\n        /* \"#utility.yul\":17645:17654   */\n      dup2\n        /* \"#utility.yul\":17639:17643   */\n      dup2\n        /* \"#utility.yul\":17635:17655   */\n      sub\n        /* \"#utility.yul\":17631:17632   */\n      0x00\n        /* \"#utility.yul\":17620:17629   */\n      dup4\n        /* \"#utility.yul\":17616:17633   */\n      add\n        /* \"#utility.yul\":17609:17656   */\n      mstore\n        /* \"#utility.yul\":17673:17804   */\n      tag_482\n        /* \"#utility.yul\":17799:17803   */\n      dup2\n        /* \"#utility.yul\":17673:17804   */\n      tag_266\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17665:17804   */\n      swap1\n      pop\n        /* \"#utility.yul\":17392:17811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17817:17997   */\n    tag_267:\n        /* \"#utility.yul\":17865:17942   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17862:17863   */\n      0x00\n        /* \"#utility.yul\":17855:17943   */\n      mstore\n        /* \"#utility.yul\":17962:17966   */\n      0x22\n        /* \"#utility.yul\":17959:17960   */\n      0x04\n        /* \"#utility.yul\":17952:17967   */\n      mstore\n        /* \"#utility.yul\":17986:17990   */\n      0x24\n        /* \"#utility.yul\":17983:17984   */\n      0x00\n        /* \"#utility.yul\":17976:17991   */\n      revert\n        /* \"#utility.yul\":18003:18323   */\n    tag_64:\n        /* \"#utility.yul\":18047:18053   */\n      0x00\n        /* \"#utility.yul\":18084:18085   */\n      0x02\n        /* \"#utility.yul\":18078:18082   */\n      dup3\n        /* \"#utility.yul\":18074:18086   */\n      div\n        /* \"#utility.yul\":18064:18086   */\n      swap1\n      pop\n        /* \"#utility.yul\":18131:18132   */\n      0x01\n        /* \"#utility.yul\":18125:18129   */\n      dup3\n        /* \"#utility.yul\":18121:18133   */\n      and\n        /* \"#utility.yul\":18152:18170   */\n      dup1\n        /* \"#utility.yul\":18142:18223   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":18208:18212   */\n      0x7f\n        /* \"#utility.yul\":18200:18206   */\n      dup3\n        /* \"#utility.yul\":18196:18213   */\n      and\n        /* \"#utility.yul\":18186:18213   */\n      swap2\n      pop\n        /* \"#utility.yul\":18142:18223   */\n    tag_485:\n        /* \"#utility.yul\":18270:18272   */\n      0x20\n        /* \"#utility.yul\":18262:18268   */\n      dup3\n        /* \"#utility.yul\":18259:18273   */\n      lt\n        /* \"#utility.yul\":18239:18257   */\n      dup2\n        /* \"#utility.yul\":18236:18274   */\n      eq\n        /* \"#utility.yul\":18233:18317   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":18289:18307   */\n      tag_487\n      tag_267\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":18233:18317   */\n    tag_486:\n        /* \"#utility.yul\":18054:18323   */\n      pop\n        /* \"#utility.yul\":18003:18323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18329:18563   */\n    tag_268:\n        /* \"#utility.yul\":18469:18503   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":18465:18466   */\n      0x00\n        /* \"#utility.yul\":18457:18463   */\n      dup3\n        /* \"#utility.yul\":18453:18467   */\n      add\n        /* \"#utility.yul\":18446:18504   */\n      mstore\n        /* \"#utility.yul\":18538:18555   */\n      0x6572206e6f7220617070726f7665640000000000000000000000000000000000\n        /* \"#utility.yul\":18533:18535   */\n      0x20\n        /* \"#utility.yul\":18525:18531   */\n      dup3\n        /* \"#utility.yul\":18521:18536   */\n      add\n        /* \"#utility.yul\":18514:18556   */\n      mstore\n        /* \"#utility.yul\":18329:18563   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18569:18935   */\n    tag_269:\n        /* \"#utility.yul\":18711:18714   */\n      0x00\n        /* \"#utility.yul\":18732:18799   */\n      tag_490\n        /* \"#utility.yul\":18796:18798   */\n      0x2f\n        /* \"#utility.yul\":18791:18794   */\n      dup4\n        /* \"#utility.yul\":18732:18799   */\n      tag_237\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":18725:18799   */\n      swap2\n      pop\n        /* \"#utility.yul\":18808:18901   */\n      tag_491\n        /* \"#utility.yul\":18897:18900   */\n      dup3\n        /* \"#utility.yul\":18808:18901   */\n      tag_268\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":18926:18928   */\n      0x40\n        /* \"#utility.yul\":18921:18924   */\n      dup3\n        /* \"#utility.yul\":18917:18929   */\n      add\n        /* \"#utility.yul\":18910:18929   */\n      swap1\n      pop\n        /* \"#utility.yul\":18569:18935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18941:19360   */\n    tag_77:\n        /* \"#utility.yul\":19107:19111   */\n      0x00\n        /* \"#utility.yul\":19145:19147   */\n      0x20\n        /* \"#utility.yul\":19134:19143   */\n      dup3\n        /* \"#utility.yul\":19130:19148   */\n      add\n        /* \"#utility.yul\":19122:19148   */\n      swap1\n      pop\n        /* \"#utility.yul\":19194:19203   */\n      dup2\n        /* \"#utility.yul\":19188:19192   */\n      dup2\n        /* \"#utility.yul\":19184:19204   */\n      sub\n        /* \"#utility.yul\":19180:19181   */\n      0x00\n        /* \"#utility.yul\":19169:19178   */\n      dup4\n        /* \"#utility.yul\":19165:19182   */\n      add\n        /* \"#utility.yul\":19158:19205   */\n      mstore\n        /* \"#utility.yul\":19222:19353   */\n      tag_493\n        /* \"#utility.yul\":19348:19352   */\n      dup2\n        /* \"#utility.yul\":19222:19353   */\n      tag_269\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":19214:19353   */\n      swap1\n      pop\n        /* \"#utility.yul\":18941:19360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19366:19594   */\n    tag_270:\n        /* \"#utility.yul\":19506:19540   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":19502:19503   */\n      0x00\n        /* \"#utility.yul\":19494:19500   */\n      dup3\n        /* \"#utility.yul\":19490:19504   */\n      add\n        /* \"#utility.yul\":19483:19541   */\n      mstore\n        /* \"#utility.yul\":19575:19586   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19570:19572   */\n      0x20\n        /* \"#utility.yul\":19562:19568   */\n      dup3\n        /* \"#utility.yul\":19558:19573   */\n      add\n        /* \"#utility.yul\":19551:19587   */\n      mstore\n        /* \"#utility.yul\":19366:19594   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19600:19966   */\n    tag_271:\n        /* \"#utility.yul\":19742:19745   */\n      0x00\n        /* \"#utility.yul\":19763:19830   */\n      tag_496\n        /* \"#utility.yul\":19827:19829   */\n      0x29\n        /* \"#utility.yul\":19822:19825   */\n      dup4\n        /* \"#utility.yul\":19763:19830   */\n      tag_237\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":19756:19830   */\n      swap2\n      pop\n        /* \"#utility.yul\":19839:19932   */\n      tag_497\n        /* \"#utility.yul\":19928:19931   */\n      dup3\n        /* \"#utility.yul\":19839:19932   */\n      tag_270\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":19957:19959   */\n      0x40\n        /* \"#utility.yul\":19952:19955   */\n      dup3\n        /* \"#utility.yul\":19948:19960   */\n      add\n        /* \"#utility.yul\":19941:19960   */\n      swap1\n      pop\n        /* \"#utility.yul\":19600:19966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19972:20391   */\n    tag_83:\n        /* \"#utility.yul\":20138:20142   */\n      0x00\n        /* \"#utility.yul\":20176:20178   */\n      0x20\n        /* \"#utility.yul\":20165:20174   */\n      dup3\n        /* \"#utility.yul\":20161:20179   */\n      add\n        /* \"#utility.yul\":20153:20179   */\n      swap1\n      pop\n        /* \"#utility.yul\":20225:20234   */\n      dup2\n        /* \"#utility.yul\":20219:20223   */\n      dup2\n        /* \"#utility.yul\":20215:20235   */\n      sub\n        /* \"#utility.yul\":20211:20212   */\n      0x00\n        /* \"#utility.yul\":20200:20209   */\n      dup4\n        /* \"#utility.yul\":20196:20213   */\n      add\n        /* \"#utility.yul\":20189:20236   */\n      mstore\n        /* \"#utility.yul\":20253:20384   */\n      tag_499\n        /* \"#utility.yul\":20379:20383   */\n      dup2\n        /* \"#utility.yul\":20253:20384   */\n      tag_271\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":20245:20384   */\n      swap1\n      pop\n        /* \"#utility.yul\":19972:20391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20397:20577   */\n    tag_94:\n        /* \"#utility.yul\":20445:20522   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20442:20443   */\n      0x00\n        /* \"#utility.yul\":20435:20523   */\n      mstore\n        /* \"#utility.yul\":20542:20546   */\n      0x32\n        /* \"#utility.yul\":20539:20540   */\n      0x04\n        /* \"#utility.yul\":20532:20547   */\n      mstore\n        /* \"#utility.yul\":20566:20570   */\n      0x24\n        /* \"#utility.yul\":20563:20564   */\n      0x00\n        /* \"#utility.yul\":20556:20571   */\n      revert\n        /* \"#utility.yul\":20583:20763   */\n    tag_272:\n        /* \"#utility.yul\":20631:20708   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20628:20629   */\n      0x00\n        /* \"#utility.yul\":20621:20709   */\n      mstore\n        /* \"#utility.yul\":20728:20732   */\n      0x11\n        /* \"#utility.yul\":20725:20726   */\n      0x04\n        /* \"#utility.yul\":20718:20733   */\n      mstore\n        /* \"#utility.yul\":20752:20756   */\n      0x24\n        /* \"#utility.yul\":20749:20750   */\n      0x00\n        /* \"#utility.yul\":20742:20757   */\n      revert\n        /* \"#utility.yul\":20769:21002   */\n    tag_100:\n        /* \"#utility.yul\":20808:20811   */\n      0x00\n        /* \"#utility.yul\":20831:20855   */\n      tag_503\n        /* \"#utility.yul\":20849:20854   */\n      dup3\n        /* \"#utility.yul\":20831:20855   */\n      tag_227\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":20822:20855   */\n      swap2\n      pop\n        /* \"#utility.yul\":20877:20943   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20870:20875   */\n      dup3\n        /* \"#utility.yul\":20867:20944   */\n      eq\n        /* \"#utility.yul\":20864:20967   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":20947:20965   */\n      tag_505\n      tag_272\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":20864:20967   */\n    tag_504:\n        /* \"#utility.yul\":20994:20995   */\n      0x01\n        /* \"#utility.yul\":20987:20992   */\n      dup3\n        /* \"#utility.yul\":20983:20996   */\n      add\n        /* \"#utility.yul\":20976:20996   */\n      swap1\n      pop\n        /* \"#utility.yul\":20769:21002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21008:21235   */\n    tag_273:\n        /* \"#utility.yul\":21148:21182   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":21144:21145   */\n      0x00\n        /* \"#utility.yul\":21136:21142   */\n      dup3\n        /* \"#utility.yul\":21132:21146   */\n      add\n        /* \"#utility.yul\":21125:21183   */\n      mstore\n        /* \"#utility.yul\":21217:21227   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21212:21214   */\n      0x20\n        /* \"#utility.yul\":21204:21210   */\n      dup3\n        /* \"#utility.yul\":21200:21215   */\n      add\n        /* \"#utility.yul\":21193:21228   */\n      mstore\n        /* \"#utility.yul\":21008:21235   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21241:21607   */\n    tag_274:\n        /* \"#utility.yul\":21383:21386   */\n      0x00\n        /* \"#utility.yul\":21404:21471   */\n      tag_508\n        /* \"#utility.yul\":21468:21470   */\n      0x28\n        /* \"#utility.yul\":21463:21466   */\n      dup4\n        /* \"#utility.yul\":21404:21471   */\n      tag_237\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":21397:21471   */\n      swap2\n      pop\n        /* \"#utility.yul\":21480:21573   */\n      tag_509\n        /* \"#utility.yul\":21569:21572   */\n      dup3\n        /* \"#utility.yul\":21480:21573   */\n      tag_273\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":21598:21600   */\n      0x40\n        /* \"#utility.yul\":21593:21596   */\n      dup3\n        /* \"#utility.yul\":21589:21601   */\n      add\n        /* \"#utility.yul\":21582:21601   */\n      swap1\n      pop\n        /* \"#utility.yul\":21241:21607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21613:22032   */\n    tag_120:\n        /* \"#utility.yul\":21779:21783   */\n      0x00\n        /* \"#utility.yul\":21817:21819   */\n      0x20\n        /* \"#utility.yul\":21806:21815   */\n      dup3\n        /* \"#utility.yul\":21802:21820   */\n      add\n        /* \"#utility.yul\":21794:21820   */\n      swap1\n      pop\n        /* \"#utility.yul\":21866:21875   */\n      dup2\n        /* \"#utility.yul\":21860:21864   */\n      dup2\n        /* \"#utility.yul\":21856:21876   */\n      sub\n        /* \"#utility.yul\":21852:21853   */\n      0x00\n        /* \"#utility.yul\":21841:21850   */\n      dup4\n        /* \"#utility.yul\":21837:21854   */\n      add\n        /* \"#utility.yul\":21830:21877   */\n      mstore\n        /* \"#utility.yul\":21894:22025   */\n      tag_511\n        /* \"#utility.yul\":22020:22024   */\n      dup2\n        /* \"#utility.yul\":21894:22025   */\n      tag_274\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":21886:22025   */\n      swap1\n      pop\n        /* \"#utility.yul\":21613:22032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22038:22262   */\n    tag_275:\n        /* \"#utility.yul\":22178:22212   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":22174:22175   */\n      0x00\n        /* \"#utility.yul\":22166:22172   */\n      dup3\n        /* \"#utility.yul\":22162:22176   */\n      add\n        /* \"#utility.yul\":22155:22213   */\n      mstore\n        /* \"#utility.yul\":22247:22254   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22242:22244   */\n      0x20\n        /* \"#utility.yul\":22234:22240   */\n      dup3\n        /* \"#utility.yul\":22230:22245   */\n      add\n        /* \"#utility.yul\":22223:22255   */\n      mstore\n        /* \"#utility.yul\":22038:22262   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22268:22634   */\n    tag_276:\n        /* \"#utility.yul\":22410:22413   */\n      0x00\n        /* \"#utility.yul\":22431:22498   */\n      tag_514\n        /* \"#utility.yul\":22495:22497   */\n      0x25\n        /* \"#utility.yul\":22490:22493   */\n      dup4\n        /* \"#utility.yul\":22431:22498   */\n      tag_237\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":22424:22498   */\n      swap2\n      pop\n        /* \"#utility.yul\":22507:22600   */\n      tag_515\n        /* \"#utility.yul\":22596:22599   */\n      dup3\n        /* \"#utility.yul\":22507:22600   */\n      tag_275\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":22625:22627   */\n      0x40\n        /* \"#utility.yul\":22620:22623   */\n      dup3\n        /* \"#utility.yul\":22616:22628   */\n      add\n        /* \"#utility.yul\":22609:22628   */\n      swap1\n      pop\n        /* \"#utility.yul\":22268:22634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22640:23059   */\n    tag_123:\n        /* \"#utility.yul\":22806:22810   */\n      0x00\n        /* \"#utility.yul\":22844:22846   */\n      0x20\n        /* \"#utility.yul\":22833:22842   */\n      dup3\n        /* \"#utility.yul\":22829:22847   */\n      add\n        /* \"#utility.yul\":22821:22847   */\n      swap1\n      pop\n        /* \"#utility.yul\":22893:22902   */\n      dup2\n        /* \"#utility.yul\":22887:22891   */\n      dup2\n        /* \"#utility.yul\":22883:22903   */\n      sub\n        /* \"#utility.yul\":22879:22880   */\n      0x00\n        /* \"#utility.yul\":22868:22877   */\n      dup4\n        /* \"#utility.yul\":22864:22881   */\n      add\n        /* \"#utility.yul\":22857:22904   */\n      mstore\n        /* \"#utility.yul\":22921:23052   */\n      tag_517\n        /* \"#utility.yul\":23047:23051   */\n      dup2\n        /* \"#utility.yul\":22921:23052   */\n      tag_276\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":22913:23052   */\n      swap1\n      pop\n        /* \"#utility.yul\":22640:23059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23065:23294   */\n    tag_277:\n        /* \"#utility.yul\":23205:23239   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":23201:23202   */\n      0x00\n        /* \"#utility.yul\":23193:23199   */\n      dup3\n        /* \"#utility.yul\":23189:23203   */\n      add\n        /* \"#utility.yul\":23182:23240   */\n      mstore\n        /* \"#utility.yul\":23274:23286   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23269:23271   */\n      0x20\n        /* \"#utility.yul\":23261:23267   */\n      dup3\n        /* \"#utility.yul\":23257:23272   */\n      add\n        /* \"#utility.yul\":23250:23287   */\n      mstore\n        /* \"#utility.yul\":23065:23294   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23300:23666   */\n    tag_278:\n        /* \"#utility.yul\":23442:23445   */\n      0x00\n        /* \"#utility.yul\":23463:23530   */\n      tag_520\n        /* \"#utility.yul\":23527:23529   */\n      0x2a\n        /* \"#utility.yul\":23522:23525   */\n      dup4\n        /* \"#utility.yul\":23463:23530   */\n      tag_237\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":23456:23530   */\n      swap2\n      pop\n        /* \"#utility.yul\":23539:23632   */\n      tag_521\n        /* \"#utility.yul\":23628:23631   */\n      dup3\n        /* \"#utility.yul\":23539:23632   */\n      tag_277\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":23657:23659   */\n      0x40\n        /* \"#utility.yul\":23652:23655   */\n      dup3\n        /* \"#utility.yul\":23648:23660   */\n      add\n        /* \"#utility.yul\":23641:23660   */\n      swap1\n      pop\n        /* \"#utility.yul\":23300:23666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23672:24091   */\n    tag_136:\n        /* \"#utility.yul\":23838:23842   */\n      0x00\n        /* \"#utility.yul\":23876:23878   */\n      0x20\n        /* \"#utility.yul\":23865:23874   */\n      dup3\n        /* \"#utility.yul\":23861:23879   */\n      add\n        /* \"#utility.yul\":23853:23879   */\n      swap1\n      pop\n        /* \"#utility.yul\":23925:23934   */\n      dup2\n        /* \"#utility.yul\":23919:23923   */\n      dup2\n        /* \"#utility.yul\":23915:23935   */\n      sub\n        /* \"#utility.yul\":23911:23912   */\n      0x00\n        /* \"#utility.yul\":23900:23909   */\n      dup4\n        /* \"#utility.yul\":23896:23913   */\n      add\n        /* \"#utility.yul\":23889:23936   */\n      mstore\n        /* \"#utility.yul\":23953:24084   */\n      tag_523\n        /* \"#utility.yul\":24079:24083   */\n      dup2\n        /* \"#utility.yul\":23953:24084   */\n      tag_278\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":23945:24084   */\n      swap1\n      pop\n        /* \"#utility.yul\":23672:24091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24097:24402   */\n    tag_138:\n        /* \"#utility.yul\":24137:24140   */\n      0x00\n        /* \"#utility.yul\":24156:24176   */\n      tag_525\n        /* \"#utility.yul\":24174:24175   */\n      dup3\n        /* \"#utility.yul\":24156:24176   */\n      tag_227\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":24151:24176   */\n      swap2\n      pop\n        /* \"#utility.yul\":24190:24210   */\n      tag_526\n        /* \"#utility.yul\":24208:24209   */\n      dup4\n        /* \"#utility.yul\":24190:24210   */\n      tag_227\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":24185:24210   */\n      swap3\n      pop\n        /* \"#utility.yul\":24344:24345   */\n      dup3\n        /* \"#utility.yul\":24276:24342   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24272:24346   */\n      sub\n        /* \"#utility.yul\":24269:24270   */\n      dup3\n        /* \"#utility.yul\":24266:24347   */\n      gt\n        /* \"#utility.yul\":24263:24370   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":24350:24368   */\n      tag_528\n      tag_272\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":24263:24370   */\n    tag_527:\n        /* \"#utility.yul\":24394:24395   */\n      dup3\n        /* \"#utility.yul\":24391:24392   */\n      dup3\n        /* \"#utility.yul\":24387:24396   */\n      add\n        /* \"#utility.yul\":24380:24396   */\n      swap1\n      pop\n        /* \"#utility.yul\":24097:24402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24408:25042   */\n    tag_141:\n        /* \"#utility.yul\":24629:24633   */\n      0x00\n        /* \"#utility.yul\":24667:24669   */\n      0x40\n        /* \"#utility.yul\":24656:24665   */\n      dup3\n        /* \"#utility.yul\":24652:24670   */\n      add\n        /* \"#utility.yul\":24644:24670   */\n      swap1\n      pop\n        /* \"#utility.yul\":24716:24725   */\n      dup2\n        /* \"#utility.yul\":24710:24714   */\n      dup2\n        /* \"#utility.yul\":24706:24726   */\n      sub\n        /* \"#utility.yul\":24702:24703   */\n      0x00\n        /* \"#utility.yul\":24691:24700   */\n      dup4\n        /* \"#utility.yul\":24687:24704   */\n      add\n        /* \"#utility.yul\":24680:24727   */\n      mstore\n        /* \"#utility.yul\":24744:24852   */\n      tag_530\n        /* \"#utility.yul\":24847:24851   */\n      dup2\n        /* \"#utility.yul\":24838:24844   */\n      dup6\n        /* \"#utility.yul\":24744:24852   */\n      tag_262\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":24736:24852   */\n      swap1\n      pop\n        /* \"#utility.yul\":24899:24908   */\n      dup2\n        /* \"#utility.yul\":24893:24897   */\n      dup2\n        /* \"#utility.yul\":24889:24909   */\n      sub\n        /* \"#utility.yul\":24884:24886   */\n      0x20\n        /* \"#utility.yul\":24873:24882   */\n      dup4\n        /* \"#utility.yul\":24869:24887   */\n      add\n        /* \"#utility.yul\":24862:24910   */\n      mstore\n        /* \"#utility.yul\":24927:25035   */\n      tag_531\n        /* \"#utility.yul\":25030:25034   */\n      dup2\n        /* \"#utility.yul\":25021:25027   */\n      dup5\n        /* \"#utility.yul\":24927:25035   */\n      tag_262\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":24919:25035   */\n      swap1\n      pop\n        /* \"#utility.yul\":24408:25042   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25048:25276   */\n    tag_279:\n        /* \"#utility.yul\":25188:25222   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":25184:25185   */\n      0x00\n        /* \"#utility.yul\":25176:25182   */\n      dup3\n        /* \"#utility.yul\":25172:25186   */\n      add\n        /* \"#utility.yul\":25165:25223   */\n      mstore\n        /* \"#utility.yul\":25257:25268   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25252:25254   */\n      0x20\n        /* \"#utility.yul\":25244:25250   */\n      dup3\n        /* \"#utility.yul\":25240:25255   */\n      add\n        /* \"#utility.yul\":25233:25269   */\n      mstore\n        /* \"#utility.yul\":25048:25276   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25282:25648   */\n    tag_280:\n        /* \"#utility.yul\":25424:25427   */\n      0x00\n        /* \"#utility.yul\":25445:25512   */\n      tag_534\n        /* \"#utility.yul\":25509:25511   */\n      0x29\n        /* \"#utility.yul\":25504:25507   */\n      dup4\n        /* \"#utility.yul\":25445:25512   */\n      tag_237\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":25438:25512   */\n      swap2\n      pop\n        /* \"#utility.yul\":25521:25614   */\n      tag_535\n        /* \"#utility.yul\":25610:25613   */\n      dup3\n        /* \"#utility.yul\":25521:25614   */\n      tag_279\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":25639:25641   */\n      0x40\n        /* \"#utility.yul\":25634:25637   */\n      dup3\n        /* \"#utility.yul\":25630:25642   */\n      add\n        /* \"#utility.yul\":25623:25642   */\n      swap1\n      pop\n        /* \"#utility.yul\":25282:25648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25654:26073   */\n    tag_149:\n        /* \"#utility.yul\":25820:25824   */\n      0x00\n        /* \"#utility.yul\":25858:25860   */\n      0x20\n        /* \"#utility.yul\":25847:25856   */\n      dup3\n        /* \"#utility.yul\":25843:25861   */\n      add\n        /* \"#utility.yul\":25835:25861   */\n      swap1\n      pop\n        /* \"#utility.yul\":25907:25916   */\n      dup2\n        /* \"#utility.yul\":25901:25905   */\n      dup2\n        /* \"#utility.yul\":25897:25917   */\n      sub\n        /* \"#utility.yul\":25893:25894   */\n      0x00\n        /* \"#utility.yul\":25882:25891   */\n      dup4\n        /* \"#utility.yul\":25878:25895   */\n      add\n        /* \"#utility.yul\":25871:25918   */\n      mstore\n        /* \"#utility.yul\":25935:26066   */\n      tag_537\n        /* \"#utility.yul\":26061:26065   */\n      dup2\n        /* \"#utility.yul\":25935:26066   */\n      tag_280\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":25927:26066   */\n      swap1\n      pop\n        /* \"#utility.yul\":25654:26073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26079:26411   */\n    tag_163:\n        /* \"#utility.yul\":26200:26204   */\n      0x00\n        /* \"#utility.yul\":26238:26240   */\n      0x40\n        /* \"#utility.yul\":26227:26236   */\n      dup3\n        /* \"#utility.yul\":26223:26241   */\n      add\n        /* \"#utility.yul\":26215:26241   */\n      swap1\n      pop\n        /* \"#utility.yul\":26251:26322   */\n      tag_539\n        /* \"#utility.yul\":26319:26320   */\n      0x00\n        /* \"#utility.yul\":26308:26317   */\n      dup4\n        /* \"#utility.yul\":26304:26321   */\n      add\n        /* \"#utility.yul\":26295:26301   */\n      dup6\n        /* \"#utility.yul\":26251:26322   */\n      tag_230\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":26332:26404   */\n      tag_540\n        /* \"#utility.yul\":26400:26402   */\n      0x20\n        /* \"#utility.yul\":26389:26398   */\n      dup4\n        /* \"#utility.yul\":26385:26403   */\n      add\n        /* \"#utility.yul\":26376:26382   */\n      dup5\n        /* \"#utility.yul\":26332:26404   */\n      tag_230\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":26079:26411   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26417:26535   */\n    tag_281:\n        /* \"#utility.yul\":26504:26528   */\n      tag_542\n        /* \"#utility.yul\":26522:26527   */\n      dup2\n        /* \"#utility.yul\":26504:26528   */\n      tag_224\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":26499:26502   */\n      dup3\n        /* \"#utility.yul\":26492:26529   */\n      mstore\n        /* \"#utility.yul\":26417:26535   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26541:26639   */\n    tag_282:\n        /* \"#utility.yul\":26592:26598   */\n      0x00\n        /* \"#utility.yul\":26626:26631   */\n      dup2\n        /* \"#utility.yul\":26620:26632   */\n      mload\n        /* \"#utility.yul\":26610:26632   */\n      swap1\n      pop\n        /* \"#utility.yul\":26541:26639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26645:26813   */\n    tag_283:\n        /* \"#utility.yul\":26728:26739   */\n      0x00\n        /* \"#utility.yul\":26762:26768   */\n      dup3\n        /* \"#utility.yul\":26757:26760   */\n      dup3\n        /* \"#utility.yul\":26750:26769   */\n      mstore\n        /* \"#utility.yul\":26802:26806   */\n      0x20\n        /* \"#utility.yul\":26797:26800   */\n      dup3\n        /* \"#utility.yul\":26793:26807   */\n      add\n        /* \"#utility.yul\":26778:26807   */\n      swap1\n      pop\n        /* \"#utility.yul\":26645:26813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26819:27179   */\n    tag_284:\n        /* \"#utility.yul\":26905:26908   */\n      0x00\n        /* \"#utility.yul\":26933:26971   */\n      tag_546\n        /* \"#utility.yul\":26965:26970   */\n      dup3\n        /* \"#utility.yul\":26933:26971   */\n      tag_282\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":26987:27057   */\n      tag_547\n        /* \"#utility.yul\":27050:27056   */\n      dup2\n        /* \"#utility.yul\":27045:27048   */\n      dup6\n        /* \"#utility.yul\":26987:27057   */\n      tag_283\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":26980:27057   */\n      swap4\n      pop\n        /* \"#utility.yul\":27066:27118   */\n      tag_548\n        /* \"#utility.yul\":27111:27117   */\n      dup2\n        /* \"#utility.yul\":27106:27109   */\n      dup6\n        /* \"#utility.yul\":27099:27103   */\n      0x20\n        /* \"#utility.yul\":27092:27097   */\n      dup7\n        /* \"#utility.yul\":27088:27104   */\n      add\n        /* \"#utility.yul\":27066:27118   */\n      tag_238\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":27143:27172   */\n      tag_549\n        /* \"#utility.yul\":27165:27171   */\n      dup2\n        /* \"#utility.yul\":27143:27172   */\n      tag_239\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":27138:27141   */\n      dup5\n        /* \"#utility.yul\":27134:27173   */\n      add\n        /* \"#utility.yul\":27127:27173   */\n      swap2\n      pop\n        /* \"#utility.yul\":26909:27179   */\n      pop\n        /* \"#utility.yul\":26819:27179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27185:28238   */\n    tag_174:\n        /* \"#utility.yul\":27508:27512   */\n      0x00\n        /* \"#utility.yul\":27546:27549   */\n      0xa0\n        /* \"#utility.yul\":27535:27544   */\n      dup3\n        /* \"#utility.yul\":27531:27550   */\n      add\n        /* \"#utility.yul\":27523:27550   */\n      swap1\n      pop\n        /* \"#utility.yul\":27560:27631   */\n      tag_551\n        /* \"#utility.yul\":27628:27629   */\n      0x00\n        /* \"#utility.yul\":27617:27626   */\n      dup4\n        /* \"#utility.yul\":27613:27630   */\n      add\n        /* \"#utility.yul\":27604:27610   */\n      dup9\n        /* \"#utility.yul\":27560:27631   */\n      tag_281\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":27641:27713   */\n      tag_552\n        /* \"#utility.yul\":27709:27711   */\n      0x20\n        /* \"#utility.yul\":27698:27707   */\n      dup4\n        /* \"#utility.yul\":27694:27712   */\n      add\n        /* \"#utility.yul\":27685:27691   */\n      dup8\n        /* \"#utility.yul\":27641:27713   */\n      tag_281\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":27760:27769   */\n      dup2\n        /* \"#utility.yul\":27754:27758   */\n      dup2\n        /* \"#utility.yul\":27750:27770   */\n      sub\n        /* \"#utility.yul\":27745:27747   */\n      0x40\n        /* \"#utility.yul\":27734:27743   */\n      dup4\n        /* \"#utility.yul\":27730:27748   */\n      add\n        /* \"#utility.yul\":27723:27771   */\n      mstore\n        /* \"#utility.yul\":27788:27896   */\n      tag_553\n        /* \"#utility.yul\":27891:27895   */\n      dup2\n        /* \"#utility.yul\":27882:27888   */\n      dup7\n        /* \"#utility.yul\":27788:27896   */\n      tag_262\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":27780:27896   */\n      swap1\n      pop\n        /* \"#utility.yul\":27943:27952   */\n      dup2\n        /* \"#utility.yul\":27937:27941   */\n      dup2\n        /* \"#utility.yul\":27933:27953   */\n      sub\n        /* \"#utility.yul\":27928:27930   */\n      0x60\n        /* \"#utility.yul\":27917:27926   */\n      dup4\n        /* \"#utility.yul\":27913:27931   */\n      add\n        /* \"#utility.yul\":27906:27954   */\n      mstore\n        /* \"#utility.yul\":27971:28079   */\n      tag_554\n        /* \"#utility.yul\":28074:28078   */\n      dup2\n        /* \"#utility.yul\":28065:28071   */\n      dup6\n        /* \"#utility.yul\":27971:28079   */\n      tag_262\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":27963:28079   */\n      swap1\n      pop\n        /* \"#utility.yul\":28127:28136   */\n      dup2\n        /* \"#utility.yul\":28121:28125   */\n      dup2\n        /* \"#utility.yul\":28117:28137   */\n      sub\n        /* \"#utility.yul\":28111:28114   */\n      0x80\n        /* \"#utility.yul\":28100:28109   */\n      dup4\n        /* \"#utility.yul\":28096:28115   */\n      add\n        /* \"#utility.yul\":28089:28138   */\n      mstore\n        /* \"#utility.yul\":28155:28231   */\n      tag_555\n        /* \"#utility.yul\":28226:28230   */\n      dup2\n        /* \"#utility.yul\":28217:28223   */\n      dup5\n        /* \"#utility.yul\":28155:28231   */\n      tag_284\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":28147:28231   */\n      swap1\n      pop\n        /* \"#utility.yul\":27185:28238   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28244:28385   */\n    tag_285:\n        /* \"#utility.yul\":28300:28305   */\n      0x00\n        /* \"#utility.yul\":28331:28337   */\n      dup2\n        /* \"#utility.yul\":28325:28338   */\n      mload\n        /* \"#utility.yul\":28316:28338   */\n      swap1\n      pop\n        /* \"#utility.yul\":28347:28379   */\n      tag_557\n        /* \"#utility.yul\":28373:28378   */\n      dup2\n        /* \"#utility.yul\":28347:28379   */\n      tag_232\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":28244:28385   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28391:28740   */\n    tag_177:\n        /* \"#utility.yul\":28460:28466   */\n      0x00\n        /* \"#utility.yul\":28509:28511   */\n      0x20\n        /* \"#utility.yul\":28497:28506   */\n      dup3\n        /* \"#utility.yul\":28488:28495   */\n      dup5\n        /* \"#utility.yul\":28484:28507   */\n      sub\n        /* \"#utility.yul\":28480:28512   */\n      slt\n        /* \"#utility.yul\":28477:28596   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":28515:28594   */\n      tag_560\n      tag_221\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":28477:28596   */\n    tag_559:\n        /* \"#utility.yul\":28635:28636   */\n      0x00\n        /* \"#utility.yul\":28660:28723   */\n      tag_561\n        /* \"#utility.yul\":28715:28722   */\n      dup5\n        /* \"#utility.yul\":28706:28712   */\n      dup3\n        /* \"#utility.yul\":28695:28704   */\n      dup6\n        /* \"#utility.yul\":28691:28713   */\n      add\n        /* \"#utility.yul\":28660:28723   */\n      tag_285\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":28650:28723   */\n      swap2\n      pop\n        /* \"#utility.yul\":28606:28733   */\n      pop\n        /* \"#utility.yul\":28391:28740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28746:28852   */\n    tag_286:\n        /* \"#utility.yul\":28790:28798   */\n      0x00\n        /* \"#utility.yul\":28839:28844   */\n      dup2\n        /* \"#utility.yul\":28834:28837   */\n      0xe0\n        /* \"#utility.yul\":28830:28845   */\n      shr\n        /* \"#utility.yul\":28809:28845   */\n      swap1\n      pop\n        /* \"#utility.yul\":28746:28852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28858:29041   */\n    tag_183:\n        /* \"#utility.yul\":28893:28896   */\n      0x00\n        /* \"#utility.yul\":28931:28932   */\n      0x03\n        /* \"#utility.yul\":28913:28929   */\n      returndatasize\n        /* \"#utility.yul\":28910:28933   */\n      gt\n        /* \"#utility.yul\":28907:29035   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":28969:28970   */\n      0x04\n        /* \"#utility.yul\":28966:28967   */\n      0x00\n        /* \"#utility.yul\":28963:28964   */\n      dup1\n        /* \"#utility.yul\":28948:28971   */\n      returndatacopy\n        /* \"#utility.yul\":28991:29025   */\n      tag_565\n        /* \"#utility.yul\":29022:29023   */\n      0x00\n        /* \"#utility.yul\":29016:29024   */\n      mload\n        /* \"#utility.yul\":28991:29025   */\n      tag_286\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":28984:29025   */\n      swap1\n      pop\n        /* \"#utility.yul\":28907:29035   */\n    tag_564:\n        /* \"#utility.yul\":28858:29041   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":29047:29758   */\n    tag_185:\n        /* \"#utility.yul\":29086:29089   */\n      0x00\n        /* \"#utility.yul\":29124:29128   */\n      0x44\n        /* \"#utility.yul\":29106:29122   */\n      returndatasize\n        /* \"#utility.yul\":29103:29129   */\n      lt\n        /* \"#utility.yul\":29100:29139   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":29132:29137   */\n      jump(tag_566)\n        /* \"#utility.yul\":29100:29139   */\n    tag_567:\n        /* \"#utility.yul\":29161:29181   */\n      tag_568\n      tag_220\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":29236:29237   */\n      0x04\n        /* \"#utility.yul\":29218:29234   */\n      returndatasize\n        /* \"#utility.yul\":29214:29238   */\n      sub\n        /* \"#utility.yul\":29211:29212   */\n      0x04\n        /* \"#utility.yul\":29205:29209   */\n      dup3\n        /* \"#utility.yul\":29190:29239   */\n      returndatacopy\n        /* \"#utility.yul\":29269:29273   */\n      dup1\n        /* \"#utility.yul\":29263:29274   */\n      mload\n        /* \"#utility.yul\":29368:29384   */\n      returndatasize\n        /* \"#utility.yul\":29361:29365   */\n      0x24\n        /* \"#utility.yul\":29353:29359   */\n      dup3\n        /* \"#utility.yul\":29349:29366   */\n      add\n        /* \"#utility.yul\":29346:29385   */\n      gt\n        /* \"#utility.yul\":29313:29331   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":29305:29311   */\n      dup3\n        /* \"#utility.yul\":29302:29332   */\n      gt\n        /* \"#utility.yul\":29286:29399   */\n      or\n        /* \"#utility.yul\":29283:29429   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":29414:29419   */\n      pop\n      pop\n      jump(tag_566)\n        /* \"#utility.yul\":29283:29429   */\n    tag_569:\n        /* \"#utility.yul\":29460:29466   */\n      dup1\n        /* \"#utility.yul\":29454:29458   */\n      dup3\n        /* \"#utility.yul\":29450:29467   */\n      add\n        /* \"#utility.yul\":29496:29499   */\n      dup1\n        /* \"#utility.yul\":29490:29500   */\n      mload\n        /* \"#utility.yul\":29523:29541   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":29515:29521   */\n      dup2\n        /* \"#utility.yul\":29512:29542   */\n      gt\n        /* \"#utility.yul\":29509:29552   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":29545:29550   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_566)\n        /* \"#utility.yul\":29509:29552   */\n    tag_570:\n        /* \"#utility.yul\":29593:29599   */\n      dup1\n        /* \"#utility.yul\":29586:29590   */\n      0x20\n        /* \"#utility.yul\":29581:29584   */\n      dup4\n        /* \"#utility.yul\":29577:29591   */\n      add\n        /* \"#utility.yul\":29573:29600   */\n      add\n        /* \"#utility.yul\":29652:29653   */\n      0x04\n        /* \"#utility.yul\":29634:29650   */\n      returndatasize\n        /* \"#utility.yul\":29630:29654   */\n      sub\n        /* \"#utility.yul\":29624:29628   */\n      dup6\n        /* \"#utility.yul\":29620:29655   */\n      add\n        /* \"#utility.yul\":29615:29618   */\n      dup2\n        /* \"#utility.yul\":29612:29656   */\n      gt\n        /* \"#utility.yul\":29609:29666   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":29659:29664   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_566)\n        /* \"#utility.yul\":29609:29666   */\n    tag_571:\n        /* \"#utility.yul\":29676:29733   */\n      tag_572\n        /* \"#utility.yul\":29724:29730   */\n      dup3\n        /* \"#utility.yul\":29718:29722   */\n      0x20\n        /* \"#utility.yul\":29714:29731   */\n      add\n        /* \"#utility.yul\":29706:29712   */\n      dup6\n        /* \"#utility.yul\":29702:29732   */\n      add\n        /* \"#utility.yul\":29696:29700   */\n      dup7\n        /* \"#utility.yul\":29676:29733   */\n      tag_242\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":29749:29752   */\n      dup3\n        /* \"#utility.yul\":29742:29752   */\n      swap6\n      pop\n        /* \"#utility.yul\":29090:29758   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":29047:29758   */\n    tag_566:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":29764:30003   */\n    tag_287:\n        /* \"#utility.yul\":29904:29938   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":29900:29901   */\n      0x00\n        /* \"#utility.yul\":29892:29898   */\n      dup3\n        /* \"#utility.yul\":29888:29902   */\n      add\n        /* \"#utility.yul\":29881:29939   */\n      mstore\n        /* \"#utility.yul\":29973:29995   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":29968:29970   */\n      0x20\n        /* \"#utility.yul\":29960:29966   */\n      dup3\n        /* \"#utility.yul\":29956:29971   */\n      add\n        /* \"#utility.yul\":29949:29996   */\n      mstore\n        /* \"#utility.yul\":29764:30003   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30009:30375   */\n    tag_288:\n        /* \"#utility.yul\":30151:30154   */\n      0x00\n        /* \"#utility.yul\":30172:30239   */\n      tag_575\n        /* \"#utility.yul\":30236:30238   */\n      0x34\n        /* \"#utility.yul\":30231:30234   */\n      dup4\n        /* \"#utility.yul\":30172:30239   */\n      tag_237\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":30165:30239   */\n      swap2\n      pop\n        /* \"#utility.yul\":30248:30341   */\n      tag_576\n        /* \"#utility.yul\":30337:30340   */\n      dup3\n        /* \"#utility.yul\":30248:30341   */\n      tag_287\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":30366:30368   */\n      0x40\n        /* \"#utility.yul\":30361:30364   */\n      dup3\n        /* \"#utility.yul\":30357:30369   */\n      add\n        /* \"#utility.yul\":30350:30369   */\n      swap1\n      pop\n        /* \"#utility.yul\":30009:30375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30381:30800   */\n    tag_189:\n        /* \"#utility.yul\":30547:30551   */\n      0x00\n        /* \"#utility.yul\":30585:30587   */\n      0x20\n        /* \"#utility.yul\":30574:30583   */\n      dup3\n        /* \"#utility.yul\":30570:30588   */\n      add\n        /* \"#utility.yul\":30562:30588   */\n      swap1\n      pop\n        /* \"#utility.yul\":30634:30643   */\n      dup2\n        /* \"#utility.yul\":30628:30632   */\n      dup2\n        /* \"#utility.yul\":30624:30644   */\n      sub\n        /* \"#utility.yul\":30620:30621   */\n      0x00\n        /* \"#utility.yul\":30609:30618   */\n      dup4\n        /* \"#utility.yul\":30605:30622   */\n      add\n        /* \"#utility.yul\":30598:30645   */\n      mstore\n        /* \"#utility.yul\":30662:30793   */\n      tag_578\n        /* \"#utility.yul\":30788:30792   */\n      dup2\n        /* \"#utility.yul\":30662:30793   */\n      tag_288\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":30654:30793   */\n      swap1\n      pop\n        /* \"#utility.yul\":30381:30800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30806:31033   */\n    tag_289:\n        /* \"#utility.yul\":30946:30980   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":30942:30943   */\n      0x00\n        /* \"#utility.yul\":30934:30940   */\n      dup3\n        /* \"#utility.yul\":30930:30944   */\n      add\n        /* \"#utility.yul\":30923:30981   */\n      mstore\n        /* \"#utility.yul\":31015:31025   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31010:31012   */\n      0x20\n        /* \"#utility.yul\":31002:31008   */\n      dup3\n        /* \"#utility.yul\":30998:31013   */\n      add\n        /* \"#utility.yul\":30991:31026   */\n      mstore\n        /* \"#utility.yul\":30806:31033   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31039:31405   */\n    tag_290:\n        /* \"#utility.yul\":31181:31184   */\n      0x00\n        /* \"#utility.yul\":31202:31269   */\n      tag_581\n        /* \"#utility.yul\":31266:31268   */\n      0x28\n        /* \"#utility.yul\":31261:31264   */\n      dup4\n        /* \"#utility.yul\":31202:31269   */\n      tag_237\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":31195:31269   */\n      swap2\n      pop\n        /* \"#utility.yul\":31278:31371   */\n      tag_582\n        /* \"#utility.yul\":31367:31370   */\n      dup3\n        /* \"#utility.yul\":31278:31371   */\n      tag_289\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":31396:31398   */\n      0x40\n        /* \"#utility.yul\":31391:31394   */\n      dup3\n        /* \"#utility.yul\":31387:31399   */\n      add\n        /* \"#utility.yul\":31380:31399   */\n      swap1\n      pop\n        /* \"#utility.yul\":31039:31405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31411:31830   */\n    tag_193:\n        /* \"#utility.yul\":31577:31581   */\n      0x00\n        /* \"#utility.yul\":31615:31617   */\n      0x20\n        /* \"#utility.yul\":31604:31613   */\n      dup3\n        /* \"#utility.yul\":31600:31618   */\n      add\n        /* \"#utility.yul\":31592:31618   */\n      swap1\n      pop\n        /* \"#utility.yul\":31664:31673   */\n      dup2\n        /* \"#utility.yul\":31658:31662   */\n      dup2\n        /* \"#utility.yul\":31654:31674   */\n      sub\n        /* \"#utility.yul\":31650:31651   */\n      0x00\n        /* \"#utility.yul\":31639:31648   */\n      dup4\n        /* \"#utility.yul\":31635:31652   */\n      add\n        /* \"#utility.yul\":31628:31675   */\n      mstore\n        /* \"#utility.yul\":31692:31823   */\n      tag_584\n        /* \"#utility.yul\":31818:31822   */\n      dup2\n        /* \"#utility.yul\":31692:31823   */\n      tag_290\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":31684:31823   */\n      swap1\n      pop\n        /* \"#utility.yul\":31411:31830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31836:32587   */\n    tag_204:\n        /* \"#utility.yul\":32059:32063   */\n      0x00\n        /* \"#utility.yul\":32097:32100   */\n      0xa0\n        /* \"#utility.yul\":32086:32095   */\n      dup3\n        /* \"#utility.yul\":32082:32101   */\n      add\n        /* \"#utility.yul\":32074:32101   */\n      swap1\n      pop\n        /* \"#utility.yul\":32111:32182   */\n      tag_586\n        /* \"#utility.yul\":32179:32180   */\n      0x00\n        /* \"#utility.yul\":32168:32177   */\n      dup4\n        /* \"#utility.yul\":32164:32181   */\n      add\n        /* \"#utility.yul\":32155:32161   */\n      dup9\n        /* \"#utility.yul\":32111:32182   */\n      tag_281\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":32192:32264   */\n      tag_587\n        /* \"#utility.yul\":32260:32262   */\n      0x20\n        /* \"#utility.yul\":32249:32258   */\n      dup4\n        /* \"#utility.yul\":32245:32263   */\n      add\n        /* \"#utility.yul\":32236:32242   */\n      dup8\n        /* \"#utility.yul\":32192:32264   */\n      tag_281\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":32274:32346   */\n      tag_588\n        /* \"#utility.yul\":32342:32344   */\n      0x40\n        /* \"#utility.yul\":32331:32340   */\n      dup4\n        /* \"#utility.yul\":32327:32345   */\n      add\n        /* \"#utility.yul\":32318:32324   */\n      dup7\n        /* \"#utility.yul\":32274:32346   */\n      tag_230\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":32356:32428   */\n      tag_589\n        /* \"#utility.yul\":32424:32426   */\n      0x60\n        /* \"#utility.yul\":32413:32422   */\n      dup4\n        /* \"#utility.yul\":32409:32427   */\n      add\n        /* \"#utility.yul\":32400:32406   */\n      dup6\n        /* \"#utility.yul\":32356:32428   */\n      tag_230\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":32476:32485   */\n      dup2\n        /* \"#utility.yul\":32470:32474   */\n      dup2\n        /* \"#utility.yul\":32466:32486   */\n      sub\n        /* \"#utility.yul\":32460:32463   */\n      0x80\n        /* \"#utility.yul\":32449:32458   */\n      dup4\n        /* \"#utility.yul\":32445:32464   */\n      add\n        /* \"#utility.yul\":32438:32487   */\n      mstore\n        /* \"#utility.yul\":32504:32580   */\n      tag_590\n        /* \"#utility.yul\":32575:32579   */\n      dup2\n        /* \"#utility.yul\":32566:32572   */\n      dup5\n        /* \"#utility.yul\":32504:32580   */\n      tag_284\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":32496:32580   */\n      swap1\n      pop\n        /* \"#utility.yul\":31836:32587   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a0fd961d00794ebaea7b5cf0293d10fb15ab17eb1e224097112bda69ebaa7f1b64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_555": {
									"entryPoint": 79,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3764:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:9",
																"statements": []
															},
															"src": "1688:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:9"
															},
															"nodeType": "YulIf",
															"src": "1810:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:9",
														"type": ""
													}
												],
												"src": "1610:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:9"
															},
															"nodeType": "YulIf",
															"src": "2178:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:9",
														"type": ""
													}
												],
												"src": "1923:421:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:9"
															},
															"nodeType": "YulIf",
															"src": "2447:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:9",
														"type": ""
													}
												],
												"src": "2364:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2812:437:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2858:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2860:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2833:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2842:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2854:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2825:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2825:32:9"
															},
															"nodeType": "YulIf",
															"src": "2822:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2951:291:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2966:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2990:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3001:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2986:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2986:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2980:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2970:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3051:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3053:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3053:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3053:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3023:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3031:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3020:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3020:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3017:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3148:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3204:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3215:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3224:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3158:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3148:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2782:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2793:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2805:6:9",
														"type": ""
													}
												],
												"src": "2725:524:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3283:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3300:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3303:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3293:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3293:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3397:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3400:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3390:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3390:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3414:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3255:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3492:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3502:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3516:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3512:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3533:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3563:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3569:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3559:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3559:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3537:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3610:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3624:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3638:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3646:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3634:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3634:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3624:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3590:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:26:9"
															},
															"nodeType": "YulIf",
															"src": "3580:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3713:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3727:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3727:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3727:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3677:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3700:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3697:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3697:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3674:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3674:38:9"
															},
															"nodeType": "YulIf",
															"src": "3671:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3476:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3485:6:9",
														"type": ""
													}
												],
												"src": "3441:320:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620028ae380380620028ae8339818101604052810190620000379190620002b8565b62000048816200004f60201b60201c565b506200036e565b8060029080519060200190620000679291906200006b565b5050565b828054620000799062000338565b90600052602060002090601f0160209004810192826200009d5760008555620000e9565b82601f10620000b857805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e8578251825591602001919060010190620000cb565b5b509050620000f89190620000fc565b5090565b5b8082111562000117576000816000905550600101620000fd565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001848262000139565b810181811067ffffffffffffffff82111715620001a657620001a56200014a565b5b80604052505050565b6000620001bb6200011b565b9050620001c9828262000179565b919050565b600067ffffffffffffffff821115620001ec57620001eb6200014a565b5b620001f78262000139565b9050602081019050919050565b60005b838110156200022457808201518184015260208101905062000207565b8381111562000234576000848401525b50505050565b6000620002516200024b84620001ce565b620001af565b90508281526020810184848401111562000270576200026f62000134565b5b6200027d84828562000204565b509392505050565b600082601f8301126200029d576200029c6200012f565b5b8151620002af8482602086016200023a565b91505092915050565b600060208284031215620002d157620002d062000125565b5b600082015167ffffffffffffffff811115620002f257620002f16200012a565b5b620003008482850162000285565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200035157607f821691505b6020821081141562000368576200036762000309565b5b50919050565b612530806200037e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906113b6565b6101d0565b6040516100b39190611405565b60405180910390f35b6100d660048036038101906100d19190611478565b610299565b6040516100e391906114c0565b60405180910390f35b610106600480360381019061010191906114db565b61037b565b60405161011391906115a1565b60405180910390f35b610136600480360381019061013191906117c0565b61040f565b005b610152600480360381019061014d9190611952565b6104b0565b60405161015f9190611a88565b60405180910390f35b610182600480360381019061017d9190611ad6565b6105c9565b005b61019e60048036038101906101999190611b16565b6105df565b6040516101ab91906114c0565b60405180910390f35b6101ce60048036038101906101c99190611b56565b610673565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611c5f565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610374575061037382610714565b5b9050919050565b60606002805461038a90611cae565b80601f01602080910402602001604051908101604052809291908181526020018280546103b690611cae565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b61041761077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045d575061045c8561045761077e565b6105df565b5b61049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611d52565b60405180910390fd5b6104a98585858585610786565b5050505050565b606081518351146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611de4565b60405180910390fd5b6000835167ffffffffffffffff811115610513576105126115c8565b5b6040519080825280602002602001820160405280156105415781602001602082028036833780820191505090505b50905060005b84518110156105be5761058e85828151811061056657610565611e04565b5b602002602001015185838151811061058157610580611e04565b5b60200260200101516101d0565b8282815181106105a1576105a0611e04565b5b602002602001018181525050806105b790611e62565b9050610547565b508091505092915050565b6105db6105d461077e565b8383610aa8565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067b61077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c157506106c0856106bb61077e565b6105df565b5b610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f790611d52565b60405180910390fd5b61070d8585858585610c15565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190611f1d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561083a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083190611faf565b60405180910390fd5b600061084461077e565b9050610854818787878787610eb1565b60005b8451811015610a0557600085828151811061087557610874611e04565b5b60200260200101519050600085838151811061089457610893611e04565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90612041565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ea9190612061565b92505081905550505050806109fe90611e62565b9050610857565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7c9291906120b7565b60405180910390a4610a92818787878787610eb9565b610aa0818787878787610ec1565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e90612160565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0891906114c0565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7c90611faf565b60405180910390fd5b6000610c8f61077e565b90506000610c9c85611099565b90506000610ca985611099565b9050610cb9838989858589610eb1565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4790612041565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e059190612061565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e82929190612180565b60405180910390a4610e98848a8a86868a610eb9565b610ea6848a8a8a8a8a611113565b505050505050505050565b505050505050565b505050505050565b610ee08473ffffffffffffffffffffffffffffffffffffffff166112eb565b15611091578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f2695949392919061220d565b6020604051808303816000875af1925050508015610f6257506040513d601f19601f82011682018060405250810190610f5f919061228a565b60015b61100857610f6e6122c4565b806308c379a01415610fcb5750610f836122e6565b80610f8e5750610fcd565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc291906115a1565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fff906123ee565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461108f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108690612480565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110b8576110b76115c8565b5b6040519080825280602002602001820160405280156110e65781602001602082028036833780820191505090505b50905082816000815181106110fe576110fd611e04565b5b60200260200101818152505080915050919050565b6111328473ffffffffffffffffffffffffffffffffffffffff166112eb565b156112e3578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016111789594939291906124a0565b6020604051808303816000875af19250505080156111b457506040513d601f19601f820116820180604052508101906111b1919061228a565b60015b61125a576111c06122c4565b806308c379a0141561121d57506111d56122e6565b806111e0575061121f565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121491906115a1565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611251906123ee565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d890612480565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061134d82611322565b9050919050565b61135d81611342565b811461136857600080fd5b50565b60008135905061137a81611354565b92915050565b6000819050919050565b61139381611380565b811461139e57600080fd5b50565b6000813590506113b08161138a565b92915050565b600080604083850312156113cd576113cc611318565b5b60006113db8582860161136b565b92505060206113ec858286016113a1565b9150509250929050565b6113ff81611380565b82525050565b600060208201905061141a60008301846113f6565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61145581611420565b811461146057600080fd5b50565b6000813590506114728161144c565b92915050565b60006020828403121561148e5761148d611318565b5b600061149c84828501611463565b91505092915050565b60008115159050919050565b6114ba816114a5565b82525050565b60006020820190506114d560008301846114b1565b92915050565b6000602082840312156114f1576114f0611318565b5b60006114ff848285016113a1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611542578082015181840152602081019050611527565b83811115611551576000848401525b50505050565b6000601f19601f8301169050919050565b600061157382611508565b61157d8185611513565b935061158d818560208601611524565b61159681611557565b840191505092915050565b600060208201905081810360008301526115bb8184611568565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61160082611557565b810181811067ffffffffffffffff8211171561161f5761161e6115c8565b5b80604052505050565b600061163261130e565b905061163e82826115f7565b919050565b600067ffffffffffffffff82111561165e5761165d6115c8565b5b602082029050602081019050919050565b600080fd5b600061168761168284611643565b611628565b905080838252602082019050602084028301858111156116aa576116a961166f565b5b835b818110156116d357806116bf88826113a1565b8452602084019350506020810190506116ac565b5050509392505050565b600082601f8301126116f2576116f16115c3565b5b8135611702848260208601611674565b91505092915050565b600080fd5b600067ffffffffffffffff82111561172b5761172a6115c8565b5b61173482611557565b9050602081019050919050565b82818337600083830152505050565b600061176361175e84611710565b611628565b90508281526020810184848401111561177f5761177e61170b565b5b61178a848285611741565b509392505050565b600082601f8301126117a7576117a66115c3565b5b81356117b7848260208601611750565b91505092915050565b600080600080600060a086880312156117dc576117db611318565b5b60006117ea8882890161136b565b95505060206117fb8882890161136b565b945050604086013567ffffffffffffffff81111561181c5761181b61131d565b5b611828888289016116dd565b935050606086013567ffffffffffffffff8111156118495761184861131d565b5b611855888289016116dd565b925050608086013567ffffffffffffffff8111156118765761187561131d565b5b61188288828901611792565b9150509295509295909350565b600067ffffffffffffffff8211156118aa576118a96115c8565b5b602082029050602081019050919050565b60006118ce6118c98461188f565b611628565b905080838252602082019050602084028301858111156118f1576118f061166f565b5b835b8181101561191a5780611906888261136b565b8452602084019350506020810190506118f3565b5050509392505050565b600082601f830112611939576119386115c3565b5b81356119498482602086016118bb565b91505092915050565b6000806040838503121561196957611968611318565b5b600083013567ffffffffffffffff8111156119875761198661131d565b5b61199385828601611924565b925050602083013567ffffffffffffffff8111156119b4576119b361131d565b5b6119c0858286016116dd565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119ff81611380565b82525050565b6000611a1183836119f6565b60208301905092915050565b6000602082019050919050565b6000611a35826119ca565b611a3f81856119d5565b9350611a4a836119e6565b8060005b83811015611a7b578151611a628882611a05565b9750611a6d83611a1d565b925050600181019050611a4e565b5085935050505092915050565b60006020820190508181036000830152611aa28184611a2a565b905092915050565b611ab3816114a5565b8114611abe57600080fd5b50565b600081359050611ad081611aaa565b92915050565b60008060408385031215611aed57611aec611318565b5b6000611afb8582860161136b565b9250506020611b0c85828601611ac1565b9150509250929050565b60008060408385031215611b2d57611b2c611318565b5b6000611b3b8582860161136b565b9250506020611b4c8582860161136b565b9150509250929050565b600080600080600060a08688031215611b7257611b71611318565b5b6000611b808882890161136b565b9550506020611b918882890161136b565b9450506040611ba2888289016113a1565b9350506060611bb3888289016113a1565b925050608086013567ffffffffffffffff811115611bd457611bd361131d565b5b611be088828901611792565b9150509295509295909350565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b6000611c49602a83611513565b9150611c5482611bed565b604082019050919050565b60006020820190508181036000830152611c7881611c3c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cc657607f821691505b60208210811415611cda57611cd9611c7f565b5b50919050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206e6f7220617070726f7665640000000000000000000000000000000000602082015250565b6000611d3c602f83611513565b9150611d4782611ce0565b604082019050919050565b60006020820190508181036000830152611d6b81611d2f565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611dce602983611513565b9150611dd982611d72565b604082019050919050565b60006020820190508181036000830152611dfd81611dc1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e6d82611380565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ea057611e9f611e33565b5b600182019050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611f07602883611513565b9150611f1282611eab565b604082019050919050565b60006020820190508181036000830152611f3681611efa565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611f99602583611513565b9150611fa482611f3d565b604082019050919050565b60006020820190508181036000830152611fc881611f8c565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b600061202b602a83611513565b915061203682611fcf565b604082019050919050565b6000602082019050818103600083015261205a8161201e565b9050919050565b600061206c82611380565b915061207783611380565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120ac576120ab611e33565b5b828201905092915050565b600060408201905081810360008301526120d18185611a2a565b905081810360208301526120e58184611a2a565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b600061214a602983611513565b9150612155826120ee565b604082019050919050565b600060208201905081810360008301526121798161213d565b9050919050565b600060408201905061219560008301856113f6565b6121a260208301846113f6565b9392505050565b6121b281611342565b82525050565b600081519050919050565b600082825260208201905092915050565b60006121df826121b8565b6121e981856121c3565b93506121f9818560208601611524565b61220281611557565b840191505092915050565b600060a08201905061222260008301886121a9565b61222f60208301876121a9565b81810360408301526122418186611a2a565b905081810360608301526122558185611a2a565b9050818103608083015261226981846121d4565b90509695505050505050565b6000815190506122848161144c565b92915050565b6000602082840312156122a05761229f611318565b5b60006122ae84828501612275565b91505092915050565b60008160e01c9050919050565b600060033d11156122e35760046000803e6122e06000516122b7565b90505b90565b600060443d10156122f657612379565b6122fe61130e565b60043d036004823e80513d602482011167ffffffffffffffff82111715612326575050612379565b808201805167ffffffffffffffff8111156123445750505050612379565b80602083010160043d038501811115612361575050505050612379565b612370826020018501866115f7565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b60006123d8603483611513565b91506123e38261237c565b604082019050919050565b60006020820190508181036000830152612407816123cb565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b600061246a602883611513565b91506124758261240e565b604082019050919050565b600060208201905081810360008301526124998161245d565b9050919050565b600060a0820190506124b560008301886121a9565b6124c260208301876121a9565b6124cf60408301866113f6565b6124dc60608301856113f6565b81810360808301526124ee81846121d4565b9050969550505050505056fea2646970667358221220a0fd961d00794ebaea7b5cf0293d10fb15ab17eb1e224097112bda69ebaa7f1b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28AE CODESIZE SUB DUP1 PUSH3 0x28AE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2B8 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x36E JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x67 SWAP3 SWAP2 SWAP1 PUSH3 0x6B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x79 SWAP1 PUSH3 0x338 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x184 DUP3 PUSH3 0x139 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1A6 JUMPI PUSH3 0x1A5 PUSH3 0x14A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BB PUSH3 0x11B JUMP JUMPDEST SWAP1 POP PUSH3 0x1C9 DUP3 DUP3 PUSH3 0x179 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1EC JUMPI PUSH3 0x1EB PUSH3 0x14A JUMP JUMPDEST JUMPDEST PUSH3 0x1F7 DUP3 PUSH3 0x139 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x224 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x207 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x251 PUSH3 0x24B DUP5 PUSH3 0x1CE JUMP JUMPDEST PUSH3 0x1AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x270 JUMPI PUSH3 0x26F PUSH3 0x134 JUMP JUMPDEST JUMPDEST PUSH3 0x27D DUP5 DUP3 DUP6 PUSH3 0x204 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x29D JUMPI PUSH3 0x29C PUSH3 0x12F JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x23A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2D1 JUMPI PUSH3 0x2D0 PUSH3 0x125 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F2 JUMPI PUSH3 0x2F1 PUSH3 0x12A JUMP JUMPDEST JUMPDEST PUSH3 0x300 DUP5 DUP3 DUP6 ADD PUSH3 0x285 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x351 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x368 JUMPI PUSH3 0x367 PUSH3 0x309 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2530 DUP1 PUSH3 0x37E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B16 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x714 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1CAE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x541 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x58E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x565 PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B7 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST SWAP1 POP PUSH2 0x547 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x5D4 PUSH2 0x77E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67B PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C1 JUMPI POP PUSH2 0x6C0 DUP6 PUSH2 0x6BB PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC15 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C1 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x844 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH2 0x854 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FE SWAP1 PUSH2 0x1E62 JUMP JUMPDEST SWAP1 POP PUSH2 0x857 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP3 SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA92 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xAA0 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x2160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7C SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8F PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC9C DUP6 PUSH2 0x1099 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA9 DUP6 PUSH2 0x1099 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB9 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE82 SWAP3 SWAP2 SWAP1 PUSH2 0x2180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE98 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xEA6 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1113 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12EB JUMP JUMPDEST ISZERO PUSH2 0x1091 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF62 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1008 JUMPI PUSH2 0xF6E PUSH2 0x22C4 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFCB JUMPI POP PUSH2 0xF83 PUSH2 0x22E6 JUMP JUMPDEST DUP1 PUSH2 0xF8E JUMPI POP PUSH2 0xFCD JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC2 SWAP2 SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFF SWAP1 PUSH2 0x23EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x108F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1086 SWAP1 PUSH2 0x2480 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B8 JUMPI PUSH2 0x10B7 PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10E6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10FE JUMPI PUSH2 0x10FD PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1132 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12EB JUMP JUMPDEST ISZERO PUSH2 0x12E3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1178 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11B4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x125A JUMPI PUSH2 0x11C0 PUSH2 0x22C4 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x121D JUMPI POP PUSH2 0x11D5 PUSH2 0x22E6 JUMP JUMPDEST DUP1 PUSH2 0x11E0 JUMPI POP PUSH2 0x121F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1251 SWAP1 PUSH2 0x23EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D8 SWAP1 PUSH2 0x2480 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134D DUP3 PUSH2 0x1322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135D DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP2 EQ PUSH2 0x1368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x137A DUP2 PUSH2 0x1354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1393 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP2 EQ PUSH2 0x139E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B0 DUP2 PUSH2 0x138A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH2 0x13CC PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13DB DUP6 DUP3 DUP7 ADD PUSH2 0x136B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13EC DUP6 DUP3 DUP7 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13FF DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x141A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1455 DUP2 PUSH2 0x1420 JUMP JUMPDEST DUP2 EQ PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1472 DUP2 PUSH2 0x144C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148D PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149C DUP5 DUP3 DUP6 ADD PUSH2 0x1463 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BA DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F1 JUMPI PUSH2 0x14F0 PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14FF DUP5 DUP3 DUP6 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1542 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1527 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1573 DUP3 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x157D DUP2 DUP6 PUSH2 0x1513 JUMP JUMPDEST SWAP4 POP PUSH2 0x158D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1524 JUMP JUMPDEST PUSH2 0x1596 DUP2 PUSH2 0x1557 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15BB DUP2 DUP5 PUSH2 0x1568 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1600 DUP3 PUSH2 0x1557 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x161F JUMPI PUSH2 0x161E PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1632 PUSH2 0x130E JUMP JUMPDEST SWAP1 POP PUSH2 0x163E DUP3 DUP3 PUSH2 0x15F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x165E JUMPI PUSH2 0x165D PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1687 PUSH2 0x1682 DUP5 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16AA JUMPI PUSH2 0x16A9 PUSH2 0x166F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16D3 JUMPI DUP1 PUSH2 0x16BF DUP9 DUP3 PUSH2 0x13A1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16AC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16F2 JUMPI PUSH2 0x16F1 PUSH2 0x15C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1702 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1674 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x172B JUMPI PUSH2 0x172A PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST PUSH2 0x1734 DUP3 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1763 PUSH2 0x175E DUP5 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x170B JUMP JUMPDEST JUMPDEST PUSH2 0x178A DUP5 DUP3 DUP6 PUSH2 0x1741 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17A7 JUMPI PUSH2 0x17A6 PUSH2 0x15C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17B7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EA DUP9 DUP3 DUP10 ADD PUSH2 0x136B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17FB DUP9 DUP3 DUP10 ADD PUSH2 0x136B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x1828 DUP9 DUP3 DUP10 ADD PUSH2 0x16DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1848 PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x1855 DUP9 DUP3 DUP10 ADD PUSH2 0x16DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1876 JUMPI PUSH2 0x1875 PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x1882 DUP9 DUP3 DUP10 ADD PUSH2 0x1792 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CE PUSH2 0x18C9 DUP5 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x166F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x191A JUMPI DUP1 PUSH2 0x1906 DUP9 DUP3 PUSH2 0x136B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18F3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x15C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1949 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1968 PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1987 JUMPI PUSH2 0x1986 PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x1993 DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19B4 JUMPI PUSH2 0x19B3 PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x19C0 DUP6 DUP3 DUP7 ADD PUSH2 0x16DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19FF DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A11 DUP4 DUP4 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 DUP3 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x1A3F DUP2 DUP6 PUSH2 0x19D5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A4A DUP4 PUSH2 0x19E6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A7B JUMPI DUP2 MLOAD PUSH2 0x1A62 DUP9 DUP3 PUSH2 0x1A05 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A6D DUP4 PUSH2 0x1A1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A4E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA2 DUP2 DUP5 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AB3 DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD0 DUP2 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AED JUMPI PUSH2 0x1AEC PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AFB DUP6 DUP3 DUP7 ADD PUSH2 0x136B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B0C DUP6 DUP3 DUP7 ADD PUSH2 0x1AC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2D JUMPI PUSH2 0x1B2C PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B3B DUP6 DUP3 DUP7 ADD PUSH2 0x136B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B4C DUP6 DUP3 DUP7 ADD PUSH2 0x136B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B80 DUP9 DUP3 DUP10 ADD PUSH2 0x136B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B91 DUP9 DUP3 DUP10 ADD PUSH2 0x136B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1BA2 DUP9 DUP3 DUP10 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BB3 DUP9 DUP3 DUP10 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BD4 JUMPI PUSH2 0x1BD3 PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x1BE0 DUP9 DUP3 DUP10 ADD PUSH2 0x1792 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C49 PUSH1 0x2A DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C54 DUP3 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C78 DUP2 PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CC6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CDA JUMPI PUSH2 0x1CD9 PUSH2 0x1C7F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D3C PUSH1 0x2F DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D47 DUP3 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D6B DUP2 PUSH2 0x1D2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCE PUSH1 0x29 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD9 DUP3 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DFD DUP2 PUSH2 0x1DC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E6D DUP3 PUSH2 0x1380 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1EA0 JUMPI PUSH2 0x1E9F PUSH2 0x1E33 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F07 PUSH1 0x28 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F12 DUP3 PUSH2 0x1EAB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F36 DUP2 PUSH2 0x1EFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F99 PUSH1 0x25 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA4 DUP3 PUSH2 0x1F3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC8 DUP2 PUSH2 0x1F8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202B PUSH1 0x2A DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x2036 DUP3 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x205A DUP2 PUSH2 0x201E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206C DUP3 PUSH2 0x1380 JUMP JUMPDEST SWAP2 POP PUSH2 0x2077 DUP4 PUSH2 0x1380 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x1E33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D1 DUP2 DUP6 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x20E5 DUP2 DUP5 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214A PUSH1 0x29 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x2155 DUP3 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2179 DUP2 PUSH2 0x213D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2195 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x21A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21B2 DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DF DUP3 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x21E9 DUP2 DUP6 PUSH2 0x21C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x21F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1524 JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x1557 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2222 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x222F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21A9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2241 DUP2 DUP7 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2255 DUP2 DUP6 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2269 DUP2 DUP5 PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2284 DUP2 PUSH2 0x144C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A0 JUMPI PUSH2 0x229F PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22AE DUP5 DUP3 DUP6 ADD PUSH2 0x2275 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x22E3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x22E0 PUSH1 0x0 MLOAD PUSH2 0x22B7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x22F6 JUMPI PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x22FE PUSH2 0x130E JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2326 JUMPI POP POP PUSH2 0x2379 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2344 JUMPI POP POP POP POP PUSH2 0x2379 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2361 JUMPI POP POP POP POP POP PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x2370 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x15F7 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23D8 PUSH1 0x34 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x23E3 DUP3 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2407 DUP2 PUSH2 0x23CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246A PUSH1 0x28 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x2475 DUP3 PUSH2 0x240E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2499 DUP2 PUSH2 0x245D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24B5 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x24C2 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x24CF PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x24DC PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x13F6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24EE DUP2 DUP5 PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 REVERT SWAP7 SAR STOP PUSH26 0x4EBAEA7B5CF0293D10FB15AB17EB1E224097112BDA69EBAA7F1B PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "570:16691:0:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;;;:13;;:::i;:::-;1107:62;570:16691;;8173:86;8246:6;8239:4;:13;;;;;;;;;;;;:::i;:::-;;8173:86;:::o;570:16691::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:524::-;2805:6;2854:2;2842:9;2833:7;2829:23;2825:32;2822:119;;;2860:79;;:::i;:::-;2822:119;3001:1;2990:9;2986:17;2980:24;3031:18;3023:6;3020:30;3017:117;;;3053:79;;:::i;:::-;3017:117;3158:74;3224:7;3215:6;3204:9;3200:22;3158:74;:::i;:::-;3148:84;;2951:291;2725:524;;;;:::o;3255:180::-;3303:77;3300:1;3293:88;3400:4;3397:1;3390:15;3424:4;3421:1;3414:15;3441:320;3485:6;3522:1;3516:4;3512:12;3502:22;;3569:1;3563:4;3559:12;3590:18;3580:81;;3646:4;3638:6;3634:17;3624:27;;3580:81;3708:2;3700:6;3697:14;3677:18;3674:38;3671:84;;;3727:18;;:::i;:::-;3671:84;3492:269;3441:320;;;:::o;570:16691:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1065": {
									"entryPoint": 3769,
									"id": 1065,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1221": {
									"entryPoint": 4249,
									"id": 1221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1046": {
									"entryPoint": 3761,
									"id": 1046,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1193": {
									"entryPoint": 3777,
									"id": 1193,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1128": {
									"entryPoint": 4371,
									"id": 1128,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1707": {
									"entryPoint": 1918,
									"id": 1707,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_544": {
									"entryPoint": 1926,
									"id": 544,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_409": {
									"entryPoint": 3093,
									"id": 409,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1027": {
									"entryPoint": 2728,
									"id": 1027,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_179": {
									"entryPoint": 1200,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_115": {
									"entryPoint": 464,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_214": {
									"entryPoint": 1503,
									"id": 214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1418": {
									"entryPoint": 4843,
									"id": 1418,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_292": {
									"entryPoint": 1039,
									"id": 292,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_252": {
									"entryPoint": 1651,
									"id": 252,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_196": {
									"entryPoint": 1481,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1740": {
									"entryPoint": 1812,
									"id": 1740,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_75": {
									"entryPoint": 665,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_87": {
									"entryPoint": 891,
									"id": 87,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6331,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5748,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5968,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9376,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8375,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8576,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 5412,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5576,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 8900,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 8887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 9084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 9230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 7997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 8143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 7538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 7851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 8934,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:32590:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:9",
														"type": ""
													}
												],
												"src": "841:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:9"
															},
															"nodeType": "YulIf",
															"src": "977:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:9",
														"type": ""
													}
												],
												"src": "924:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:9",
														"type": ""
													}
												],
												"src": "1052:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:9"
															},
															"nodeType": "YulIf",
															"src": "1290:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:9",
														"type": ""
													}
												],
												"src": "1197:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:9",
														"type": ""
													}
												],
												"src": "1677:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:9",
														"type": ""
													}
												],
												"src": "1801:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:9",
														"type": ""
													}
												],
												"src": "2029:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:9"
															},
															"nodeType": "YulIf",
															"src": "2236:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:9",
														"type": ""
													}
												],
												"src": "2184:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:9",
														"type": ""
													}
												],
												"src": "2310:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:9"
															},
															"nodeType": "YulIf",
															"src": "2528:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:9",
														"type": ""
													}
												],
												"src": "2453:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:9",
														"type": ""
													}
												],
												"src": "2786:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:9",
														"type": ""
													}
												],
												"src": "2882:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:9",
														"type": ""
													}
												],
												"src": "2997:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3325:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:32:9"
															},
															"nodeType": "YulIf",
															"src": "3289:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3249:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3260:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3272:6:9",
														"type": ""
													}
												],
												"src": "3213:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3618:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3590:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3600:6:9",
														"type": ""
													}
												],
												"src": "3548:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3721:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3726:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3737:11:9",
														"type": ""
													}
												],
												"src": "3653:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3877:258:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3887:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3896:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3891:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3956:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3981:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3986:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3977:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3977:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4000:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4005:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3996:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3996:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3990:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3990:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3970:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3970:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3970:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3917:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3920:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3914:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3928:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3930:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3939:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3942:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3935:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3935:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3930:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3910:3:9",
																"statements": []
															},
															"src": "3906:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4053:76:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4103:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4108:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4099:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4099:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4117:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4092:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4092:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4092:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4034:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4037:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4031:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:13:9"
															},
															"nodeType": "YulIf",
															"src": "4028:101:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3859:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3864:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3869:6:9",
														"type": ""
													}
												],
												"src": "3828:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4189:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4199:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4217:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4224:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4213:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4213:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4229:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4172:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4182:6:9",
														"type": ""
													}
												],
												"src": "4141:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4341:272:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4351:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4398:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4365:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4355:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4413:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4479:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4484:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4420:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4413:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4526:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4533:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4522:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4522:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4540:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4545:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4500:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4500:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4561:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4572:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4599:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4577:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4568:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4322:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4329:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4337:3:9",
														"type": ""
													}
												],
												"src": "4249:364:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4737:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4747:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4759:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4770:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4747:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4794:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4805:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4790:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4813:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4809:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4809:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4783:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4783:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4783:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4839:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4911:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4920:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4847:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4839:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4709:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4721:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4732:4:9",
														"type": ""
													}
												],
												"src": "4619:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5027:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5044:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5037:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4938:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5089:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5106:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5109:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5099:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5099:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5203:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5227:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5220:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5061:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5300:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5322:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5352:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5330:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5330:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5318:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5318:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5304:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5469:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5471:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5471:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5471:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5412:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5424:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5409:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5409:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5448:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5460:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5445:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5445:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5406:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:62:9"
															},
															"nodeType": "YulIf",
															"src": "5403:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5507:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5511:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5276:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5284:4:9",
														"type": ""
													}
												],
												"src": "5247:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5575:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5585:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5595:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5595:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5644:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5652:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5624:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5559:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5568:6:9",
														"type": ""
													}
												],
												"src": "5534:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5751:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5856:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5858:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5858:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5858:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5828:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5825:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5825:30:9"
															},
															"nodeType": "YulIf",
															"src": "5822:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5888:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5900:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5908:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5896:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5888:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5950:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5962:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5968:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5958:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5958:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5950:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5735:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5746:4:9",
														"type": ""
													}
												],
												"src": "5669:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6075:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6092:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6085:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5986:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6228:608:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6238:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6320:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6263:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6263:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6247:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6247:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6238:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6337:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6348:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6341:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6370:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6363:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6363:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6393:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6411:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6393:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6426:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6444:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6456:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6464:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6452:17:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6440:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:30:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6430:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6498:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6512:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6512:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6512:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6485:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6493:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6482:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:15:9"
															},
															"nodeType": "YulIf",
															"src": "6479:122:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6686:144:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6701:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6719:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6705:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6743:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6769:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6781:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6748:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6748:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6736:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6736:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6736:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6799:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6815:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6806:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6806:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6799:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6639:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6644:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6636:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6636:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6652:25:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6654:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6665:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6670:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6661:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6661:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6654:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6614:21:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6616:17:9",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6627:6:9"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6620:3:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6610:220:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6198:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6206:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6214:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6222:5:9",
														"type": ""
													}
												],
												"src": "6126:710:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6936:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6985:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6987:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6987:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6987:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6964:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6972:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6960:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6960:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6979:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6956:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6956:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6949:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:35:9"
															},
															"nodeType": "YulIf",
															"src": "6946:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7077:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7091:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7081:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7120:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7196:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7204:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7192:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7192:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7211:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7129:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7129:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7120:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6914:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6922:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6930:5:9",
														"type": ""
													}
												],
												"src": "6859:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7324:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7341:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7344:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7334:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7334:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7235:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7424:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7529:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7531:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7531:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7531:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7501:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7498:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:30:9"
															},
															"nodeType": "YulIf",
															"src": "7495:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7561:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7569:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7569:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7561:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7635:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7647:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7653:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7643:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7643:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7635:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7408:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7419:4:9",
														"type": ""
													}
												],
												"src": "7358:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7722:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7745:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7750:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7755:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7732:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7732:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7803:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7808:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7799:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7799:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7817:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7792:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7792:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7792:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7704:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7709:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7714:6:9",
														"type": ""
													}
												],
												"src": "7671:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7914:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7924:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7990:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7949:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7949:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7933:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7924:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8014:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8021:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8007:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8007:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8007:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8037:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8052:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8059:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8041:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8102:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8104:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8104:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8104:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8083:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8088:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8079:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8079:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8097:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8076:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:25:9"
															},
															"nodeType": "YulIf",
															"src": "8073:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8218:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8223:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8228:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8194:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8194:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8194:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7887:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7892:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7900:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7908:5:9",
														"type": ""
													}
												],
												"src": "7831:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8321:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8370:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8372:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8372:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8372:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8349:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8357:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8345:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8345:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8364:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8341:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8341:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8334:35:9"
															},
															"nodeType": "YulIf",
															"src": "8331:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8489:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8476:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8476:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8466:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8505:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8565:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8573:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8561:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8561:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8580:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8588:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8514:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8514:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8505:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8299:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8307:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8315:5:9",
														"type": ""
													}
												],
												"src": "8260:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8797:1316:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8844:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8846:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8846:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8846:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8818:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8827:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8814:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8814:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8839:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8810:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8810:33:9"
															},
															"nodeType": "YulIf",
															"src": "8807:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8937:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8952:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8966:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8956:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8981:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9016:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9027:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9012:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9012:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9036:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8991:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8991:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8981:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9064:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9079:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9083:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9109:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9144:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9155:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9140:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9140:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9164:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9119:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9119:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9109:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9192:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9207:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9238:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9249:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9234:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9234:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9221:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9221:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9211:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9300:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9302:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9302:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9302:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9272:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9280:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9269:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9269:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9266:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9397:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9457:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9453:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9453:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9477:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9407:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9407:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9397:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9505:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9520:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9551:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9562:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9547:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9547:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9534:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9534:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9524:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9613:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9615:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9615:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9615:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9585:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9593:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9582:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9582:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9579:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9710:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9770:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9781:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9766:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9766:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9790:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9720:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9710:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9818:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9833:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9864:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9875:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9860:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9860:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9847:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9847:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9837:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9927:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9929:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9929:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9929:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9899:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9907:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9896:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9896:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "9893:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10024:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10068:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10079:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10064:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10064:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10088:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10034:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10034:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "10024:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8735:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8746:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8758:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8766:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8774:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8782:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8790:6:9",
														"type": ""
													}
												],
												"src": "8604:1509:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10201:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10306:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10308:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10308:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10308:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10278:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10286:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10275:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10275:30:9"
															},
															"nodeType": "YulIf",
															"src": "10272:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10338:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10350:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10358:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10346:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10346:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10338:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10400:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10412:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10418:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10400:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10196:4:9",
														"type": ""
													}
												],
												"src": "10119:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10555:608:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10565:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10647:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10590:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10590:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10574:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10574:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10565:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10664:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "10675:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10668:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10697:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10704:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10690:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10690:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10720:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10731:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10727:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10720:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10753:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10771:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10783:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10791:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "10779:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10779:17:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10767:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10767:30:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10757:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10825:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "10839:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10839:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10812:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10820:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10809:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10809:15:9"
															},
															"nodeType": "YulIf",
															"src": "10806:122:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11013:144:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11028:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "11032:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11070:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "11096:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "11108:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "11075:20:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11075:37:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11063:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11063:50:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11063:50:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11126:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11137:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11142:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11133:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11133:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11126:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10966:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10971:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10963:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10963:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10979:25:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10981:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10992:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10997:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10988:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10988:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10981:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10941:21:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10943:17:9",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "10954:6:9"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "10947:3:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10937:220:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10525:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10533:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10541:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10549:5:9",
														"type": ""
													}
												],
												"src": "10453:710:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11263:293:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11312:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11314:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11314:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11314:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11291:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11299:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11287:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11287:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11306:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11283:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11283:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11276:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11276:35:9"
															},
															"nodeType": "YulIf",
															"src": "11273:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11404:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11431:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11418:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11418:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11408:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11447:103:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11523:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11531:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11519:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11519:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11538:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11546:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11456:62:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11456:94:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11447:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11241:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11249:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11257:5:9",
														"type": ""
													}
												],
												"src": "11186:370:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11695:761:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11741:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11743:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11743:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11743:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11716:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11725:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11712:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11737:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11708:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11708:32:9"
															},
															"nodeType": "YulIf",
															"src": "11705:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "11834:302:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11849:45:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11880:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11891:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11876:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11876:17:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11863:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11863:31:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11853:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11941:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11943:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11943:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11943:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11913:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11921:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11910:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11910:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "11907:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12038:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12098:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12109:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12094:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12094:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12118:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12048:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12048:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12038:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12146:303:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12161:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12192:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12203:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12188:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12188:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12175:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12165:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12254:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12256:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12256:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12256:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12226:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12234:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12223:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12223:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "12220:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12351:88:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12411:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12422:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12407:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12407:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12431:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12361:45:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12361:78:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12351:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11657:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11668:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11680:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11688:6:9",
														"type": ""
													}
												],
												"src": "11562:894:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12536:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12547:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12563:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12557:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12547:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12519:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12529:6:9",
														"type": ""
													}
												],
												"src": "12462:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12693:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12710:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12715:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12703:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12703:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12731:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12750:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12755:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12746:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12746:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12731:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12665:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12670:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12681:11:9",
														"type": ""
													}
												],
												"src": "12582:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12844:60:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12854:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12862:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12854:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12875:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12887:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12892:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12883:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12883:14:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12875:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12831:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12839:4:9",
														"type": ""
													}
												],
												"src": "12772:132:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12965:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12982:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13005:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12987:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12987:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12975:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12975:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12975:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12953:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12960:3:9",
														"type": ""
													}
												],
												"src": "12910:108:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13104:99:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13148:6:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13156:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13114:33:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13114:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13169:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13187:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13192:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13183:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13183:14:9"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13169:10:9"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13077:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13085:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13093:10:9",
														"type": ""
													}
												],
												"src": "13024:179:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13284:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13294:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13306:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13302:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:14:9"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13294:4:9"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13271:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13279:4:9",
														"type": ""
													}
												],
												"src": "13209:113:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13482:608:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13492:68:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13554:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13506:47:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13506:54:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13496:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13569:93:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13650:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13655:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13576:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13576:86:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13569:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13671:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13736:5:9"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13686:49:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:56:9"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "13675:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13751:21:9",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "13765:7:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13755:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13841:224:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13855:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13882:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "13876:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13876:13:9"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "13859:13:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13902:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "13953:13:9"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13968:3:9"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "13909:43:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13909:63:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13902:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13985:70:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14048:6:9"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13995:52:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13995:60:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13985:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13803:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13806:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13800:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13800:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13814:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13816:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13825:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13828:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13821:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13821:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13816:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13785:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13787:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13796:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "13791:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13781:284:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14074:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14081:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14074:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13461:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13468:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13477:3:9",
														"type": ""
													}
												],
												"src": "13358:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14244:225:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14254:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14266:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14277:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14262:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14262:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14254:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14301:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14312:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14297:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14297:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14320:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14326:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14316:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14316:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14290:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14290:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14346:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14448:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14457:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14354:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14354:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14346:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14216:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14228:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14239:4:9",
														"type": ""
													}
												],
												"src": "14096:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14515:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14569:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14578:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14581:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14571:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14571:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14571:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14538:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14560:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14545:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14545:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14535:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14535:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14528:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14528:40:9"
															},
															"nodeType": "YulIf",
															"src": "14525:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14508:5:9",
														"type": ""
													}
												],
												"src": "14475:116:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14646:84:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14656:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14678:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14665:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14665:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14656:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14718:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14694:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14694:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14694:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14624:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14632:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14640:5:9",
														"type": ""
													}
												],
												"src": "14597:133:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14816:388:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14862:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14864:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14864:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14864:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14837:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14846:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14833:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14833:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14858:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14829:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14829:32:9"
															},
															"nodeType": "YulIf",
															"src": "14826:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "14955:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14970:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14984:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14974:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14999:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15034:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15045:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15030:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15030:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15054:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15009:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15009:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14999:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15082:115:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15097:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15111:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15101:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15127:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15159:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15170:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15155:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15155:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15179:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "15137:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15137:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15127:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14778:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14789:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14801:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14809:6:9",
														"type": ""
													}
												],
												"src": "14736:468:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15293:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15339:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15341:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15341:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15341:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15314:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15323:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15310:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15310:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15335:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15306:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15306:32:9"
															},
															"nodeType": "YulIf",
															"src": "15303:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "15432:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15447:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15461:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15451:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15476:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15511:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15522:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15507:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15507:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15531:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15486:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15486:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15476:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15559:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15574:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15588:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15578:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15604:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15639:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15650:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15635:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15635:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15659:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15614:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15614:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15604:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15255:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15266:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15278:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15286:6:9",
														"type": ""
													}
												],
												"src": "15210:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15833:946:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15880:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15882:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15882:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15882:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15854:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15863:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15850:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15850:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15875:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15846:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15846:33:9"
															},
															"nodeType": "YulIf",
															"src": "15843:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "15973:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15988:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16002:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15992:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16017:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16052:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16063:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16048:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16048:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16072:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16027:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16027:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16017:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16100:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16115:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16129:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16119:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16145:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16180:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16191:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16176:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16176:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16200:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16155:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16155:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16145:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16228:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16243:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16257:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16247:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16273:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16308:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16319:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16304:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16304:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16328:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16283:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16283:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16273:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16356:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16371:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16385:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16375:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16401:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16436:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16447:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16432:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16432:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16456:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16411:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16411:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "16401:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16484:288:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16499:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16530:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16541:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16526:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16526:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16513:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16513:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16503:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16593:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16595:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16595:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16595:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16565:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16573:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16562:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16562:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "16559:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16690:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16734:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16745:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16730:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16730:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16754:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16700:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16700:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "16690:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15771:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15782:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15794:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15802:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15810:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15818:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15826:6:9",
														"type": ""
													}
												],
												"src": "15690:1089:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16891:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16913:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16921:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16909:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16909:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16925:34:9",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16902:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16902:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16902:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16981:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16989:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16977:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16977:15:9"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16994:12:9",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16970:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16970:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16970:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16883:6:9",
														"type": ""
													}
												],
												"src": "16785:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17166:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17176:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17242:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17247:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17183:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17183:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17176:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17348:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																	"nodeType": "YulIdentifier",
																	"src": "17259:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17259:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17259:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17361:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17372:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17377:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17368:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17368:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17361:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17154:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17162:3:9",
														"type": ""
													}
												],
												"src": "17020:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17563:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17573:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17585:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17596:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17581:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17581:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17573:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17620:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17631:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17616:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17616:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17639:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17645:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17635:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17635:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17609:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17609:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17609:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17665:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17799:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17673:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17673:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17665:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17543:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17558:4:9",
														"type": ""
													}
												],
												"src": "17392:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17845:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17862:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17865:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17855:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17855:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17855:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17959:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17962:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17952:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17952:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17952:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17983:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17986:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17976:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17976:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17976:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "17817:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18054:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18064:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18078:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18084:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18074:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18074:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18064:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18095:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18125:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18131:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18121:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18121:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "18099:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18172:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18186:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "18200:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18208:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "18196:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18196:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18186:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18152:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18145:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18145:26:9"
															},
															"nodeType": "YulIf",
															"src": "18142:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18275:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "18289:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18289:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18289:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18239:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18262:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18270:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18259:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18259:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18236:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18236:38:9"
															},
															"nodeType": "YulIf",
															"src": "18233:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18038:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18047:6:9",
														"type": ""
													}
												],
												"src": "18003:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18435:128:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18457:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18465:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18453:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18453:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18469:34:9",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18446:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18446:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18446:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18525:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18533:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18521:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18521:15:9"
																	},
																	{
																		"hexValue": "6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18538:17:9",
																		"type": "",
																		"value": "er nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18514:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18514:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18514:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18427:6:9",
														"type": ""
													}
												],
												"src": "18329:234:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18715:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18725:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18791:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18796:2:9",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18732:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18732:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18725:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18897:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																	"nodeType": "YulIdentifier",
																	"src": "18808:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18808:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18808:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18910:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18921:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18926:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18917:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18917:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18910:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18703:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18711:3:9",
														"type": ""
													}
												],
												"src": "18569:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19112:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19122:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19134:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19145:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19130:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19130:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19122:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19169:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19180:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19165:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19165:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19188:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19194:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19184:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19184:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19158:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19158:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19158:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19214:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19348:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19222:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19222:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19214:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19092:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19107:4:9",
														"type": ""
													}
												],
												"src": "18941:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19472:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19494:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19490:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19490:14:9"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19506:34:9",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19483:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19483:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19483:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19562:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19570:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19558:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19558:15:9"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19575:11:9",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19551:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19551:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19551:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19464:6:9",
														"type": ""
													}
												],
												"src": "19366:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19746:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19756:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19822:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19827:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19763:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19763:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19756:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19928:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "19839:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19839:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19839:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19941:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19952:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19957:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19948:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19948:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19941:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19742:3:9",
														"type": ""
													}
												],
												"src": "19600:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20143:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20153:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20165:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20176:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20161:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20161:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20153:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20200:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20211:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20196:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20196:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20219:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20225:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20215:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20215:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20189:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20189:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20189:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20245:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20379:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20253:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20253:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20245:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20123:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20138:4:9",
														"type": ""
													}
												],
												"src": "19972:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20425:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20442:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20445:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20435:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20435:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20435:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20539:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20542:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20532:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20532:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20532:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20566:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20556:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20556:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20556:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20397:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20611:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20628:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20631:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20621:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20621:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20621:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20725:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20728:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20718:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20718:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20718:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20749:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20752:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20742:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20742:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20742:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20583:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20812:190:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20822:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20849:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20831:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20831:24:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20822:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20945:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20947:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20947:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20947:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20870:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20877:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20867:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20867:77:9"
															},
															"nodeType": "YulIf",
															"src": "20864:103:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20976:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20987:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20994:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20983:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20983:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20976:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20798:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20808:3:9",
														"type": ""
													}
												],
												"src": "20769:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21114:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21136:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21144:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21132:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21132:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21148:34:9",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21125:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21125:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21125:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21204:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21212:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21200:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21200:15:9"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21217:10:9",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21193:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21193:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21193:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21106:6:9",
														"type": ""
													}
												],
												"src": "21008:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21387:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21397:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21463:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21468:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21404:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21404:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21397:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21569:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "21480:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21480:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21480:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21582:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21593:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21598:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21589:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21589:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21582:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21375:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21383:3:9",
														"type": ""
													}
												],
												"src": "21241:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21784:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21794:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21806:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21817:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21802:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21802:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21794:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21841:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21852:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21837:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21837:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21860:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21866:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21856:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21856:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21830:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21830:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21830:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21886:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22020:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21894:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21894:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21886:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21764:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21779:4:9",
														"type": ""
													}
												],
												"src": "21613:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22144:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22166:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22174:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22162:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22162:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22178:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22155:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22155:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22155:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22234:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22242:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22230:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22230:15:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22247:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22223:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22223:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22223:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22136:6:9",
														"type": ""
													}
												],
												"src": "22038:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22414:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22424:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22490:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22495:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22431:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22431:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22424:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22596:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "22507:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22507:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22507:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22609:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22620:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22625:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22616:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22616:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22609:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22402:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22410:3:9",
														"type": ""
													}
												],
												"src": "22268:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22811:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22821:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22833:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22844:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22829:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22829:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22821:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22868:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22879:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22864:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22864:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22887:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22893:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22883:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22883:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22857:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22857:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22857:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22913:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23047:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22921:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22921:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22913:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22791:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22806:4:9",
														"type": ""
													}
												],
												"src": "22640:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23171:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23193:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23201:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23189:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23189:14:9"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23205:34:9",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23182:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23182:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23182:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23261:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23269:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23257:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23257:15:9"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23274:12:9",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23250:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23250:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23250:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23163:6:9",
														"type": ""
													}
												],
												"src": "23065:229:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23446:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23456:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23522:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23527:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23463:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23463:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23456:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23628:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "23539:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23539:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23539:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23641:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23652:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23657:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23648:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23648:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23641:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23434:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23442:3:9",
														"type": ""
													}
												],
												"src": "23300:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23843:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23853:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23865:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23876:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23861:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23861:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23853:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23900:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23911:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23896:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23896:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23919:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23925:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23915:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23915:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23889:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23889:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23889:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23945:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24079:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23953:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "23953:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23945:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23823:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23838:4:9",
														"type": ""
													}
												],
												"src": "23672:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24141:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24151:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24174:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24156:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24156:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24151:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24185:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24208:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24190:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24190:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24185:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24348:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24350:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24350:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24350:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24269:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24276:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "24344:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24272:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24272:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24266:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24266:81:9"
															},
															"nodeType": "YulIf",
															"src": "24263:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24380:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24391:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24394:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24387:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24387:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "24380:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24128:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24131:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "24137:3:9",
														"type": ""
													}
												],
												"src": "24097:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24634:408:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24644:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24656:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24667:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24652:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24652:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24644:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24691:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24702:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24687:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24687:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24710:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24716:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24706:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24706:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24680:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24680:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24680:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24736:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24838:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24847:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24744:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24744:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24736:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24873:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24884:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24869:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24869:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24893:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24899:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24889:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24889:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24862:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24862:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24862:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24919:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25021:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25030:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24927:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "24927:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24919:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24598:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24610:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24618:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24629:4:9",
														"type": ""
													}
												],
												"src": "24408:634:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25154:122:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25176:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25184:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25172:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25172:14:9"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25188:34:9",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25165:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25165:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25165:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25244:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25252:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25240:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25240:15:9"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25257:11:9",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25233:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25233:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25233:36:9"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25146:6:9",
														"type": ""
													}
												],
												"src": "25048:228:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25428:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25438:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25504:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25509:2:9",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25445:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25445:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25438:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25610:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "25521:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25521:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25521:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25623:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25634:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25639:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25630:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25630:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25623:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25416:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25424:3:9",
														"type": ""
													}
												],
												"src": "25282:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25825:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25835:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25847:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25858:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25843:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25843:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25835:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25882:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25893:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25878:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25878:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25901:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25907:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25897:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25897:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25871:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25871:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25871:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25927:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26061:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25935:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "25935:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25927:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25805:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25820:4:9",
														"type": ""
													}
												],
												"src": "25654:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26205:206:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26215:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26227:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26238:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26223:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26223:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26215:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26295:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26308:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26319:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26304:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26304:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26251:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26251:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26251:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26376:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26389:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26400:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26385:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26385:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26332:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26332:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26332:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26169:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26181:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26189:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26200:4:9",
														"type": ""
													}
												],
												"src": "26079:332:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26482:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26499:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26522:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "26504:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26504:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26492:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26492:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26492:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26470:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26477:3:9",
														"type": ""
													}
												],
												"src": "26417:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26599:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26610:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26626:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26620:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26620:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26610:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26582:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26592:6:9",
														"type": ""
													}
												],
												"src": "26541:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26740:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26757:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26762:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26750:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26750:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26750:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26778:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26797:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26802:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26793:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26793:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "26778:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26712:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26717:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "26728:11:9",
														"type": ""
													}
												],
												"src": "26645:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26909:270:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26919:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26965:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26933:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26933:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26923:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26980:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27045:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27050:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26987:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "26987:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26980:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27092:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27099:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27088:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27088:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27106:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27111:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "27066:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27066:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27066:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27127:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27138:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27165:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "27143:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27143:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27134:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27134:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27127:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26890:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26897:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26905:3:9",
														"type": ""
													}
												],
												"src": "26819:360:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27513:725:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27523:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27535:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27546:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27531:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27531:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27523:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27604:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27617:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27628:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27613:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27613:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27560:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27560:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27560:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27685:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27698:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27709:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27694:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27694:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27641:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27641:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27641:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27734:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27745:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27730:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27730:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27754:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27760:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27750:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27750:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27723:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27723:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27723:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27780:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27882:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27891:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27788:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27788:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27780:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27917:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27928:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27913:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27913:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27937:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27943:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27933:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27933:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27906:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27906:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27906:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27963:116:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "28065:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28074:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27971:93:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "27971:108:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27963:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28100:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28111:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28096:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28096:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28121:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28127:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28117:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28117:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28089:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28089:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28089:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28147:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "28217:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28226:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28155:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28155:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28147:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27453:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "27465:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "27473:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27481:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27489:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27497:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27508:4:9",
														"type": ""
													}
												],
												"src": "27185:1053:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28306:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28316:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "28331:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28325:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28325:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "28316:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28373:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "28347:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28347:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28347:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "28284:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28292:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28300:5:9",
														"type": ""
													}
												],
												"src": "28244:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28467:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28513:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "28515:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28515:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28515:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28488:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28497:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28484:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28484:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28509:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "28480:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28480:32:9"
															},
															"nodeType": "YulIf",
															"src": "28477:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "28606:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28621:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28635:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "28625:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28650:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "28695:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "28706:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28691:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28691:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28715:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "28660:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28660:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "28650:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28437:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "28448:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28460:6:9",
														"type": ""
													}
												],
												"src": "28391:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28799:53:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28809:36:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28834:3:9",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28839:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "28830:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28830:15:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "28809:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28780:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "28790:8:9",
														"type": ""
													}
												],
												"src": "28746:106:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28897:144:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28934:101:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28963:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28966:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28969:1:9",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "28948:14:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28948:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28948:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "28984:41:9",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29022:1:9",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "29016:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29016:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "28991:24:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28991:34:9"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "28984:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "28913:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28913:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28931:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28910:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "28910:23:9"
															},
															"nodeType": "YulIf",
															"src": "28907:128:9"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "28893:3:9",
														"type": ""
													}
												],
												"src": "28858:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29090:668:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29130:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29132:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "29106:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29106:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29124:4:9",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "29103:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29103:26:9"
															},
															"nodeType": "YulIf",
															"src": "29100:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29149:32:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "29161:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29161:20:9"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "29153:4:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29205:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29211:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "29218:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29218:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29236:1:9",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29214:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29214:24:9"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "29190:14:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29190:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29190:49:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29249:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29269:4:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29263:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29263:11:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "29253:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29400:29:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29414:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "29305:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29313:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "29302:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29302:30:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "29353:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29361:4:9",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29349:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29349:17:9"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "29368:14:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29368:16:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "29346:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29346:39:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "29286:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29286:113:9"
															},
															"nodeType": "YulIf",
															"src": "29283:146:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29439:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29454:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29460:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29450:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29450:17:9"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "29443:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29476:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "29496:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29490:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29490:10:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "29480:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29543:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29545:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29515:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29523:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29512:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29512:30:9"
															},
															"nodeType": "YulIf",
															"src": "29509:43:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29562:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "29581:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29586:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29577:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29577:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29593:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29573:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29573:27:9"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "29566:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29657:9:9",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "29659:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "29615:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "29624:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "29634:14:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "29634:16:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29652:1:9",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "29630:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29630:24:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29620:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29620:35:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29612:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29612:44:9"
															},
															"nodeType": "YulIf",
															"src": "29609:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "29696:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "29706:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29718:4:9",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "29724:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29714:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29714:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29702:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29702:30:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "29676:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29676:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29676:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29742:10:9",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "29749:3:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "29742:3:9"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "29086:3:9",
														"type": ""
													}
												],
												"src": "29047:711:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29870:133:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29892:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29900:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29888:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29888:14:9"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29904:34:9",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29881:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29881:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29881:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29960:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29968:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29956:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29956:15:9"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29973:22:9",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29949:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "29949:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29949:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29862:6:9",
														"type": ""
													}
												],
												"src": "29764:239:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30155:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30165:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30231:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30236:2:9",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30172:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30172:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30165:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30337:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "30248:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30248:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30248:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30350:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30361:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30366:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30357:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30357:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30350:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30143:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30151:3:9",
														"type": ""
													}
												],
												"src": "30009:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30552:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30562:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30574:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30585:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30570:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30570:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30562:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30609:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30620:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30605:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30605:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30628:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30634:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30624:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30624:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30598:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30598:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30598:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30654:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30788:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30662:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30662:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30654:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30532:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30547:4:9",
														"type": ""
													}
												],
												"src": "30381:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30912:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30934:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30942:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30930:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30930:14:9"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30946:34:9",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30923:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30923:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30923:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31002:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31010:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30998:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30998:15:9"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31015:10:9",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30991:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "30991:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30991:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30904:6:9",
														"type": ""
													}
												],
												"src": "30806:227:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31185:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31195:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31261:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31266:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31202:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31202:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31195:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31367:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "31278:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31278:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31278:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31380:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31391:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31396:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31387:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31387:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31380:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31173:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31181:3:9",
														"type": ""
													}
												],
												"src": "31039:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31582:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31592:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31604:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31615:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31600:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31600:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31592:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31639:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31650:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31635:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31635:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31658:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31664:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31654:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31654:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31628:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31628:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31628:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31684:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31818:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31692:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "31692:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31684:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31562:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31577:4:9",
														"type": ""
													}
												],
												"src": "31411:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32064:523:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32074:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32086:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32097:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32082:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32082:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32074:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "32155:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32168:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32179:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32164:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32164:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32111:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32111:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32111:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "32236:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32249:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32260:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32245:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32245:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32192:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32192:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32192:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "32318:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32331:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32342:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32327:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32274:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32274:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32274:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "32400:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32413:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32424:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32409:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32409:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32356:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32356:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32356:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32449:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32460:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32445:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32445:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32470:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32476:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32466:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32466:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32438:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32438:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32438:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32496:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "32566:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32575:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32504:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "32504:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32496:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32004:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "32016:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "32024:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "32032:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "32040:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "32048:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32059:4:9",
														"type": ""
													}
												],
												"src": "31836:751:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: address zero is not a v\")\n\n        mstore(add(memPtr, 32), \"alid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906113b6565b6101d0565b6040516100b39190611405565b60405180910390f35b6100d660048036038101906100d19190611478565b610299565b6040516100e391906114c0565b60405180910390f35b610106600480360381019061010191906114db565b61037b565b60405161011391906115a1565b60405180910390f35b610136600480360381019061013191906117c0565b61040f565b005b610152600480360381019061014d9190611952565b6104b0565b60405161015f9190611a88565b60405180910390f35b610182600480360381019061017d9190611ad6565b6105c9565b005b61019e60048036038101906101999190611b16565b6105df565b6040516101ab91906114c0565b60405180910390f35b6101ce60048036038101906101c99190611b56565b610673565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611c5f565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610374575061037382610714565b5b9050919050565b60606002805461038a90611cae565b80601f01602080910402602001604051908101604052809291908181526020018280546103b690611cae565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b61041761077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045d575061045c8561045761077e565b6105df565b5b61049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611d52565b60405180910390fd5b6104a98585858585610786565b5050505050565b606081518351146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611de4565b60405180910390fd5b6000835167ffffffffffffffff811115610513576105126115c8565b5b6040519080825280602002602001820160405280156105415781602001602082028036833780820191505090505b50905060005b84518110156105be5761058e85828151811061056657610565611e04565b5b602002602001015185838151811061058157610580611e04565b5b60200260200101516101d0565b8282815181106105a1576105a0611e04565b5b602002602001018181525050806105b790611e62565b9050610547565b508091505092915050565b6105db6105d461077e565b8383610aa8565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067b61077e565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c157506106c0856106bb61077e565b6105df565b5b610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f790611d52565b60405180910390fd5b61070d8585858585610c15565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c190611f1d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561083a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083190611faf565b60405180910390fd5b600061084461077e565b9050610854818787878787610eb1565b60005b8451811015610a0557600085828151811061087557610874611e04565b5b60200260200101519050600085838151811061089457610893611e04565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90612041565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ea9190612061565b92505081905550505050806109fe90611e62565b9050610857565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7c9291906120b7565b60405180910390a4610a92818787878787610eb9565b610aa0818787878787610ec1565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e90612160565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0891906114c0565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7c90611faf565b60405180910390fd5b6000610c8f61077e565b90506000610c9c85611099565b90506000610ca985611099565b9050610cb9838989858589610eb1565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4790612041565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e059190612061565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e82929190612180565b60405180910390a4610e98848a8a86868a610eb9565b610ea6848a8a8a8a8a611113565b505050505050505050565b505050505050565b505050505050565b610ee08473ffffffffffffffffffffffffffffffffffffffff166112eb565b15611091578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f2695949392919061220d565b6020604051808303816000875af1925050508015610f6257506040513d601f19601f82011682018060405250810190610f5f919061228a565b60015b61100857610f6e6122c4565b806308c379a01415610fcb5750610f836122e6565b80610f8e5750610fcd565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc291906115a1565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fff906123ee565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461108f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108690612480565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110b8576110b76115c8565b5b6040519080825280602002602001820160405280156110e65781602001602082028036833780820191505090505b50905082816000815181106110fe576110fd611e04565b5b60200260200101818152505080915050919050565b6111328473ffffffffffffffffffffffffffffffffffffffff166112eb565b156112e3578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016111789594939291906124a0565b6020604051808303816000875af19250505080156111b457506040513d601f19601f820116820180604052508101906111b1919061228a565b60015b61125a576111c06122c4565b806308c379a0141561121d57506111d56122e6565b806111e0575061121f565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121491906115a1565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611251906123ee565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d890612480565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061134d82611322565b9050919050565b61135d81611342565b811461136857600080fd5b50565b60008135905061137a81611354565b92915050565b6000819050919050565b61139381611380565b811461139e57600080fd5b50565b6000813590506113b08161138a565b92915050565b600080604083850312156113cd576113cc611318565b5b60006113db8582860161136b565b92505060206113ec858286016113a1565b9150509250929050565b6113ff81611380565b82525050565b600060208201905061141a60008301846113f6565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61145581611420565b811461146057600080fd5b50565b6000813590506114728161144c565b92915050565b60006020828403121561148e5761148d611318565b5b600061149c84828501611463565b91505092915050565b60008115159050919050565b6114ba816114a5565b82525050565b60006020820190506114d560008301846114b1565b92915050565b6000602082840312156114f1576114f0611318565b5b60006114ff848285016113a1565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611542578082015181840152602081019050611527565b83811115611551576000848401525b50505050565b6000601f19601f8301169050919050565b600061157382611508565b61157d8185611513565b935061158d818560208601611524565b61159681611557565b840191505092915050565b600060208201905081810360008301526115bb8184611568565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61160082611557565b810181811067ffffffffffffffff8211171561161f5761161e6115c8565b5b80604052505050565b600061163261130e565b905061163e82826115f7565b919050565b600067ffffffffffffffff82111561165e5761165d6115c8565b5b602082029050602081019050919050565b600080fd5b600061168761168284611643565b611628565b905080838252602082019050602084028301858111156116aa576116a961166f565b5b835b818110156116d357806116bf88826113a1565b8452602084019350506020810190506116ac565b5050509392505050565b600082601f8301126116f2576116f16115c3565b5b8135611702848260208601611674565b91505092915050565b600080fd5b600067ffffffffffffffff82111561172b5761172a6115c8565b5b61173482611557565b9050602081019050919050565b82818337600083830152505050565b600061176361175e84611710565b611628565b90508281526020810184848401111561177f5761177e61170b565b5b61178a848285611741565b509392505050565b600082601f8301126117a7576117a66115c3565b5b81356117b7848260208601611750565b91505092915050565b600080600080600060a086880312156117dc576117db611318565b5b60006117ea8882890161136b565b95505060206117fb8882890161136b565b945050604086013567ffffffffffffffff81111561181c5761181b61131d565b5b611828888289016116dd565b935050606086013567ffffffffffffffff8111156118495761184861131d565b5b611855888289016116dd565b925050608086013567ffffffffffffffff8111156118765761187561131d565b5b61188288828901611792565b9150509295509295909350565b600067ffffffffffffffff8211156118aa576118a96115c8565b5b602082029050602081019050919050565b60006118ce6118c98461188f565b611628565b905080838252602082019050602084028301858111156118f1576118f061166f565b5b835b8181101561191a5780611906888261136b565b8452602084019350506020810190506118f3565b5050509392505050565b600082601f830112611939576119386115c3565b5b81356119498482602086016118bb565b91505092915050565b6000806040838503121561196957611968611318565b5b600083013567ffffffffffffffff8111156119875761198661131d565b5b61199385828601611924565b925050602083013567ffffffffffffffff8111156119b4576119b361131d565b5b6119c0858286016116dd565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119ff81611380565b82525050565b6000611a1183836119f6565b60208301905092915050565b6000602082019050919050565b6000611a35826119ca565b611a3f81856119d5565b9350611a4a836119e6565b8060005b83811015611a7b578151611a628882611a05565b9750611a6d83611a1d565b925050600181019050611a4e565b5085935050505092915050565b60006020820190508181036000830152611aa28184611a2a565b905092915050565b611ab3816114a5565b8114611abe57600080fd5b50565b600081359050611ad081611aaa565b92915050565b60008060408385031215611aed57611aec611318565b5b6000611afb8582860161136b565b9250506020611b0c85828601611ac1565b9150509250929050565b60008060408385031215611b2d57611b2c611318565b5b6000611b3b8582860161136b565b9250506020611b4c8582860161136b565b9150509250929050565b600080600080600060a08688031215611b7257611b71611318565b5b6000611b808882890161136b565b9550506020611b918882890161136b565b9450506040611ba2888289016113a1565b9350506060611bb3888289016113a1565b925050608086013567ffffffffffffffff811115611bd457611bd361131d565b5b611be088828901611792565b9150509295509295909350565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b6000611c49602a83611513565b9150611c5482611bed565b604082019050919050565b60006020820190508181036000830152611c7881611c3c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cc657607f821691505b60208210811415611cda57611cd9611c7f565b5b50919050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206e6f7220617070726f7665640000000000000000000000000000000000602082015250565b6000611d3c602f83611513565b9150611d4782611ce0565b604082019050919050565b60006020820190508181036000830152611d6b81611d2f565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611dce602983611513565b9150611dd982611d72565b604082019050919050565b60006020820190508181036000830152611dfd81611dc1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e6d82611380565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ea057611e9f611e33565b5b600182019050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611f07602883611513565b9150611f1282611eab565b604082019050919050565b60006020820190508181036000830152611f3681611efa565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611f99602583611513565b9150611fa482611f3d565b604082019050919050565b60006020820190508181036000830152611fc881611f8c565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b600061202b602a83611513565b915061203682611fcf565b604082019050919050565b6000602082019050818103600083015261205a8161201e565b9050919050565b600061206c82611380565b915061207783611380565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120ac576120ab611e33565b5b828201905092915050565b600060408201905081810360008301526120d18185611a2a565b905081810360208301526120e58184611a2a565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b600061214a602983611513565b9150612155826120ee565b604082019050919050565b600060208201905081810360008301526121798161213d565b9050919050565b600060408201905061219560008301856113f6565b6121a260208301846113f6565b9392505050565b6121b281611342565b82525050565b600081519050919050565b600082825260208201905092915050565b60006121df826121b8565b6121e981856121c3565b93506121f9818560208601611524565b61220281611557565b840191505092915050565b600060a08201905061222260008301886121a9565b61222f60208301876121a9565b81810360408301526122418186611a2a565b905081810360608301526122558185611a2a565b9050818103608083015261226981846121d4565b90509695505050505050565b6000815190506122848161144c565b92915050565b6000602082840312156122a05761229f611318565b5b60006122ae84828501612275565b91505092915050565b60008160e01c9050919050565b600060033d11156122e35760046000803e6122e06000516122b7565b90505b90565b600060443d10156122f657612379565b6122fe61130e565b60043d036004823e80513d602482011167ffffffffffffffff82111715612326575050612379565b808201805167ffffffffffffffff8111156123445750505050612379565b80602083010160043d038501811115612361575050505050612379565b612370826020018501866115f7565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b60006123d8603483611513565b91506123e38261237c565b604082019050919050565b60006020820190508181036000830152612407816123cb565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b600061246a602883611513565b91506124758261240e565b604082019050919050565b600060208201905081810360008301526124998161245d565b9050919050565b600060a0820190506124b560008301886121a9565b6124c260208301876121a9565b6124cf60408301866113f6565b6124dc60608301856113f6565b81810360808301526124ee81846121d4565b9050969550505050505056fea2646970667358221220a0fd961d00794ebaea7b5cf0293d10fb15ab17eb1e224097112bda69ebaa7f1b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x5C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B16 JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1C5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x714 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x1CAE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x786 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1DE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x513 JUMPI PUSH2 0x512 PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x541 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x58E DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x565 PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B7 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST SWAP1 POP PUSH2 0x547 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DB PUSH2 0x5D4 PUSH2 0x77E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67B PUSH2 0x77E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C1 JUMPI POP PUSH2 0x6C0 DUP6 PUSH2 0x6BB PUSH2 0x77E JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC15 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C1 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x83A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x831 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x844 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH2 0x854 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA05 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x874 PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x894 JUMPI PUSH2 0x893 PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FE SWAP1 PUSH2 0x1E62 JUMP JUMPDEST SWAP1 POP PUSH2 0x857 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP3 SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA92 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xAA0 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEC1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x2160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC08 SWAP2 SWAP1 PUSH2 0x14C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7C SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8F PUSH2 0x77E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC9C DUP6 PUSH2 0x1099 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA9 DUP6 PUSH2 0x1099 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB9 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD47 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE05 SWAP2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE82 SWAP3 SWAP2 SWAP1 PUSH2 0x2180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE98 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0xEA6 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1113 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEE0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12EB JUMP JUMPDEST ISZERO PUSH2 0x1091 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF26 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF62 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1008 JUMPI PUSH2 0xF6E PUSH2 0x22C4 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xFCB JUMPI POP PUSH2 0xF83 PUSH2 0x22E6 JUMP JUMPDEST DUP1 PUSH2 0xF8E JUMPI POP PUSH2 0xFCD JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC2 SWAP2 SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFF SWAP1 PUSH2 0x23EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x108F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1086 SWAP1 PUSH2 0x2480 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B8 JUMPI PUSH2 0x10B7 PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10E6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10FE JUMPI PUSH2 0x10FD PUSH2 0x1E04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1132 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12EB JUMP JUMPDEST ISZERO PUSH2 0x12E3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1178 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11B4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x125A JUMPI PUSH2 0x11C0 PUSH2 0x22C4 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x121D JUMPI POP PUSH2 0x11D5 PUSH2 0x22E6 JUMP JUMPDEST DUP1 PUSH2 0x11E0 JUMPI POP PUSH2 0x121F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1251 SWAP1 PUSH2 0x23EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D8 SWAP1 PUSH2 0x2480 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134D DUP3 PUSH2 0x1322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135D DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP2 EQ PUSH2 0x1368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x137A DUP2 PUSH2 0x1354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1393 DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP2 EQ PUSH2 0x139E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13B0 DUP2 PUSH2 0x138A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH2 0x13CC PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13DB DUP6 DUP3 DUP7 ADD PUSH2 0x136B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13EC DUP6 DUP3 DUP7 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13FF DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x141A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1455 DUP2 PUSH2 0x1420 JUMP JUMPDEST DUP2 EQ PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1472 DUP2 PUSH2 0x144C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148E JUMPI PUSH2 0x148D PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x149C DUP5 DUP3 DUP6 ADD PUSH2 0x1463 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BA DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F1 JUMPI PUSH2 0x14F0 PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14FF DUP5 DUP3 DUP6 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1542 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1527 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1573 DUP3 PUSH2 0x1508 JUMP JUMPDEST PUSH2 0x157D DUP2 DUP6 PUSH2 0x1513 JUMP JUMPDEST SWAP4 POP PUSH2 0x158D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1524 JUMP JUMPDEST PUSH2 0x1596 DUP2 PUSH2 0x1557 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15BB DUP2 DUP5 PUSH2 0x1568 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1600 DUP3 PUSH2 0x1557 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x161F JUMPI PUSH2 0x161E PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1632 PUSH2 0x130E JUMP JUMPDEST SWAP1 POP PUSH2 0x163E DUP3 DUP3 PUSH2 0x15F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x165E JUMPI PUSH2 0x165D PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1687 PUSH2 0x1682 DUP5 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x16AA JUMPI PUSH2 0x16A9 PUSH2 0x166F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16D3 JUMPI DUP1 PUSH2 0x16BF DUP9 DUP3 PUSH2 0x13A1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16AC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16F2 JUMPI PUSH2 0x16F1 PUSH2 0x15C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1702 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1674 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x172B JUMPI PUSH2 0x172A PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST PUSH2 0x1734 DUP3 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1763 PUSH2 0x175E DUP5 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x170B JUMP JUMPDEST JUMPDEST PUSH2 0x178A DUP5 DUP3 DUP6 PUSH2 0x1741 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17A7 JUMPI PUSH2 0x17A6 PUSH2 0x15C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17B7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1750 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EA DUP9 DUP3 DUP10 ADD PUSH2 0x136B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17FB DUP9 DUP3 DUP10 ADD PUSH2 0x136B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181B PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x1828 DUP9 DUP3 DUP10 ADD PUSH2 0x16DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1848 PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x1855 DUP9 DUP3 DUP10 ADD PUSH2 0x16DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1876 JUMPI PUSH2 0x1875 PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x1882 DUP9 DUP3 DUP10 ADD PUSH2 0x1792 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x15C8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CE PUSH2 0x18C9 DUP5 PUSH2 0x188F JUMP JUMPDEST PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x166F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x191A JUMPI DUP1 PUSH2 0x1906 DUP9 DUP3 PUSH2 0x136B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18F3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x15C3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1949 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1968 PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1987 JUMPI PUSH2 0x1986 PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x1993 DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19B4 JUMPI PUSH2 0x19B3 PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x19C0 DUP6 DUP3 DUP7 ADD PUSH2 0x16DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19FF DUP2 PUSH2 0x1380 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A11 DUP4 DUP4 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 DUP3 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x1A3F DUP2 DUP6 PUSH2 0x19D5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A4A DUP4 PUSH2 0x19E6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A7B JUMPI DUP2 MLOAD PUSH2 0x1A62 DUP9 DUP3 PUSH2 0x1A05 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A6D DUP4 PUSH2 0x1A1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A4E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA2 DUP2 DUP5 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AB3 DUP2 PUSH2 0x14A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AD0 DUP2 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AED JUMPI PUSH2 0x1AEC PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AFB DUP6 DUP3 DUP7 ADD PUSH2 0x136B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B0C DUP6 DUP3 DUP7 ADD PUSH2 0x1AC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2D JUMPI PUSH2 0x1B2C PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B3B DUP6 DUP3 DUP7 ADD PUSH2 0x136B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B4C DUP6 DUP3 DUP7 ADD PUSH2 0x136B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B80 DUP9 DUP3 DUP10 ADD PUSH2 0x136B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B91 DUP9 DUP3 DUP10 ADD PUSH2 0x136B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1BA2 DUP9 DUP3 DUP10 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BB3 DUP9 DUP3 DUP10 ADD PUSH2 0x13A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BD4 JUMPI PUSH2 0x1BD3 PUSH2 0x131D JUMP JUMPDEST JUMPDEST PUSH2 0x1BE0 DUP9 DUP3 DUP10 ADD PUSH2 0x1792 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C49 PUSH1 0x2A DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C54 DUP3 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C78 DUP2 PUSH2 0x1C3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CC6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1CDA JUMPI PUSH2 0x1CD9 PUSH2 0x1C7F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D3C PUSH1 0x2F DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D47 DUP3 PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D6B DUP2 PUSH2 0x1D2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCE PUSH1 0x29 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD9 DUP3 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DFD DUP2 PUSH2 0x1DC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E6D DUP3 PUSH2 0x1380 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1EA0 JUMPI PUSH2 0x1E9F PUSH2 0x1E33 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F07 PUSH1 0x28 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F12 DUP3 PUSH2 0x1EAB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F36 DUP2 PUSH2 0x1EFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F99 PUSH1 0x25 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA4 DUP3 PUSH2 0x1F3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FC8 DUP2 PUSH2 0x1F8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202B PUSH1 0x2A DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x2036 DUP3 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x205A DUP2 PUSH2 0x201E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206C DUP3 PUSH2 0x1380 JUMP JUMPDEST SWAP2 POP PUSH2 0x2077 DUP4 PUSH2 0x1380 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x1E33 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D1 DUP2 DUP6 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x20E5 DUP2 DUP5 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214A PUSH1 0x29 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x2155 DUP3 PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2179 DUP2 PUSH2 0x213D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2195 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x21A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21B2 DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DF DUP3 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x21E9 DUP2 DUP6 PUSH2 0x21C3 JUMP JUMPDEST SWAP4 POP PUSH2 0x21F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1524 JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x1557 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2222 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x222F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21A9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2241 DUP2 DUP7 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2255 DUP2 DUP6 PUSH2 0x1A2A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2269 DUP2 DUP5 PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2284 DUP2 PUSH2 0x144C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A0 JUMPI PUSH2 0x229F PUSH2 0x1318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22AE DUP5 DUP3 DUP6 ADD PUSH2 0x2275 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x22E3 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x22E0 PUSH1 0x0 MLOAD PUSH2 0x22B7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x22F6 JUMPI PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x22FE PUSH2 0x130E JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2326 JUMPI POP POP PUSH2 0x2379 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2344 JUMPI POP POP POP POP PUSH2 0x2379 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x2361 JUMPI POP POP POP POP POP PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x2370 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x15F7 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23D8 PUSH1 0x34 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x23E3 DUP3 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2407 DUP2 PUSH2 0x23CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246A PUSH1 0x28 DUP4 PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP PUSH2 0x2475 DUP3 PUSH2 0x240E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2499 DUP2 PUSH2 0x245D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x24B5 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x24C2 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x21A9 JUMP JUMPDEST PUSH2 0x24CF PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x24DC PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x13F6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x24EE DUP2 DUP5 PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 REVERT SWAP7 SAR STOP PUSH26 0x4EBAEA7B5CF0293D10FB15AB17EB1E224097112BDA69EBAA7F1B PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "570:16691:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1940:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4065:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2569:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3145:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3365:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3598:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:227;2271:7;2317:1;2298:21;;:7;:21;;;;2290:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2383:9;:13;2393:2;2383:13;;;;;;;;;;;:22;2397:7;2383:22;;;;;;;;;;;;;;;;2376:29;;2185:227;;;;:::o;1236:305::-;1338:4;1388:26;1373:41;;;:11;:41;;;;:109;;;;1445:37;1430:52;;;:11;:52;;;;1373:109;:161;;;;1498:36;1522:11;1498:23;:36::i;:::-;1373:161;1354:180;;1236:305;;;:::o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4065:427::-;4298:12;:10;:12::i;:::-;4290:20;;:4;:20;;;:60;;;;4314:36;4331:4;4337:12;:10;:12::i;:::-;4314:16;:36::i;:::-;4290:60;4269:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;4433:52;4456:4;4462:2;4466:3;4471:7;4480:4;4433:22;:52::i;:::-;4065:427;;;;;:::o;2569:508::-;2720:16;2779:3;:10;2760:8;:15;:29;2752:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2846:30;2893:8;:15;2879:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2846:63;;2925:9;2920:120;2944:8;:15;2940:1;:19;2920:120;;;2999:30;3009:8;3018:1;3009:11;;;;;;;;:::i;:::-;;;;;;;;3022:3;3026:1;3022:6;;;;;;;;:::i;:::-;;;;;;;;2999:9;:30::i;:::-;2980:13;2994:1;2980:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;2961:3;;;;:::i;:::-;;;2920:120;;;;3057:13;3050:20;;;2569:508;;;;:::o;3145:153::-;3239:52;3258:12;:10;:12::i;:::-;3272:8;3282;3239:18;:52::i;:::-;3145:153;;:::o;3365:166::-;3464:4;3487:18;:27;3506:7;3487:27;;;;;;;;;;;;;;;:37;3515:8;3487:37;;;;;;;;;;;;;;;;;;;;;;;;;3480:44;;3365:166;;;;:::o;3598:395::-;3806:12;:10;:12::i;:::-;3798:20;;:4;:20;;;:60;;;;3822:36;3839:4;3845:12;:10;:12::i;:::-;3822:16;:36::i;:::-;3798:60;3777:154;;;;;;;;;;;;:::i;:::-;;;;;;;;;3941:45;3959:4;3965:2;3969;3973:6;3981:4;3941:17;:45::i;:::-;3598:395;;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;6235:1115:0:-;6455:7;:14;6441:3;:10;:28;6433:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6546:1;6532:16;;:2;:16;;;;6524:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6601:16;6620:12;:10;:12::i;:::-;6601:31;;6643:60;6664:8;6674:4;6680:2;6684:3;6689:7;6698:4;6643:20;:60::i;:::-;6719:9;6714:411;6738:3;:10;6734:1;:14;6714:411;;;6769:10;6782:3;6786:1;6782:6;;;;;;;;:::i;:::-;;;;;;;;6769:19;;6802:14;6819:7;6827:1;6819:10;;;;;;;;:::i;:::-;;;;;;;;6802:27;;6844:19;6866:9;:13;6876:2;6866:13;;;;;;;;;;;:19;6880:4;6866:19;;;;;;;;;;;;;;;;6844:41;;6922:6;6907:11;:21;;6899:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7053:6;7039:11;:20;7017:9;:13;7027:2;7017:13;;;;;;;;;;;:19;7031:4;7017:19;;;;;;;;;;;;;;;:42;;;;7108:6;7087:9;:13;7097:2;7087:13;;;;;;;;;;;:17;7101:2;7087:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6755:370;;;6750:3;;;;:::i;:::-;;;6714:411;;;;7170:2;7140:47;;7164:4;7140:47;;7154:8;7140:47;;;7174:3;7179:7;7140:47;;;;;;;:::i;:::-;;;;;;;;7198:59;7218:8;7228:4;7234:2;7238:3;7243:7;7252:4;7198:19;:59::i;:::-;7268:75;7304:8;7314:4;7320:2;7324:3;7329:7;7338:4;7268:35;:75::i;:::-;6423:927;6235:1115;;;;;:::o;12912:323::-;13062:8;13053:17;;:5;:17;;;;13045:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13164:8;13126:18;:25;13145:5;13126:25;;;;;;;;;;;;;;;:35;13152:8;13126:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13209:8;13187:41;;13202:5;13187:41;;;13219:8;13187:41;;;;;;:::i;:::-;;;;;;;;12912:323;;;:::o;4942:947::-;5137:1;5123:16;;:2;:16;;;;5115:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5192:16;5211:12;:10;:12::i;:::-;5192:31;;5233:20;5256:21;5274:2;5256:17;:21::i;:::-;5233:44;;5287:24;5314:25;5332:6;5314:17;:25::i;:::-;5287:52;;5350:60;5371:8;5381:4;5387:2;5391:3;5396:7;5405:4;5350:20;:60::i;:::-;5421:19;5443:9;:13;5453:2;5443:13;;;;;;;;;;;:19;5457:4;5443:19;;;;;;;;;;;;;;;;5421:41;;5495:6;5480:11;:21;;5472:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5618:6;5604:11;:20;5582:9;:13;5592:2;5582:13;;;;;;;;;;;:19;5596:4;5582:19;;;;;;;;;;;;;;;:42;;;;5665:6;5644:9;:13;5654:2;5644:13;;;;;;;;;;;:17;5658:2;5644:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5718:2;5687:46;;5712:4;5687:46;;5702:8;5687:46;;;5722:2;5726:6;5687:46;;;;;;;:::i;:::-;;;;;;;;5744:59;5764:8;5774:4;5780:2;5784:3;5789:7;5798:4;5744:19;:59::i;:::-;5814:68;5845:8;5855:4;5861:2;5865;5869:6;5877:4;5814:30;:68::i;:::-;5105:784;;;;4942:947;;;;;:::o;14171:214::-;;;;;;;:::o;15318:213::-;;;;;;;:::o;16268:792::-;16500:15;:2;:13;;;:15::i;:::-;16496:558;;;16552:2;16535:43;;;16579:8;16589:4;16595:3;16600:7;16609:4;16535:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16531:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16920:6;16913:14;;;;;;;;;;;:::i;:::-;;;;;;;;16531:513;;;16967:62;;;;;;;;;;:::i;:::-;;;;;;;;16531:513;16705:48;;;16693:60;;;:8;:60;;;;16689:157;;16777:50;;;;;;;;;;:::i;:::-;;;;;;;;16689:157;16615:245;16496:558;16268:792;;;;;;:::o;17066:193::-;17132:16;17160:22;17199:1;17185:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17160:41;;17222:7;17211:5;17217:1;17211:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;17247:5;17240:12;;;17066:193;;;:::o;15537:725::-;15744:15;:2;:13;;;:15::i;:::-;15740:516;;;15796:2;15779:38;;;15818:8;15828:4;15834:2;15838:6;15846:4;15779:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15775:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16122:6;16115:14;;;;;;;;;;;:::i;:::-;;;;;;;;15775:471;;;16169:62;;;;;;;;;;:::i;:::-;;;;;;;;15775:471;15912:43;;;15900:55;;;:8;:55;;;;15896:152;;15979:50;;;;;;;;;;:::i;:::-;;;;;;;;15896:152;15852:210;15740:516;15537:725;;;;;;:::o;1175:320:4:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:307::-;3896:1;3906:113;3920:6;3917:1;3914:13;3906:113;;;4005:1;4000:3;3996:11;3990:18;3986:1;3981:3;3977:11;3970:39;3942:2;3939:1;3935:10;3930:15;;3906:113;;;4037:6;4034:1;4031:13;4028:101;;;4117:1;4108:6;4103:3;4099:16;4092:27;4028:101;3877:258;3828:307;;;:::o;4141:102::-;4182:6;4233:2;4229:7;4224:2;4217:5;4213:14;4209:28;4199:38;;4141:102;;;:::o;4249:364::-;4337:3;4365:39;4398:5;4365:39;:::i;:::-;4420:71;4484:6;4479:3;4420:71;:::i;:::-;4413:78;;4500:52;4545:6;4540:3;4533:4;4526:5;4522:16;4500:52;:::i;:::-;4577:29;4599:6;4577:29;:::i;:::-;4572:3;4568:39;4561:46;;4341:272;4249:364;;;;:::o;4619:313::-;4732:4;4770:2;4759:9;4755:18;4747:26;;4819:9;4813:4;4809:20;4805:1;4794:9;4790:17;4783:47;4847:78;4920:4;4911:6;4847:78;:::i;:::-;4839:86;;4619:313;;;;:::o;4938:117::-;5047:1;5044;5037:12;5061:180;5109:77;5106:1;5099:88;5206:4;5203:1;5196:15;5230:4;5227:1;5220:15;5247:281;5330:27;5352:4;5330:27;:::i;:::-;5322:6;5318:40;5460:6;5448:10;5445:22;5424:18;5412:10;5409:34;5406:62;5403:88;;;5471:18;;:::i;:::-;5403:88;5511:10;5507:2;5500:22;5290:238;5247:281;;:::o;5534:129::-;5568:6;5595:20;;:::i;:::-;5585:30;;5624:33;5652:4;5644:6;5624:33;:::i;:::-;5534:129;;;:::o;5669:311::-;5746:4;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5908:4;5900:6;5896:17;5888:25;;5968:4;5962;5958:15;5950:23;;5669:311;;;:::o;5986:117::-;6095:1;6092;6085:12;6126:710;6222:5;6247:81;6263:64;6320:6;6263:64;:::i;:::-;6247:81;:::i;:::-;6238:90;;6348:5;6377:6;6370:5;6363:21;6411:4;6404:5;6400:16;6393:23;;6464:4;6456:6;6452:17;6444:6;6440:30;6493:3;6485:6;6482:15;6479:122;;;6512:79;;:::i;:::-;6479:122;6627:6;6610:220;6644:6;6639:3;6636:15;6610:220;;;6719:3;6748:37;6781:3;6769:10;6748:37;:::i;:::-;6743:3;6736:50;6815:4;6810:3;6806:14;6799:21;;6686:144;6670:4;6665:3;6661:14;6654:21;;6610:220;;;6614:21;6228:608;;6126:710;;;;;:::o;6859:370::-;6930:5;6979:3;6972:4;6964:6;6960:17;6956:27;6946:122;;6987:79;;:::i;:::-;6946:122;7104:6;7091:20;7129:94;7219:3;7211:6;7204:4;7196:6;7192:17;7129:94;:::i;:::-;7120:103;;6936:293;6859:370;;;;:::o;7235:117::-;7344:1;7341;7334:12;7358:307;7419:4;7509:18;7501:6;7498:30;7495:56;;;7531:18;;:::i;:::-;7495:56;7569:29;7591:6;7569:29;:::i;:::-;7561:37;;7653:4;7647;7643:15;7635:23;;7358:307;;;:::o;7671:154::-;7755:6;7750:3;7745;7732:30;7817:1;7808:6;7803:3;7799:16;7792:27;7671:154;;;:::o;7831:410::-;7908:5;7933:65;7949:48;7990:6;7949:48;:::i;:::-;7933:65;:::i;:::-;7924:74;;8021:6;8014:5;8007:21;8059:4;8052:5;8048:16;8097:3;8088:6;8083:3;8079:16;8076:25;8073:112;;;8104:79;;:::i;:::-;8073:112;8194:41;8228:6;8223:3;8218;8194:41;:::i;:::-;7914:327;7831:410;;;;;:::o;8260:338::-;8315:5;8364:3;8357:4;8349:6;8345:17;8341:27;8331:122;;8372:79;;:::i;:::-;8331:122;8489:6;8476:20;8514:78;8588:3;8580:6;8573:4;8565:6;8561:17;8514:78;:::i;:::-;8505:87;;8321:277;8260:338;;;;:::o;8604:1509::-;8758:6;8766;8774;8782;8790;8839:3;8827:9;8818:7;8814:23;8810:33;8807:120;;;8846:79;;:::i;:::-;8807:120;8966:1;8991:53;9036:7;9027:6;9016:9;9012:22;8991:53;:::i;:::-;8981:63;;8937:117;9093:2;9119:53;9164:7;9155:6;9144:9;9140:22;9119:53;:::i;:::-;9109:63;;9064:118;9249:2;9238:9;9234:18;9221:32;9280:18;9272:6;9269:30;9266:117;;;9302:79;;:::i;:::-;9266:117;9407:78;9477:7;9468:6;9457:9;9453:22;9407:78;:::i;:::-;9397:88;;9192:303;9562:2;9551:9;9547:18;9534:32;9593:18;9585:6;9582:30;9579:117;;;9615:79;;:::i;:::-;9579:117;9720:78;9790:7;9781:6;9770:9;9766:22;9720:78;:::i;:::-;9710:88;;9505:303;9875:3;9864:9;9860:19;9847:33;9907:18;9899:6;9896:30;9893:117;;;9929:79;;:::i;:::-;9893:117;10034:62;10088:7;10079:6;10068:9;10064:22;10034:62;:::i;:::-;10024:72;;9818:288;8604:1509;;;;;;;;:::o;10119:311::-;10196:4;10286:18;10278:6;10275:30;10272:56;;;10308:18;;:::i;:::-;10272:56;10358:4;10350:6;10346:17;10338:25;;10418:4;10412;10408:15;10400:23;;10119:311;;;:::o;10453:710::-;10549:5;10574:81;10590:64;10647:6;10590:64;:::i;:::-;10574:81;:::i;:::-;10565:90;;10675:5;10704:6;10697:5;10690:21;10738:4;10731:5;10727:16;10720:23;;10791:4;10783:6;10779:17;10771:6;10767:30;10820:3;10812:6;10809:15;10806:122;;;10839:79;;:::i;:::-;10806:122;10954:6;10937:220;10971:6;10966:3;10963:15;10937:220;;;11046:3;11075:37;11108:3;11096:10;11075:37;:::i;:::-;11070:3;11063:50;11142:4;11137:3;11133:14;11126:21;;11013:144;10997:4;10992:3;10988:14;10981:21;;10937:220;;;10941:21;10555:608;;10453:710;;;;;:::o;11186:370::-;11257:5;11306:3;11299:4;11291:6;11287:17;11283:27;11273:122;;11314:79;;:::i;:::-;11273:122;11431:6;11418:20;11456:94;11546:3;11538:6;11531:4;11523:6;11519:17;11456:94;:::i;:::-;11447:103;;11263:293;11186:370;;;;:::o;11562:894::-;11680:6;11688;11737:2;11725:9;11716:7;11712:23;11708:32;11705:119;;;11743:79;;:::i;:::-;11705:119;11891:1;11880:9;11876:17;11863:31;11921:18;11913:6;11910:30;11907:117;;;11943:79;;:::i;:::-;11907:117;12048:78;12118:7;12109:6;12098:9;12094:22;12048:78;:::i;:::-;12038:88;;11834:302;12203:2;12192:9;12188:18;12175:32;12234:18;12226:6;12223:30;12220:117;;;12256:79;;:::i;:::-;12220:117;12361:78;12431:7;12422:6;12411:9;12407:22;12361:78;:::i;:::-;12351:88;;12146:303;11562:894;;;;;:::o;12462:114::-;12529:6;12563:5;12557:12;12547:22;;12462:114;;;:::o;12582:184::-;12681:11;12715:6;12710:3;12703:19;12755:4;12750:3;12746:14;12731:29;;12582:184;;;;:::o;12772:132::-;12839:4;12862:3;12854:11;;12892:4;12887:3;12883:14;12875:22;;12772:132;;;:::o;12910:108::-;12987:24;13005:5;12987:24;:::i;:::-;12982:3;12975:37;12910:108;;:::o;13024:179::-;13093:10;13114:46;13156:3;13148:6;13114:46;:::i;:::-;13192:4;13187:3;13183:14;13169:28;;13024:179;;;;:::o;13209:113::-;13279:4;13311;13306:3;13302:14;13294:22;;13209:113;;;:::o;13358:732::-;13477:3;13506:54;13554:5;13506:54;:::i;:::-;13576:86;13655:6;13650:3;13576:86;:::i;:::-;13569:93;;13686:56;13736:5;13686:56;:::i;:::-;13765:7;13796:1;13781:284;13806:6;13803:1;13800:13;13781:284;;;13882:6;13876:13;13909:63;13968:3;13953:13;13909:63;:::i;:::-;13902:70;;13995:60;14048:6;13995:60;:::i;:::-;13985:70;;13841:224;13828:1;13825;13821:9;13816:14;;13781:284;;;13785:14;14081:3;14074:10;;13482:608;;;13358:732;;;;:::o;14096:373::-;14239:4;14277:2;14266:9;14262:18;14254:26;;14326:9;14320:4;14316:20;14312:1;14301:9;14297:17;14290:47;14354:108;14457:4;14448:6;14354:108;:::i;:::-;14346:116;;14096:373;;;;:::o;14475:116::-;14545:21;14560:5;14545:21;:::i;:::-;14538:5;14535:32;14525:60;;14581:1;14578;14571:12;14525:60;14475:116;:::o;14597:133::-;14640:5;14678:6;14665:20;14656:29;;14694:30;14718:5;14694:30;:::i;:::-;14597:133;;;;:::o;14736:468::-;14801:6;14809;14858:2;14846:9;14837:7;14833:23;14829:32;14826:119;;;14864:79;;:::i;:::-;14826:119;14984:1;15009:53;15054:7;15045:6;15034:9;15030:22;15009:53;:::i;:::-;14999:63;;14955:117;15111:2;15137:50;15179:7;15170:6;15159:9;15155:22;15137:50;:::i;:::-;15127:60;;15082:115;14736:468;;;;;:::o;15210:474::-;15278:6;15286;15335:2;15323:9;15314:7;15310:23;15306:32;15303:119;;;15341:79;;:::i;:::-;15303:119;15461:1;15486:53;15531:7;15522:6;15511:9;15507:22;15486:53;:::i;:::-;15476:63;;15432:117;15588:2;15614:53;15659:7;15650:6;15639:9;15635:22;15614:53;:::i;:::-;15604:63;;15559:118;15210:474;;;;;:::o;15690:1089::-;15794:6;15802;15810;15818;15826;15875:3;15863:9;15854:7;15850:23;15846:33;15843:120;;;15882:79;;:::i;:::-;15843:120;16002:1;16027:53;16072:7;16063:6;16052:9;16048:22;16027:53;:::i;:::-;16017:63;;15973:117;16129:2;16155:53;16200:7;16191:6;16180:9;16176:22;16155:53;:::i;:::-;16145:63;;16100:118;16257:2;16283:53;16328:7;16319:6;16308:9;16304:22;16283:53;:::i;:::-;16273:63;;16228:118;16385:2;16411:53;16456:7;16447:6;16436:9;16432:22;16411:53;:::i;:::-;16401:63;;16356:118;16541:3;16530:9;16526:19;16513:33;16573:18;16565:6;16562:30;16559:117;;;16595:79;;:::i;:::-;16559:117;16700:62;16754:7;16745:6;16734:9;16730:22;16700:62;:::i;:::-;16690:72;;16484:288;15690:1089;;;;;;;;:::o;16785:229::-;16925:34;16921:1;16913:6;16909:14;16902:58;16994:12;16989:2;16981:6;16977:15;16970:37;16785:229;:::o;17020:366::-;17162:3;17183:67;17247:2;17242:3;17183:67;:::i;:::-;17176:74;;17259:93;17348:3;17259:93;:::i;:::-;17377:2;17372:3;17368:12;17361:19;;17020:366;;;:::o;17392:419::-;17558:4;17596:2;17585:9;17581:18;17573:26;;17645:9;17639:4;17635:20;17631:1;17620:9;17616:17;17609:47;17673:131;17799:4;17673:131;:::i;:::-;17665:139;;17392:419;;;:::o;17817:180::-;17865:77;17862:1;17855:88;17962:4;17959:1;17952:15;17986:4;17983:1;17976:15;18003:320;18047:6;18084:1;18078:4;18074:12;18064:22;;18131:1;18125:4;18121:12;18152:18;18142:81;;18208:4;18200:6;18196:17;18186:27;;18142:81;18270:2;18262:6;18259:14;18239:18;18236:38;18233:84;;;18289:18;;:::i;:::-;18233:84;18054:269;18003:320;;;:::o;18329:234::-;18469:34;18465:1;18457:6;18453:14;18446:58;18538:17;18533:2;18525:6;18521:15;18514:42;18329:234;:::o;18569:366::-;18711:3;18732:67;18796:2;18791:3;18732:67;:::i;:::-;18725:74;;18808:93;18897:3;18808:93;:::i;:::-;18926:2;18921:3;18917:12;18910:19;;18569:366;;;:::o;18941:419::-;19107:4;19145:2;19134:9;19130:18;19122:26;;19194:9;19188:4;19184:20;19180:1;19169:9;19165:17;19158:47;19222:131;19348:4;19222:131;:::i;:::-;19214:139;;18941:419;;;:::o;19366:228::-;19506:34;19502:1;19494:6;19490:14;19483:58;19575:11;19570:2;19562:6;19558:15;19551:36;19366:228;:::o;19600:366::-;19742:3;19763:67;19827:2;19822:3;19763:67;:::i;:::-;19756:74;;19839:93;19928:3;19839:93;:::i;:::-;19957:2;19952:3;19948:12;19941:19;;19600:366;;;:::o;19972:419::-;20138:4;20176:2;20165:9;20161:18;20153:26;;20225:9;20219:4;20215:20;20211:1;20200:9;20196:17;20189:47;20253:131;20379:4;20253:131;:::i;:::-;20245:139;;19972:419;;;:::o;20397:180::-;20445:77;20442:1;20435:88;20542:4;20539:1;20532:15;20566:4;20563:1;20556:15;20583:180;20631:77;20628:1;20621:88;20728:4;20725:1;20718:15;20752:4;20749:1;20742:15;20769:233;20808:3;20831:24;20849:5;20831:24;:::i;:::-;20822:33;;20877:66;20870:5;20867:77;20864:103;;;20947:18;;:::i;:::-;20864:103;20994:1;20987:5;20983:13;20976:20;;20769:233;;;:::o;21008:227::-;21148:34;21144:1;21136:6;21132:14;21125:58;21217:10;21212:2;21204:6;21200:15;21193:35;21008:227;:::o;21241:366::-;21383:3;21404:67;21468:2;21463:3;21404:67;:::i;:::-;21397:74;;21480:93;21569:3;21480:93;:::i;:::-;21598:2;21593:3;21589:12;21582:19;;21241:366;;;:::o;21613:419::-;21779:4;21817:2;21806:9;21802:18;21794:26;;21866:9;21860:4;21856:20;21852:1;21841:9;21837:17;21830:47;21894:131;22020:4;21894:131;:::i;:::-;21886:139;;21613:419;;;:::o;22038:224::-;22178:34;22174:1;22166:6;22162:14;22155:58;22247:7;22242:2;22234:6;22230:15;22223:32;22038:224;:::o;22268:366::-;22410:3;22431:67;22495:2;22490:3;22431:67;:::i;:::-;22424:74;;22507:93;22596:3;22507:93;:::i;:::-;22625:2;22620:3;22616:12;22609:19;;22268:366;;;:::o;22640:419::-;22806:4;22844:2;22833:9;22829:18;22821:26;;22893:9;22887:4;22883:20;22879:1;22868:9;22864:17;22857:47;22921:131;23047:4;22921:131;:::i;:::-;22913:139;;22640:419;;;:::o;23065:229::-;23205:34;23201:1;23193:6;23189:14;23182:58;23274:12;23269:2;23261:6;23257:15;23250:37;23065:229;:::o;23300:366::-;23442:3;23463:67;23527:2;23522:3;23463:67;:::i;:::-;23456:74;;23539:93;23628:3;23539:93;:::i;:::-;23657:2;23652:3;23648:12;23641:19;;23300:366;;;:::o;23672:419::-;23838:4;23876:2;23865:9;23861:18;23853:26;;23925:9;23919:4;23915:20;23911:1;23900:9;23896:17;23889:47;23953:131;24079:4;23953:131;:::i;:::-;23945:139;;23672:419;;;:::o;24097:305::-;24137:3;24156:20;24174:1;24156:20;:::i;:::-;24151:25;;24190:20;24208:1;24190:20;:::i;:::-;24185:25;;24344:1;24276:66;24272:74;24269:1;24266:81;24263:107;;;24350:18;;:::i;:::-;24263:107;24394:1;24391;24387:9;24380:16;;24097:305;;;;:::o;24408:634::-;24629:4;24667:2;24656:9;24652:18;24644:26;;24716:9;24710:4;24706:20;24702:1;24691:9;24687:17;24680:47;24744:108;24847:4;24838:6;24744:108;:::i;:::-;24736:116;;24899:9;24893:4;24889:20;24884:2;24873:9;24869:18;24862:48;24927:108;25030:4;25021:6;24927:108;:::i;:::-;24919:116;;24408:634;;;;;:::o;25048:228::-;25188:34;25184:1;25176:6;25172:14;25165:58;25257:11;25252:2;25244:6;25240:15;25233:36;25048:228;:::o;25282:366::-;25424:3;25445:67;25509:2;25504:3;25445:67;:::i;:::-;25438:74;;25521:93;25610:3;25521:93;:::i;:::-;25639:2;25634:3;25630:12;25623:19;;25282:366;;;:::o;25654:419::-;25820:4;25858:2;25847:9;25843:18;25835:26;;25907:9;25901:4;25897:20;25893:1;25882:9;25878:17;25871:47;25935:131;26061:4;25935:131;:::i;:::-;25927:139;;25654:419;;;:::o;26079:332::-;26200:4;26238:2;26227:9;26223:18;26215:26;;26251:71;26319:1;26308:9;26304:17;26295:6;26251:71;:::i;:::-;26332:72;26400:2;26389:9;26385:18;26376:6;26332:72;:::i;:::-;26079:332;;;;;:::o;26417:118::-;26504:24;26522:5;26504:24;:::i;:::-;26499:3;26492:37;26417:118;;:::o;26541:98::-;26592:6;26626:5;26620:12;26610:22;;26541:98;;;:::o;26645:168::-;26728:11;26762:6;26757:3;26750:19;26802:4;26797:3;26793:14;26778:29;;26645:168;;;;:::o;26819:360::-;26905:3;26933:38;26965:5;26933:38;:::i;:::-;26987:70;27050:6;27045:3;26987:70;:::i;:::-;26980:77;;27066:52;27111:6;27106:3;27099:4;27092:5;27088:16;27066:52;:::i;:::-;27143:29;27165:6;27143:29;:::i;:::-;27138:3;27134:39;27127:46;;26909:270;26819:360;;;;:::o;27185:1053::-;27508:4;27546:3;27535:9;27531:19;27523:27;;27560:71;27628:1;27617:9;27613:17;27604:6;27560:71;:::i;:::-;27641:72;27709:2;27698:9;27694:18;27685:6;27641:72;:::i;:::-;27760:9;27754:4;27750:20;27745:2;27734:9;27730:18;27723:48;27788:108;27891:4;27882:6;27788:108;:::i;:::-;27780:116;;27943:9;27937:4;27933:20;27928:2;27917:9;27913:18;27906:48;27971:108;28074:4;28065:6;27971:108;:::i;:::-;27963:116;;28127:9;28121:4;28117:20;28111:3;28100:9;28096:19;28089:49;28155:76;28226:4;28217:6;28155:76;:::i;:::-;28147:84;;27185:1053;;;;;;;;:::o;28244:141::-;28300:5;28331:6;28325:13;28316:22;;28347:32;28373:5;28347:32;:::i;:::-;28244:141;;;;:::o;28391:349::-;28460:6;28509:2;28497:9;28488:7;28484:23;28480:32;28477:119;;;28515:79;;:::i;:::-;28477:119;28635:1;28660:63;28715:7;28706:6;28695:9;28691:22;28660:63;:::i;:::-;28650:73;;28606:127;28391:349;;;;:::o;28746:106::-;28790:8;28839:5;28834:3;28830:15;28809:36;;28746:106;;;:::o;28858:183::-;28893:3;28931:1;28913:16;28910:23;28907:128;;;28969:1;28966;28963;28948:23;28991:34;29022:1;29016:8;28991:34;:::i;:::-;28984:41;;28907:128;28858:183;:::o;29047:711::-;29086:3;29124:4;29106:16;29103:26;29100:39;;;29132:5;;29100:39;29161:20;;:::i;:::-;29236:1;29218:16;29214:24;29211:1;29205:4;29190:49;29269:4;29263:11;29368:16;29361:4;29353:6;29349:17;29346:39;29313:18;29305:6;29302:30;29286:113;29283:146;;;29414:5;;;;29283:146;29460:6;29454:4;29450:17;29496:3;29490:10;29523:18;29515:6;29512:30;29509:43;;;29545:5;;;;;;29509:43;29593:6;29586:4;29581:3;29577:14;29573:27;29652:1;29634:16;29630:24;29624:4;29620:35;29615:3;29612:44;29609:57;;;29659:5;;;;;;;29609:57;29676;29724:6;29718:4;29714:17;29706:6;29702:30;29696:4;29676:57;:::i;:::-;29749:3;29742:10;;29090:668;;;;;29047:711;;:::o;29764:239::-;29904:34;29900:1;29892:6;29888:14;29881:58;29973:22;29968:2;29960:6;29956:15;29949:47;29764:239;:::o;30009:366::-;30151:3;30172:67;30236:2;30231:3;30172:67;:::i;:::-;30165:74;;30248:93;30337:3;30248:93;:::i;:::-;30366:2;30361:3;30357:12;30350:19;;30009:366;;;:::o;30381:419::-;30547:4;30585:2;30574:9;30570:18;30562:26;;30634:9;30628:4;30624:20;30620:1;30609:9;30605:17;30598:47;30662:131;30788:4;30662:131;:::i;:::-;30654:139;;30381:419;;;:::o;30806:227::-;30946:34;30942:1;30934:6;30930:14;30923:58;31015:10;31010:2;31002:6;30998:15;30991:35;30806:227;:::o;31039:366::-;31181:3;31202:67;31266:2;31261:3;31202:67;:::i;:::-;31195:74;;31278:93;31367:3;31278:93;:::i;:::-;31396:2;31391:3;31387:12;31380:19;;31039:366;;;:::o;31411:419::-;31577:4;31615:2;31604:9;31600:18;31592:26;;31664:9;31658:4;31654:20;31650:1;31639:9;31635:17;31628:47;31692:131;31818:4;31692:131;:::i;:::-;31684:139;;31411:419;;;:::o;31836:751::-;32059:4;32097:3;32086:9;32082:19;32074:27;;32111:71;32179:1;32168:9;32164:17;32155:6;32111:71;:::i;:::-;32192:72;32260:2;32249:9;32245:18;32236:6;32192:72;:::i;:::-;32274;32342:2;32331:9;32327:18;32318:6;32274:72;:::i;:::-;32356;32424:2;32413:9;32409:18;32400:6;32356:72;:::i;:::-;32476:9;32470:4;32466:20;32460:3;32449:9;32445:19;32438:49;32504:76;32575:4;32566:6;32504:76;:::i;:::-;32496:84;;31836:751;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1904000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8173,
									"end": 8259,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8173,
									"end": 8259,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8246,
									"end": 8252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8243,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8173,
									"end": 8259,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8173,
									"end": 8259,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2805,
									"end": 2811,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2854,
									"end": 2856,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2842,
									"end": 2851,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 2840,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2829,
									"end": 2852,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2825,
									"end": 2857,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2860,
									"end": 2939,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2822,
									"end": 2941,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3001,
									"end": 3002,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2990,
									"end": 2999,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2986,
									"end": 3003,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2980,
									"end": 3004,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3031,
									"end": 3049,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3023,
									"end": 3029,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3020,
									"end": 3050,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 3053,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 3017,
									"end": 3134,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3224,
									"end": 3231,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3215,
									"end": 3221,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3204,
									"end": 3213,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3200,
									"end": 3222,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 3158,
									"end": 3232,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3148,
									"end": 3232,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3148,
									"end": 3232,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2951,
									"end": 3242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 3249,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 3255,
									"end": 3435,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 3255,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3303,
									"end": 3380,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3300,
									"end": 3301,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3293,
									"end": 3381,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3400,
									"end": 3404,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3397,
									"end": 3398,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3390,
									"end": 3405,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3424,
									"end": 3428,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3421,
									"end": 3422,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3414,
									"end": 3429,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3485,
									"end": 3491,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3516,
									"end": 3520,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3512,
									"end": 3524,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3502,
									"end": 3524,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3502,
									"end": 3524,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3569,
									"end": 3570,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3563,
									"end": 3567,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3559,
									"end": 3571,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3590,
									"end": 3608,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3646,
									"end": 3650,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 3638,
									"end": 3644,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3634,
									"end": 3651,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3624,
									"end": 3651,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3624,
									"end": 3651,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3580,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3708,
									"end": 3710,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3700,
									"end": 3706,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3697,
									"end": 3711,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3677,
									"end": 3695,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3674,
									"end": 3712,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3727,
									"end": 3745,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3671,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3492,
									"end": 3761,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 3761,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0fd961d00794ebaea7b5cf0293d10fb15ab17eb1e224097112bda69ebaa7f1b64736f6c634300080a0033",
									".code": [
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2393,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1522,
											"end": 1533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4298,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4314,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4331,
											"end": 4335,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4337,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4337,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4314,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4314,
											"end": 4350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4350,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4314,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4466,
											"end": 4469,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4484,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2720,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2789,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2944,
											"end": 2959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2959,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3009,
											"end": 3017,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3025,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3057,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3272,
											"end": 3280,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3464,
											"end": 3468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3806,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3802,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3845,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3845,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3822,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3959,
											"end": 3963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 3967,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3979,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3941,
											"end": 3986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3986,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3941,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6469,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6546,
											"end": 6547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6532,
											"end": 6534,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6601,
											"end": 6617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6620,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6620,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6620,
											"end": 6632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6620,
											"end": 6632,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6620,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6601,
											"end": 6632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6601,
											"end": 6632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6643,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6664,
											"end": 6672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6680,
											"end": 6682,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6684,
											"end": 6687,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6689,
											"end": 6696,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6698,
											"end": 6702,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6643,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6643,
											"end": 6703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6643,
											"end": 6703,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6643,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6719,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6738,
											"end": 6748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 6735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6734,
											"end": 6748,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6785,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 6816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6826,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6827,
											"end": 6828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 6829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 6829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6876,
											"end": 6878,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6884,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6928,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6928,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7029,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7035,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7059,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7108,
											"end": 7114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7097,
											"end": 7099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7100,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7103,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 7125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 7125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6755,
											"end": 7125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7168,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7154,
											"end": 7162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7174,
											"end": 7177,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7179,
											"end": 7186,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7218,
											"end": 7226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7232,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7236,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7238,
											"end": 7241,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7243,
											"end": 7250,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7252,
											"end": 7256,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7198,
											"end": 7257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7198,
											"end": 7257,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7198,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7304,
											"end": 7312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7318,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7336,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7338,
											"end": 7342,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7268,
											"end": 7343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7268,
											"end": 7343,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7268,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 7350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13164,
											"end": 13172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13144,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13145,
											"end": 13150,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13152,
											"end": 13160,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13209,
											"end": 13217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13219,
											"end": 13227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5125,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5211,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5211,
											"end": 5223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5211,
											"end": 5223,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5211,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5274,
											"end": 5276,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5256,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5332,
											"end": 5338,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5287,
											"end": 5339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5371,
											"end": 5379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5381,
											"end": 5385,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5387,
											"end": 5389,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5391,
											"end": 5394,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5396,
											"end": 5403,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5350,
											"end": 5410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5350,
											"end": 5410,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5350,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5455,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5495,
											"end": 5501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5624,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5592,
											"end": 5594,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5600,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5671,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5654,
											"end": 5656,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5657,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5660,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5720,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5716,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5702,
											"end": 5710,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5722,
											"end": 5724,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5726,
											"end": 5732,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5764,
											"end": 5772,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5774,
											"end": 5778,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5784,
											"end": 5787,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5796,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5744,
											"end": 5803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5744,
											"end": 5803,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5744,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5814,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5855,
											"end": 5859,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5867,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5877,
											"end": 5881,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5814,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5814,
											"end": 5882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5814,
											"end": 5882,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5814,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14171,
											"end": 14385,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14171,
											"end": 14385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14171,
											"end": 14385,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15318,
											"end": 15531,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 15318,
											"end": 15531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15318,
											"end": 15531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15318,
											"end": 15531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15318,
											"end": 15531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15318,
											"end": 15531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15318,
											"end": 15531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15318,
											"end": 15531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15318,
											"end": 15531,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16500,
											"end": 16502,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16500,
											"end": 16513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 16500,
											"end": 16515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16500,
											"end": 16515,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 16500,
											"end": 16515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 17054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16496,
											"end": 17054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16554,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16579,
											"end": 16587,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16589,
											"end": 16593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16595,
											"end": 16598,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16600,
											"end": 16607,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16609,
											"end": 16613,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16920,
											"end": 16926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16705,
											"end": 16753,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 16705,
											"end": 16753,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16705,
											"end": 16753,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 16701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 16689,
											"end": 16846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16689,
											"end": 16846,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 16689,
											"end": 16846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16615,
											"end": 16860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 17054,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 16496,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17132,
											"end": 17148,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17160,
											"end": 17182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17199,
											"end": 17200,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17160,
											"end": 17201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17217,
											"end": 17218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17211,
											"end": 17229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17247,
											"end": 17252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15744,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 15744,
											"end": 15746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15744,
											"end": 15757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15744,
											"end": 15757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15744,
											"end": 15757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 15744,
											"end": 15759,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15744,
											"end": 15759,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 15744,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 16256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 16256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 15740,
											"end": 16256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15796,
											"end": 15798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15818,
											"end": 15826,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15828,
											"end": 15832,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15834,
											"end": 15836,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15844,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15846,
											"end": 15850,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16122,
											"end": 16128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 15955,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 15912,
											"end": 15955,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15912,
											"end": 15955,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 15908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15896,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 15896,
											"end": 16048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15896,
											"end": 16048,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 15896,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15852,
											"end": 16062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 16256,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 15740,
											"end": 16256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3920,
											"end": 3926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3914,
											"end": 3927,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4000,
											"end": 4003,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3996,
											"end": 4007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3977,
											"end": 3988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3970,
											"end": 4009,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 3945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 3906,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4106,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4099,
											"end": 4115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4092,
											"end": 4119,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4028,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 4135,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4229,
											"end": 4236,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4224,
											"end": 4226,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4217,
											"end": 4222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4213,
											"end": 4227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4209,
											"end": 4237,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4199,
											"end": 4237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4141,
											"end": 4243,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4398,
											"end": 4403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 4365,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4484,
											"end": 4490,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4482,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 4420,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4491,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4545,
											"end": 4551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4526,
											"end": 4531,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4522,
											"end": 4538,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4500,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 4599,
											"end": 4605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 4577,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4572,
											"end": 4575,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4249,
											"end": 4613,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4732,
											"end": 4736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4772,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4755,
											"end": 4773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4809,
											"end": 4829,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4807,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 4830,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4920,
											"end": 4924,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 4847,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4932,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4938,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5049,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5241,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5061,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5109,
											"end": 5186,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5106,
											"end": 5107,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5210,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 5203,
											"end": 5204,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5196,
											"end": 5211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5234,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5235,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5352,
											"end": 5356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 5330,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5445,
											"end": 5467,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 5422,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5409,
											"end": 5443,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5468,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5403,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5511,
											"end": 5521,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5507,
											"end": 5509,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5500,
											"end": 5522,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5290,
											"end": 5528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5247,
											"end": 5528,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 5595,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5585,
											"end": 5615,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5585,
											"end": 5615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 5652,
											"end": 5656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5650,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 5624,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5663,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5854,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5828,
											"end": 5834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5825,
											"end": 5855,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5822,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5896,
											"end": 5913,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 5913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5980,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5986,
											"end": 6103,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5986,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6095,
											"end": 6096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6085,
											"end": 6097,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6222,
											"end": 6227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6320,
											"end": 6326,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6263,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 6247,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6375,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6384,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6404,
											"end": 6409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6416,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6393,
											"end": 6416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6469,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6440,
											"end": 6470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6485,
											"end": 6491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6482,
											"end": 6497,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 6512,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 6479,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6633,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6650,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6636,
											"end": 6651,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6719,
											"end": 6722,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 6781,
											"end": 6784,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6769,
											"end": 6779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 6748,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6743,
											"end": 6746,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6736,
											"end": 6786,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6819,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6813,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6806,
											"end": 6820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6820,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6665,
											"end": 6668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6661,
											"end": 6675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 6610,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6228,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6228,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6836,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6979,
											"end": 6982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6960,
											"end": 6977,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6956,
											"end": 6983,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 6987,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6946,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7091,
											"end": 7111,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7204,
											"end": 7208,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7192,
											"end": 7209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 7129,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7223,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 7229,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7235,
											"end": 7352,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7235,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7342,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7334,
											"end": 7346,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7419,
											"end": 7423,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7527,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7501,
											"end": 7507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7528,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7495,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7591,
											"end": 7597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7569,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7598,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7647,
											"end": 7651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7643,
											"end": 7658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7358,
											"end": 7665,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7755,
											"end": 7761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7750,
											"end": 7753,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7745,
											"end": 7748,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7732,
											"end": 7762,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 7817,
											"end": 7818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7814,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 7806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7792,
											"end": 7819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7825,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 7990,
											"end": 7996,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 7949,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7933,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7924,
											"end": 7998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7924,
											"end": 7998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8021,
											"end": 8027,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8014,
											"end": 8019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8059,
											"end": 8063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8052,
											"end": 8057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8048,
											"end": 8064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8100,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8088,
											"end": 8094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8083,
											"end": 8086,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8079,
											"end": 8095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8076,
											"end": 8101,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 8073,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 8228,
											"end": 8234,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8218,
											"end": 8221,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 8194,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7914,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 8241,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8315,
											"end": 8320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8364,
											"end": 8367,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8349,
											"end": 8355,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8368,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 8372,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 8331,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8496,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8573,
											"end": 8577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8565,
											"end": 8571,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8561,
											"end": 8578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 8514,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8321,
											"end": 8598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8598,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8758,
											"end": 8764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8774,
											"end": 8780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8788,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8842,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8827,
											"end": 8836,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8818,
											"end": 8825,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8837,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8810,
											"end": 8843,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 8846,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 8807,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 9036,
											"end": 9043,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9027,
											"end": 9033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9016,
											"end": 9025,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8991,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8981,
											"end": 9044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 9054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9161,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9153,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9140,
											"end": 9162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 9119,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9249,
											"end": 9251,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9253,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9272,
											"end": 9278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9269,
											"end": 9299,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 9302,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9266,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 9477,
											"end": 9484,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9453,
											"end": 9475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 9407,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9485,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9397,
											"end": 9485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9562,
											"end": 9564,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9551,
											"end": 9560,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9534,
											"end": 9566,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9611,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9585,
											"end": 9591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9582,
											"end": 9612,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9615,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9579,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 9790,
											"end": 9797,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9787,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 9766,
											"end": 9788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 9720,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9798,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9808,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9875,
											"end": 9878,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 9864,
											"end": 9873,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9860,
											"end": 9879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9847,
											"end": 9880,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9907,
											"end": 9925,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9899,
											"end": 9905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9896,
											"end": 9926,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 9929,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 9893,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 10088,
											"end": 10095,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10068,
											"end": 10077,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 10064,
											"end": 10086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 10034,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9818,
											"end": 10106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 10113,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10196,
											"end": 10200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10304,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10284,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 10308,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 10272,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10346,
											"end": 10363,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10338,
											"end": 10363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10418,
											"end": 10422,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10412,
											"end": 10416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10408,
											"end": 10423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10400,
											"end": 10423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10119,
											"end": 10430,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 10647,
											"end": 10653,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 10590,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 10574,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10565,
											"end": 10655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10675,
											"end": 10680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10697,
											"end": 10702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10742,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10731,
											"end": 10736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10727,
											"end": 10743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10720,
											"end": 10743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10720,
											"end": 10743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10791,
											"end": 10795,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10796,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10771,
											"end": 10777,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10767,
											"end": 10797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10820,
											"end": 10823,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10812,
											"end": 10818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10809,
											"end": 10824,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10839,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 10806,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10954,
											"end": 10960,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10971,
											"end": 10977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10966,
											"end": 10969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10978,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 11108,
											"end": 11111,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 11096,
											"end": 11106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 11075,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11073,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11063,
											"end": 11113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11142,
											"end": 11146,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11137,
											"end": 11140,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11133,
											"end": 11147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11147,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10997,
											"end": 11001,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10988,
											"end": 11002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 11002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 10937,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10941,
											"end": 10962,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 11163,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11257,
											"end": 11262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 11309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11299,
											"end": 11303,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11291,
											"end": 11297,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11287,
											"end": 11304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11283,
											"end": 11310,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 11314,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 11273,
											"end": 11395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11431,
											"end": 11437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11418,
											"end": 11438,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 11546,
											"end": 11549,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11538,
											"end": 11544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11531,
											"end": 11535,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11529,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11519,
											"end": 11536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 11456,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11263,
											"end": 11556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11186,
											"end": 11556,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11680,
											"end": 11686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11694,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11737,
											"end": 11739,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11725,
											"end": 11734,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11712,
											"end": 11735,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11708,
											"end": 11740,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 11743,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 11705,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11891,
											"end": 11892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11880,
											"end": 11889,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11876,
											"end": 11893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11863,
											"end": 11894,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11913,
											"end": 11919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11910,
											"end": 11940,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 11943,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 11907,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 12118,
											"end": 12125,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12098,
											"end": 12107,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12094,
											"end": 12116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 12048,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12126,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11834,
											"end": 12136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12203,
											"end": 12205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12192,
											"end": 12201,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12188,
											"end": 12206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12175,
											"end": 12207,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12226,
											"end": 12232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12223,
											"end": 12253,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 12256,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 12220,
											"end": 12337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 12431,
											"end": 12438,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12422,
											"end": 12428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12411,
											"end": 12420,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12407,
											"end": 12429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 12361,
											"end": 12439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12146,
											"end": 12449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 12456,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12563,
											"end": 12568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12557,
											"end": 12569,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12547,
											"end": 12569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12547,
											"end": 12569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12462,
											"end": 12576,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12681,
											"end": 12692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12715,
											"end": 12721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12710,
											"end": 12713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12703,
											"end": 12722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12755,
											"end": 12759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12753,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12746,
											"end": 12760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12582,
											"end": 12766,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 12865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12854,
											"end": 12865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12892,
											"end": 12896,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12887,
											"end": 12890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12875,
											"end": 12897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12875,
											"end": 12897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12904,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 13005,
											"end": 13010,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 12987,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12982,
											"end": 12985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12975,
											"end": 13012,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12910,
											"end": 13018,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13093,
											"end": 13103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 13156,
											"end": 13159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13148,
											"end": 13154,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 13114,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13192,
											"end": 13196,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13187,
											"end": 13190,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13183,
											"end": 13197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13169,
											"end": 13197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13169,
											"end": 13197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13024,
											"end": 13203,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13279,
											"end": 13283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13311,
											"end": 13315,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13306,
											"end": 13309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13302,
											"end": 13316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13294,
											"end": 13316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13322,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 13554,
											"end": 13559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 13506,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 13655,
											"end": 13661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13653,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 13576,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13569,
											"end": 13662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13736,
											"end": 13741,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13686,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13765,
											"end": 13772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13796,
											"end": 13797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13806,
											"end": 13812,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13803,
											"end": 13804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13800,
											"end": 13813,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13882,
											"end": 13888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13876,
											"end": 13889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 13968,
											"end": 13971,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13953,
											"end": 13966,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 13909,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 13972,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 13972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 14048,
											"end": 14054,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 13995,
											"end": 14055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 14055,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 14055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13841,
											"end": 14065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13828,
											"end": 13829,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13825,
											"end": 13826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13821,
											"end": 13830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 13781,
											"end": 14065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13785,
											"end": 13799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14081,
											"end": 14084,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14074,
											"end": 14084,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14074,
											"end": 14084,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13482,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13358,
											"end": 14090,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14239,
											"end": 14243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14277,
											"end": 14279,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14266,
											"end": 14275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14262,
											"end": 14280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14254,
											"end": 14280,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14254,
											"end": 14280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14326,
											"end": 14335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14320,
											"end": 14324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14316,
											"end": 14336,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14312,
											"end": 14313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14301,
											"end": 14310,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14297,
											"end": 14314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14290,
											"end": 14337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 14457,
											"end": 14461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14448,
											"end": 14454,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 14354,
											"end": 14462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14096,
											"end": 14469,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 14560,
											"end": 14565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 14545,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14538,
											"end": 14543,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14535,
											"end": 14567,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14581,
											"end": 14582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14579,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14571,
											"end": 14583,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 14525,
											"end": 14585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14475,
											"end": 14591,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14640,
											"end": 14645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14678,
											"end": 14684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14665,
											"end": 14685,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 14656,
											"end": 14685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14656,
											"end": 14685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 14718,
											"end": 14723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 14694,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14730,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14801,
											"end": 14807,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14815,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14858,
											"end": 14860,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14846,
											"end": 14855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14837,
											"end": 14844,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14833,
											"end": 14856,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14829,
											"end": 14861,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 14826,
											"end": 14945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14984,
											"end": 14985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 15054,
											"end": 15061,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15045,
											"end": 15051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15034,
											"end": 15043,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15030,
											"end": 15052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 15009,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14999,
											"end": 15062,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14999,
											"end": 15062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14955,
											"end": 15072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15111,
											"end": 15113,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 15179,
											"end": 15186,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15170,
											"end": 15176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15159,
											"end": 15168,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15155,
											"end": 15177,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 15137,
											"end": 15187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15127,
											"end": 15187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15127,
											"end": 15187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14736,
											"end": 15204,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15278,
											"end": 15284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15286,
											"end": 15292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15335,
											"end": 15337,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15323,
											"end": 15332,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15314,
											"end": 15321,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15310,
											"end": 15333,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15306,
											"end": 15338,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 15341,
											"end": 15420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 15303,
											"end": 15422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15461,
											"end": 15462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 15531,
											"end": 15538,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15522,
											"end": 15528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15511,
											"end": 15520,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15507,
											"end": 15529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 15486,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15476,
											"end": 15539,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15476,
											"end": 15539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15432,
											"end": 15549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15588,
											"end": 15590,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 15659,
											"end": 15666,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 15650,
											"end": 15656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15639,
											"end": 15648,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15635,
											"end": 15657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 15614,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15604,
											"end": 15667,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15604,
											"end": 15667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15559,
											"end": 15677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15210,
											"end": 15684,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15794,
											"end": 15800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15802,
											"end": 15808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15810,
											"end": 15816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15818,
											"end": 15824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15826,
											"end": 15832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15875,
											"end": 15878,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 15863,
											"end": 15872,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15854,
											"end": 15861,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 15850,
											"end": 15873,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15846,
											"end": 15879,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 15882,
											"end": 15961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 15843,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16002,
											"end": 16003,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 16072,
											"end": 16079,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16063,
											"end": 16069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16052,
											"end": 16061,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16048,
											"end": 16070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 16027,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 16017,
											"end": 16080,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 16090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16129,
											"end": 16131,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 16200,
											"end": 16207,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16191,
											"end": 16197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16176,
											"end": 16198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 16155,
											"end": 16208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 16145,
											"end": 16208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16100,
											"end": 16218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16257,
											"end": 16259,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 16328,
											"end": 16335,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16319,
											"end": 16325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16308,
											"end": 16317,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16304,
											"end": 16326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 16283,
											"end": 16336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16273,
											"end": 16336,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 16273,
											"end": 16336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16228,
											"end": 16346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16385,
											"end": 16387,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 16456,
											"end": 16463,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16447,
											"end": 16453,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16436,
											"end": 16445,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16432,
											"end": 16454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 16411,
											"end": 16464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16401,
											"end": 16464,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16401,
											"end": 16464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16356,
											"end": 16474,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16541,
											"end": 16544,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 16530,
											"end": 16539,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16526,
											"end": 16545,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16513,
											"end": 16546,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 16573,
											"end": 16591,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16565,
											"end": 16571,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16562,
											"end": 16592,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 16595,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 16559,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 16754,
											"end": 16761,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 16745,
											"end": 16751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16734,
											"end": 16743,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 16730,
											"end": 16752,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 16700,
											"end": 16762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 16762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16690,
											"end": 16762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16484,
											"end": 16772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15690,
											"end": 16779,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 16785,
											"end": 17014,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 16785,
											"end": 17014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16925,
											"end": 16959,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 16921,
											"end": 16922,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16919,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16909,
											"end": 16923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16902,
											"end": 16960,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16994,
											"end": 17006,
											"name": "PUSH",
											"source": 9,
											"value": "616C6964206F776E657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 16989,
											"end": 16991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16981,
											"end": 16987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 16992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16970,
											"end": 17007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16785,
											"end": 17014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16785,
											"end": 17014,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17162,
											"end": 17165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17183,
											"end": 17250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17247,
											"end": 17249,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 17242,
											"end": 17245,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17183,
											"end": 17250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 17183,
											"end": 17250,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17183,
											"end": 17250,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17183,
											"end": 17250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17176,
											"end": 17250,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17176,
											"end": 17250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17259,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 17348,
											"end": 17351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17259,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 17259,
											"end": 17352,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17259,
											"end": 17352,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 17259,
											"end": 17352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17377,
											"end": 17379,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17372,
											"end": 17375,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17368,
											"end": 17380,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17361,
											"end": 17380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17361,
											"end": 17380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17020,
											"end": 17386,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17558,
											"end": 17562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17596,
											"end": 17598,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17585,
											"end": 17594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17581,
											"end": 17599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17573,
											"end": 17599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17573,
											"end": 17599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17645,
											"end": 17654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17639,
											"end": 17643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17635,
											"end": 17655,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17631,
											"end": 17632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17620,
											"end": 17629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17616,
											"end": 17633,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17609,
											"end": 17656,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17673,
											"end": 17804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 17799,
											"end": 17803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17673,
											"end": 17804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 17673,
											"end": 17804,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 17673,
											"end": 17804,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 17673,
											"end": 17804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17665,
											"end": 17804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17665,
											"end": 17804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17392,
											"end": 17811,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17817,
											"end": 17997,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 17817,
											"end": 17997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17865,
											"end": 17942,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17862,
											"end": 17863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17855,
											"end": 17943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17962,
											"end": 17966,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 17959,
											"end": 17960,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17952,
											"end": 17967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17986,
											"end": 17990,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17983,
											"end": 17984,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17976,
											"end": 17991,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18047,
											"end": 18053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18084,
											"end": 18085,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 18078,
											"end": 18082,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18074,
											"end": 18086,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 18064,
											"end": 18086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18064,
											"end": 18086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18131,
											"end": 18132,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 18125,
											"end": 18129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18121,
											"end": 18133,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18152,
											"end": 18170,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 18142,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 18142,
											"end": 18223,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18208,
											"end": 18212,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 18200,
											"end": 18206,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18196,
											"end": 18213,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 18186,
											"end": 18213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18186,
											"end": 18213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18142,
											"end": 18223,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 18142,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18270,
											"end": 18272,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18262,
											"end": 18268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18259,
											"end": 18273,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 18239,
											"end": 18257,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18236,
											"end": 18274,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 18233,
											"end": 18317,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 18233,
											"end": 18317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 18233,
											"end": 18317,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 18289,
											"end": 18307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18233,
											"end": 18317,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 18233,
											"end": 18317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18054,
											"end": 18323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18003,
											"end": 18323,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18329,
											"end": 18563,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 18329,
											"end": 18563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18469,
											"end": 18503,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 18465,
											"end": 18466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18457,
											"end": 18463,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18453,
											"end": 18467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18446,
											"end": 18504,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18538,
											"end": 18555,
											"name": "PUSH",
											"source": 9,
											"value": "6572206E6F7220617070726F7665640000000000000000000000000000000000"
										},
										{
											"begin": 18533,
											"end": 18535,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18525,
											"end": 18531,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18521,
											"end": 18536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18514,
											"end": 18556,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18329,
											"end": 18563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18329,
											"end": 18563,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18569,
											"end": 18935,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 18569,
											"end": 18935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18711,
											"end": 18714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18732,
											"end": 18799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 18796,
											"end": 18798,
											"name": "PUSH",
											"source": 9,
											"value": "2F"
										},
										{
											"begin": 18791,
											"end": 18794,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18732,
											"end": 18799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 18732,
											"end": 18799,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18732,
											"end": 18799,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 18732,
											"end": 18799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18725,
											"end": 18799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18725,
											"end": 18799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18808,
											"end": 18901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 18897,
											"end": 18900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18808,
											"end": 18901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 18808,
											"end": 18901,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 18808,
											"end": 18901,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 18808,
											"end": 18901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18926,
											"end": 18928,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18921,
											"end": 18924,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18917,
											"end": 18929,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18910,
											"end": 18929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18910,
											"end": 18929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18569,
											"end": 18935,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18569,
											"end": 18935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18569,
											"end": 18935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18569,
											"end": 18935,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 18941,
											"end": 19360,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 18941,
											"end": 19360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19107,
											"end": 19111,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19145,
											"end": 19147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19134,
											"end": 19143,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19130,
											"end": 19148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19122,
											"end": 19148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19122,
											"end": 19148,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19194,
											"end": 19203,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19188,
											"end": 19192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19184,
											"end": 19204,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19180,
											"end": 19181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19169,
											"end": 19178,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19165,
											"end": 19182,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19158,
											"end": 19205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19222,
											"end": 19353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 19348,
											"end": 19352,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19222,
											"end": 19353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 19222,
											"end": 19353,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19222,
											"end": 19353,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 19222,
											"end": 19353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19214,
											"end": 19353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19214,
											"end": 19353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18941,
											"end": 19360,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18941,
											"end": 19360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18941,
											"end": 19360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18941,
											"end": 19360,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19366,
											"end": 19594,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 19366,
											"end": 19594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19506,
											"end": 19540,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 19502,
											"end": 19503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19494,
											"end": 19500,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19490,
											"end": 19504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19483,
											"end": 19541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19575,
											"end": 19586,
											"name": "PUSH",
											"source": 9,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19570,
											"end": 19572,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19562,
											"end": 19568,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19558,
											"end": 19573,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19551,
											"end": 19587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19366,
											"end": 19594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19366,
											"end": 19594,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19600,
											"end": 19966,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 19600,
											"end": 19966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19742,
											"end": 19745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19763,
											"end": 19830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 19827,
											"end": 19829,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 19822,
											"end": 19825,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19763,
											"end": 19830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 19763,
											"end": 19830,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19763,
											"end": 19830,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 19763,
											"end": 19830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19756,
											"end": 19830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19756,
											"end": 19830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19839,
											"end": 19932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 19928,
											"end": 19931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19839,
											"end": 19932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 19839,
											"end": 19932,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 19839,
											"end": 19932,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 19839,
											"end": 19932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19957,
											"end": 19959,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19952,
											"end": 19955,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19948,
											"end": 19960,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19941,
											"end": 19960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19941,
											"end": 19960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19600,
											"end": 19966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19600,
											"end": 19966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19600,
											"end": 19966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19600,
											"end": 19966,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 19972,
											"end": 20391,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 19972,
											"end": 20391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20138,
											"end": 20142,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20176,
											"end": 20178,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20165,
											"end": 20174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20161,
											"end": 20179,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20153,
											"end": 20179,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20153,
											"end": 20179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20225,
											"end": 20234,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20219,
											"end": 20223,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20215,
											"end": 20235,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20211,
											"end": 20212,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20200,
											"end": 20209,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20196,
											"end": 20213,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20189,
											"end": 20236,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20253,
											"end": 20384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 20379,
											"end": 20383,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20253,
											"end": 20384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 20253,
											"end": 20384,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20253,
											"end": 20384,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 20253,
											"end": 20384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20245,
											"end": 20384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20245,
											"end": 20384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19972,
											"end": 20391,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19972,
											"end": 20391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19972,
											"end": 20391,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19972,
											"end": 20391,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 20397,
											"end": 20577,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 20397,
											"end": 20577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20445,
											"end": 20522,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20442,
											"end": 20443,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20435,
											"end": 20523,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20542,
											"end": 20546,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 20539,
											"end": 20540,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20532,
											"end": 20547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20566,
											"end": 20570,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 20563,
											"end": 20564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20556,
											"end": 20571,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20583,
											"end": 20763,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 20583,
											"end": 20763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20631,
											"end": 20708,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20628,
											"end": 20629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20621,
											"end": 20709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20728,
											"end": 20732,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 20725,
											"end": 20726,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 20718,
											"end": 20733,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20752,
											"end": 20756,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 20749,
											"end": 20750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20742,
											"end": 20757,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 20769,
											"end": 21002,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 20769,
											"end": 21002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20808,
											"end": 20811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20831,
											"end": 20855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 20849,
											"end": 20854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20831,
											"end": 20855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 20831,
											"end": 20855,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20831,
											"end": 20855,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 20831,
											"end": 20855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20822,
											"end": 20855,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20822,
											"end": 20855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20877,
											"end": 20943,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20870,
											"end": 20875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20867,
											"end": 20944,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 20864,
											"end": 20967,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 20864,
											"end": 20967,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 20864,
											"end": 20967,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20947,
											"end": 20965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 20947,
											"end": 20965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 20947,
											"end": 20965,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 20947,
											"end": 20965,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 20947,
											"end": 20965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20864,
											"end": 20967,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 20864,
											"end": 20967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20994,
											"end": 20995,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 20987,
											"end": 20992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20983,
											"end": 20996,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 20996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20976,
											"end": 20996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20769,
											"end": 21002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20769,
											"end": 21002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20769,
											"end": 21002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20769,
											"end": 21002,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21008,
											"end": 21235,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 21008,
											"end": 21235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21148,
											"end": 21182,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 21144,
											"end": 21145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21136,
											"end": 21142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21132,
											"end": 21146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21125,
											"end": 21183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21217,
											"end": 21227,
											"name": "PUSH",
											"source": 9,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21212,
											"end": 21214,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21204,
											"end": 21210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21200,
											"end": 21215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21193,
											"end": 21228,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21008,
											"end": 21235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21008,
											"end": 21235,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21241,
											"end": 21607,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 21241,
											"end": 21607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21383,
											"end": 21386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21404,
											"end": 21471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 21468,
											"end": 21470,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 21463,
											"end": 21466,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21404,
											"end": 21471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 21404,
											"end": 21471,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21404,
											"end": 21471,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 21404,
											"end": 21471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21397,
											"end": 21471,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21397,
											"end": 21471,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21480,
											"end": 21573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 21569,
											"end": 21572,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21480,
											"end": 21573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 21480,
											"end": 21573,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21480,
											"end": 21573,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 21480,
											"end": 21573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21598,
											"end": 21600,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21593,
											"end": 21596,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21589,
											"end": 21601,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21582,
											"end": 21601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21582,
											"end": 21601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21241,
											"end": 21607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21241,
											"end": 21607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21241,
											"end": 21607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21241,
											"end": 21607,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 21613,
											"end": 22032,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 21613,
											"end": 22032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21779,
											"end": 21783,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21817,
											"end": 21819,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21806,
											"end": 21815,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21802,
											"end": 21820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21794,
											"end": 21820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21794,
											"end": 21820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 21875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21860,
											"end": 21864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21856,
											"end": 21876,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21852,
											"end": 21853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21841,
											"end": 21850,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21837,
											"end": 21854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21830,
											"end": 21877,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21894,
											"end": 22025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 22020,
											"end": 22024,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21894,
											"end": 22025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 21894,
											"end": 22025,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 21894,
											"end": 22025,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 21894,
											"end": 22025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21886,
											"end": 22025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21886,
											"end": 22025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21613,
											"end": 22032,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21613,
											"end": 22032,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21613,
											"end": 22032,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21613,
											"end": 22032,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22038,
											"end": 22262,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 22038,
											"end": 22262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22178,
											"end": 22212,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 22174,
											"end": 22175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22166,
											"end": 22172,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22162,
											"end": 22176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22155,
											"end": 22213,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22247,
											"end": 22254,
											"name": "PUSH",
											"source": 9,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22242,
											"end": 22244,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22234,
											"end": 22240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22230,
											"end": 22245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22223,
											"end": 22255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22038,
											"end": 22262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22038,
											"end": 22262,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22268,
											"end": 22634,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 22268,
											"end": 22634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22410,
											"end": 22413,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22431,
											"end": 22498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 22495,
											"end": 22497,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 22490,
											"end": 22493,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22431,
											"end": 22498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 22431,
											"end": 22498,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22431,
											"end": 22498,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 22431,
											"end": 22498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22424,
											"end": 22498,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22424,
											"end": 22498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22507,
											"end": 22600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 22596,
											"end": 22599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22507,
											"end": 22600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 22507,
											"end": 22600,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22507,
											"end": 22600,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 22507,
											"end": 22600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22625,
											"end": 22627,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 22620,
											"end": 22623,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22616,
											"end": 22628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22609,
											"end": 22628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22609,
											"end": 22628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22268,
											"end": 22634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22268,
											"end": 22634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22268,
											"end": 22634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22268,
											"end": 22634,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 22640,
											"end": 23059,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 22640,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22806,
											"end": 22810,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22844,
											"end": 22846,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22833,
											"end": 22842,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22829,
											"end": 22847,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22821,
											"end": 22847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22821,
											"end": 22847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22893,
											"end": 22902,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22887,
											"end": 22891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22883,
											"end": 22903,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22879,
											"end": 22880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22868,
											"end": 22877,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22864,
											"end": 22881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22857,
											"end": 22904,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22921,
											"end": 23052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 23047,
											"end": 23051,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22921,
											"end": 23052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 22921,
											"end": 23052,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 22921,
											"end": 23052,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 22921,
											"end": 23052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22913,
											"end": 23052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22913,
											"end": 23052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22640,
											"end": 23059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22640,
											"end": 23059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22640,
											"end": 23059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22640,
											"end": 23059,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23065,
											"end": 23294,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 23065,
											"end": 23294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23205,
											"end": 23239,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 23201,
											"end": 23202,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23193,
											"end": 23199,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23189,
											"end": 23203,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23182,
											"end": 23240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23274,
											"end": 23286,
											"name": "PUSH",
											"source": 9,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 23269,
											"end": 23271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23261,
											"end": 23267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23257,
											"end": 23272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23250,
											"end": 23287,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23065,
											"end": 23294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23065,
											"end": 23294,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23300,
											"end": 23666,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 23300,
											"end": 23666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23442,
											"end": 23445,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23463,
											"end": 23530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 23527,
											"end": 23529,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 23522,
											"end": 23525,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23463,
											"end": 23530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 23463,
											"end": 23530,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23463,
											"end": 23530,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 23463,
											"end": 23530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23456,
											"end": 23530,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23456,
											"end": 23530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23539,
											"end": 23632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 23628,
											"end": 23631,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23539,
											"end": 23632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 23539,
											"end": 23632,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23539,
											"end": 23632,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 23539,
											"end": 23632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23657,
											"end": 23659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23652,
											"end": 23655,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23648,
											"end": 23660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23641,
											"end": 23660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23641,
											"end": 23660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23300,
											"end": 23666,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23300,
											"end": 23666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23300,
											"end": 23666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23300,
											"end": 23666,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 23672,
											"end": 24091,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 23672,
											"end": 24091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23838,
											"end": 23842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23876,
											"end": 23878,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23865,
											"end": 23874,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23861,
											"end": 23879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23853,
											"end": 23879,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23853,
											"end": 23879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23925,
											"end": 23934,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23919,
											"end": 23923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23915,
											"end": 23935,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23911,
											"end": 23912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23900,
											"end": 23909,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23896,
											"end": 23913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23889,
											"end": 23936,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23953,
											"end": 24084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 24079,
											"end": 24083,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23953,
											"end": 24084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 23953,
											"end": 24084,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 23953,
											"end": 24084,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 23953,
											"end": 24084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23945,
											"end": 24084,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23945,
											"end": 24084,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23672,
											"end": 24091,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23672,
											"end": 24091,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23672,
											"end": 24091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23672,
											"end": 24091,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24097,
											"end": 24402,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 24097,
											"end": 24402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24137,
											"end": 24140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24156,
											"end": 24176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 24174,
											"end": 24175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24156,
											"end": 24176,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 24156,
											"end": 24176,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24156,
											"end": 24176,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 24156,
											"end": 24176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24151,
											"end": 24176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24151,
											"end": 24176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24190,
											"end": 24210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 24208,
											"end": 24209,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24190,
											"end": 24210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 24190,
											"end": 24210,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24190,
											"end": 24210,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 24190,
											"end": 24210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24185,
											"end": 24210,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24185,
											"end": 24210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24344,
											"end": 24345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24276,
											"end": 24342,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24272,
											"end": 24346,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24269,
											"end": 24270,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24266,
											"end": 24347,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 24263,
											"end": 24370,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 24263,
											"end": 24370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 24263,
											"end": 24370,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24350,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 24350,
											"end": 24368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 24350,
											"end": 24368,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24350,
											"end": 24368,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 24350,
											"end": 24368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24263,
											"end": 24370,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 24263,
											"end": 24370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24394,
											"end": 24395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24391,
											"end": 24392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24387,
											"end": 24396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24380,
											"end": 24396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24380,
											"end": 24396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24097,
											"end": 24402,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24097,
											"end": 24402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24097,
											"end": 24402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24097,
											"end": 24402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24097,
											"end": 24402,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 24408,
											"end": 25042,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 24408,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24629,
											"end": 24633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24667,
											"end": 24669,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 24656,
											"end": 24665,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24652,
											"end": 24670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24644,
											"end": 24670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24644,
											"end": 24670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24716,
											"end": 24725,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24710,
											"end": 24714,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24706,
											"end": 24726,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24702,
											"end": 24703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24691,
											"end": 24700,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24687,
											"end": 24704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24680,
											"end": 24727,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24744,
											"end": 24852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 24847,
											"end": 24851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24838,
											"end": 24844,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 24744,
											"end": 24852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 24744,
											"end": 24852,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24744,
											"end": 24852,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 24744,
											"end": 24852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24736,
											"end": 24852,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24736,
											"end": 24852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24899,
											"end": 24908,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24893,
											"end": 24897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24889,
											"end": 24909,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24884,
											"end": 24886,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24873,
											"end": 24882,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24869,
											"end": 24887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24862,
											"end": 24910,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24927,
											"end": 25035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 25030,
											"end": 25034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25021,
											"end": 25027,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 24927,
											"end": 25035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 24927,
											"end": 25035,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 24927,
											"end": 25035,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 24927,
											"end": 25035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24919,
											"end": 25035,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24919,
											"end": 25035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24408,
											"end": 25042,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 24408,
											"end": 25042,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24408,
											"end": 25042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24408,
											"end": 25042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24408,
											"end": 25042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24408,
											"end": 25042,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25048,
											"end": 25276,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 25048,
											"end": 25276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25188,
											"end": 25222,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 25184,
											"end": 25185,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25176,
											"end": 25182,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25172,
											"end": 25186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25165,
											"end": 25223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25257,
											"end": 25268,
											"name": "PUSH",
											"source": 9,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25252,
											"end": 25254,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25244,
											"end": 25250,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25240,
											"end": 25255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25233,
											"end": 25269,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25048,
											"end": 25276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25048,
											"end": 25276,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25282,
											"end": 25648,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 25282,
											"end": 25648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25424,
											"end": 25427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25445,
											"end": 25512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 25509,
											"end": 25511,
											"name": "PUSH",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 25504,
											"end": 25507,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25445,
											"end": 25512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 25445,
											"end": 25512,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25445,
											"end": 25512,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 25445,
											"end": 25512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25438,
											"end": 25512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25438,
											"end": 25512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25521,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 25610,
											"end": 25613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25521,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 25521,
											"end": 25614,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25521,
											"end": 25614,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 25521,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25639,
											"end": 25641,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 25634,
											"end": 25637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25630,
											"end": 25642,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25623,
											"end": 25642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25623,
											"end": 25642,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25282,
											"end": 25648,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25282,
											"end": 25648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25282,
											"end": 25648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25282,
											"end": 25648,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 25654,
											"end": 26073,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 25654,
											"end": 26073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25820,
											"end": 25824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25858,
											"end": 25860,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25847,
											"end": 25856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25843,
											"end": 25861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25835,
											"end": 25861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25835,
											"end": 25861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25907,
											"end": 25916,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25901,
											"end": 25905,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25897,
											"end": 25917,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25893,
											"end": 25894,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25882,
											"end": 25891,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25878,
											"end": 25895,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25871,
											"end": 25918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25935,
											"end": 26066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 26061,
											"end": 26065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25935,
											"end": 26066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 25935,
											"end": 26066,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 25935,
											"end": 26066,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 25935,
											"end": 26066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25927,
											"end": 26066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25927,
											"end": 26066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25654,
											"end": 26073,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25654,
											"end": 26073,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25654,
											"end": 26073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25654,
											"end": 26073,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26079,
											"end": 26411,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 26079,
											"end": 26411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26200,
											"end": 26204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26238,
											"end": 26240,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 26227,
											"end": 26236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26223,
											"end": 26241,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26215,
											"end": 26241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26215,
											"end": 26241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26251,
											"end": 26322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 26319,
											"end": 26320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26308,
											"end": 26317,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26304,
											"end": 26321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26295,
											"end": 26301,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 26251,
											"end": 26322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 26251,
											"end": 26322,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26251,
											"end": 26322,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 26251,
											"end": 26322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26332,
											"end": 26404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 26400,
											"end": 26402,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26389,
											"end": 26398,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26385,
											"end": 26403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26376,
											"end": 26382,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 26332,
											"end": 26404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 26332,
											"end": 26404,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26332,
											"end": 26404,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 26332,
											"end": 26404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26079,
											"end": 26411,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 26079,
											"end": 26411,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 26079,
											"end": 26411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26079,
											"end": 26411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26079,
											"end": 26411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26079,
											"end": 26411,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26417,
											"end": 26535,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 26417,
											"end": 26535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26504,
											"end": 26528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 26522,
											"end": 26527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26504,
											"end": 26528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 26504,
											"end": 26528,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26504,
											"end": 26528,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 26504,
											"end": 26528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26499,
											"end": 26502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26492,
											"end": 26529,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26417,
											"end": 26535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26417,
											"end": 26535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26417,
											"end": 26535,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26541,
											"end": 26639,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 26541,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26592,
											"end": 26598,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26626,
											"end": 26631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26620,
											"end": 26632,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 26610,
											"end": 26632,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26610,
											"end": 26632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26541,
											"end": 26639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26541,
											"end": 26639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26541,
											"end": 26639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26541,
											"end": 26639,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26645,
											"end": 26813,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 26645,
											"end": 26813,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26728,
											"end": 26739,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26762,
											"end": 26768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26757,
											"end": 26760,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26750,
											"end": 26769,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26802,
											"end": 26806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26797,
											"end": 26800,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26793,
											"end": 26807,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26778,
											"end": 26807,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26778,
											"end": 26807,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26645,
											"end": 26813,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 26645,
											"end": 26813,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26645,
											"end": 26813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26645,
											"end": 26813,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26645,
											"end": 26813,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 26819,
											"end": 27179,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 26819,
											"end": 27179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26905,
											"end": 26908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26933,
											"end": 26971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 26965,
											"end": 26970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26933,
											"end": 26971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 26933,
											"end": 26971,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26933,
											"end": 26971,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 26933,
											"end": 26971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26987,
											"end": 27057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 27050,
											"end": 27056,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27045,
											"end": 27048,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 26987,
											"end": 27057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 26987,
											"end": 27057,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 26987,
											"end": 27057,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 26987,
											"end": 27057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26980,
											"end": 27057,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 26980,
											"end": 27057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27066,
											"end": 27118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 27111,
											"end": 27117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27106,
											"end": 27109,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 27099,
											"end": 27103,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27092,
											"end": 27097,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 27088,
											"end": 27104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27066,
											"end": 27118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 27066,
											"end": 27118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27066,
											"end": 27118,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 27066,
											"end": 27118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27143,
											"end": 27172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 27165,
											"end": 27171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27143,
											"end": 27172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 27143,
											"end": 27172,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27143,
											"end": 27172,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 27143,
											"end": 27172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27138,
											"end": 27141,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 27134,
											"end": 27173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27127,
											"end": 27173,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27127,
											"end": 27173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26909,
											"end": 27179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26819,
											"end": 27179,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 26819,
											"end": 27179,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26819,
											"end": 27179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26819,
											"end": 27179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26819,
											"end": 27179,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27508,
											"end": 27512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27546,
											"end": 27549,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 27535,
											"end": 27544,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27531,
											"end": 27550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27523,
											"end": 27550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27523,
											"end": 27550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27560,
											"end": 27631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 27628,
											"end": 27629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27617,
											"end": 27626,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27613,
											"end": 27630,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27604,
											"end": 27610,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 27560,
											"end": 27631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 27560,
											"end": 27631,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27560,
											"end": 27631,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 27560,
											"end": 27631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27641,
											"end": 27713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 27709,
											"end": 27711,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 27698,
											"end": 27707,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27694,
											"end": 27712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27685,
											"end": 27691,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 27641,
											"end": 27713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 27641,
											"end": 27713,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27641,
											"end": 27713,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 27641,
											"end": 27713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27760,
											"end": 27769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27754,
											"end": 27758,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27750,
											"end": 27770,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 27745,
											"end": 27747,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 27734,
											"end": 27743,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27730,
											"end": 27748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27723,
											"end": 27771,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27788,
											"end": 27896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 27891,
											"end": 27895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27882,
											"end": 27888,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 27788,
											"end": 27896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 27788,
											"end": 27896,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27788,
											"end": 27896,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 27788,
											"end": 27896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27780,
											"end": 27896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27780,
											"end": 27896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27943,
											"end": 27952,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27937,
											"end": 27941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27933,
											"end": 27953,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 27928,
											"end": 27930,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 27917,
											"end": 27926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27913,
											"end": 27931,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27906,
											"end": 27954,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27971,
											"end": 28079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 28074,
											"end": 28078,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28065,
											"end": 28071,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 27971,
											"end": 28079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 27971,
											"end": 28079,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 27971,
											"end": 28079,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 27971,
											"end": 28079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27963,
											"end": 28079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27963,
											"end": 28079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28127,
											"end": 28136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28121,
											"end": 28125,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28117,
											"end": 28137,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 28111,
											"end": 28114,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 28100,
											"end": 28109,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28096,
											"end": 28115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28089,
											"end": 28138,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28155,
											"end": 28231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 28226,
											"end": 28230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28217,
											"end": 28223,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 28155,
											"end": 28231,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 28155,
											"end": 28231,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28155,
											"end": 28231,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 28155,
											"end": 28231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28147,
											"end": 28231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28147,
											"end": 28231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27185,
											"end": 28238,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28244,
											"end": 28385,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 28244,
											"end": 28385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28300,
											"end": 28305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28331,
											"end": 28337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28325,
											"end": 28338,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 28316,
											"end": 28338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28316,
											"end": 28338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28347,
											"end": 28379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 28373,
											"end": 28378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28347,
											"end": 28379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 28347,
											"end": 28379,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28347,
											"end": 28379,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 28347,
											"end": 28379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28244,
											"end": 28385,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 28244,
											"end": 28385,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28244,
											"end": 28385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28244,
											"end": 28385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28244,
											"end": 28385,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28391,
											"end": 28740,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 28391,
											"end": 28740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28460,
											"end": 28466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28509,
											"end": 28511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28497,
											"end": 28506,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28488,
											"end": 28495,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 28484,
											"end": 28507,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 28480,
											"end": 28512,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 28477,
											"end": 28596,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 28477,
											"end": 28596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 28477,
											"end": 28596,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 28515,
											"end": 28594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 28515,
											"end": 28594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 28515,
											"end": 28594,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28515,
											"end": 28594,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 28515,
											"end": 28594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28477,
											"end": 28596,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 28477,
											"end": 28596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28635,
											"end": 28636,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28660,
											"end": 28723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 28715,
											"end": 28722,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 28706,
											"end": 28712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28695,
											"end": 28704,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 28691,
											"end": 28713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28660,
											"end": 28723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 28660,
											"end": 28723,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28660,
											"end": 28723,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 28660,
											"end": 28723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28650,
											"end": 28723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28650,
											"end": 28723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28606,
											"end": 28733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28391,
											"end": 28740,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 28391,
											"end": 28740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28391,
											"end": 28740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28391,
											"end": 28740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28391,
											"end": 28740,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28746,
											"end": 28852,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 28746,
											"end": 28852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28790,
											"end": 28798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28839,
											"end": 28844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28834,
											"end": 28837,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 28830,
											"end": 28845,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 28809,
											"end": 28845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28809,
											"end": 28845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28746,
											"end": 28852,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28746,
											"end": 28852,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28746,
											"end": 28852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28746,
											"end": 28852,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 28858,
											"end": 29041,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 28858,
											"end": 29041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28893,
											"end": 28896,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28931,
											"end": 28932,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 28913,
											"end": 28929,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 28910,
											"end": 28933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 28907,
											"end": 29035,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 28907,
											"end": 29035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 28907,
											"end": 29035,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 28969,
											"end": 28970,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 28966,
											"end": 28967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28963,
											"end": 28964,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 28948,
											"end": 28971,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 28991,
											"end": 29025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 29022,
											"end": 29023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29016,
											"end": 29024,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 28991,
											"end": 29025,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 28991,
											"end": 29025,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 28991,
											"end": 29025,
											"name": "tag",
											"source": 9,
											"value": "565"
										},
										{
											"begin": 28991,
											"end": 29025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28984,
											"end": 29025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28984,
											"end": 29025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28907,
											"end": 29035,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 28907,
											"end": 29035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28858,
											"end": 29041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28858,
											"end": 29041,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29047,
											"end": 29758,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 29047,
											"end": 29758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29086,
											"end": 29089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29124,
											"end": 29128,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 29106,
											"end": 29122,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 29103,
											"end": 29129,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 29100,
											"end": 29139,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29100,
											"end": 29139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 29100,
											"end": 29139,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 29132,
											"end": 29137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 29132,
											"end": 29137,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29100,
											"end": 29139,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 29100,
											"end": 29139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29161,
											"end": 29181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 29161,
											"end": 29181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 29161,
											"end": 29181,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29161,
											"end": 29181,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 29161,
											"end": 29181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29236,
											"end": 29237,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 29218,
											"end": 29234,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 29214,
											"end": 29238,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 29211,
											"end": 29212,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 29205,
											"end": 29209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29190,
											"end": 29239,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 29269,
											"end": 29273,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29263,
											"end": 29274,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 29368,
											"end": 29384,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 29361,
											"end": 29365,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 29353,
											"end": 29359,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29349,
											"end": 29366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29346,
											"end": 29385,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 29313,
											"end": 29331,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29305,
											"end": 29311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29302,
											"end": 29332,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 29286,
											"end": 29399,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 29283,
											"end": 29429,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29283,
											"end": 29429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 29283,
											"end": 29429,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 29414,
											"end": 29419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29414,
											"end": 29419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29414,
											"end": 29419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 29414,
											"end": 29419,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29283,
											"end": 29429,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 29283,
											"end": 29429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29460,
											"end": 29466,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29454,
											"end": 29458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29450,
											"end": 29467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29496,
											"end": 29499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29490,
											"end": 29500,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 29523,
											"end": 29541,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29515,
											"end": 29521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29512,
											"end": 29542,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 29509,
											"end": 29552,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29509,
											"end": 29552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 29509,
											"end": 29552,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 29545,
											"end": 29550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29545,
											"end": 29550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29545,
											"end": 29550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29545,
											"end": 29550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29545,
											"end": 29550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 29545,
											"end": 29550,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29509,
											"end": 29552,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 29509,
											"end": 29552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29593,
											"end": 29599,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 29586,
											"end": 29590,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29581,
											"end": 29584,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 29577,
											"end": 29591,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29573,
											"end": 29600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29652,
											"end": 29653,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 29634,
											"end": 29650,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 29630,
											"end": 29654,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 29624,
											"end": 29628,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 29620,
											"end": 29655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29615,
											"end": 29618,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29612,
											"end": 29656,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 29609,
											"end": 29666,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 29609,
											"end": 29666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 29609,
											"end": 29666,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 29659,
											"end": 29664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29659,
											"end": 29664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29659,
											"end": 29664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29659,
											"end": 29664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29659,
											"end": 29664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29659,
											"end": 29664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 29659,
											"end": 29664,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29609,
											"end": 29666,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 29609,
											"end": 29666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29676,
											"end": 29733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 29724,
											"end": 29730,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29718,
											"end": 29722,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29714,
											"end": 29731,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29706,
											"end": 29712,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 29702,
											"end": 29732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29696,
											"end": 29700,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 29676,
											"end": 29733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 29676,
											"end": 29733,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 29676,
											"end": 29733,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 29676,
											"end": 29733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29749,
											"end": 29752,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29742,
											"end": 29752,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 29742,
											"end": 29752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29090,
											"end": 29758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29090,
											"end": 29758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29090,
											"end": 29758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29090,
											"end": 29758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29090,
											"end": 29758,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29047,
											"end": 29758,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 29047,
											"end": 29758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29047,
											"end": 29758,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29047,
											"end": 29758,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 29764,
											"end": 30003,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 29764,
											"end": 30003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29904,
											"end": 29938,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 29900,
											"end": 29901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29892,
											"end": 29898,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29888,
											"end": 29902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29881,
											"end": 29939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29973,
											"end": 29995,
											"name": "PUSH",
											"source": 9,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 29968,
											"end": 29970,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29960,
											"end": 29966,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29956,
											"end": 29971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29949,
											"end": 29996,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29764,
											"end": 30003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29764,
											"end": 30003,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30009,
											"end": 30375,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 30009,
											"end": 30375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30151,
											"end": 30154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30172,
											"end": 30239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 30236,
											"end": 30238,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 30231,
											"end": 30234,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 30172,
											"end": 30239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 30172,
											"end": 30239,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 30172,
											"end": 30239,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 30172,
											"end": 30239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30165,
											"end": 30239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30165,
											"end": 30239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30248,
											"end": 30341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 30337,
											"end": 30340,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30248,
											"end": 30341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 30248,
											"end": 30341,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 30248,
											"end": 30341,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 30248,
											"end": 30341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30366,
											"end": 30368,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 30361,
											"end": 30364,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30357,
											"end": 30369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30350,
											"end": 30369,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30350,
											"end": 30369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30009,
											"end": 30375,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30009,
											"end": 30375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30009,
											"end": 30375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30009,
											"end": 30375,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30381,
											"end": 30800,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 30381,
											"end": 30800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30547,
											"end": 30551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30585,
											"end": 30587,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30574,
											"end": 30583,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30570,
											"end": 30588,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30562,
											"end": 30588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30562,
											"end": 30588,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30634,
											"end": 30643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30628,
											"end": 30632,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30624,
											"end": 30644,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 30620,
											"end": 30621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30609,
											"end": 30618,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 30605,
											"end": 30622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30598,
											"end": 30645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30662,
											"end": 30793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 30788,
											"end": 30792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30662,
											"end": 30793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 30662,
											"end": 30793,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 30662,
											"end": 30793,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 30662,
											"end": 30793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30654,
											"end": 30793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30654,
											"end": 30793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30381,
											"end": 30800,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30381,
											"end": 30800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30381,
											"end": 30800,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30381,
											"end": 30800,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 30806,
											"end": 31033,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 30806,
											"end": 31033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30946,
											"end": 30980,
											"name": "PUSH",
											"source": 9,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 30942,
											"end": 30943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30934,
											"end": 30940,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30930,
											"end": 30944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30923,
											"end": 30981,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31015,
											"end": 31025,
											"name": "PUSH",
											"source": 9,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31010,
											"end": 31012,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31002,
											"end": 31008,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30998,
											"end": 31013,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30991,
											"end": 31026,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30806,
											"end": 31033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30806,
											"end": 31033,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31039,
											"end": 31405,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 31039,
											"end": 31405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31181,
											"end": 31184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31202,
											"end": 31269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 31266,
											"end": 31268,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 31261,
											"end": 31264,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31202,
											"end": 31269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 31202,
											"end": 31269,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31202,
											"end": 31269,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 31202,
											"end": 31269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31195,
											"end": 31269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31195,
											"end": 31269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31278,
											"end": 31371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 31367,
											"end": 31370,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31278,
											"end": 31371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 31278,
											"end": 31371,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31278,
											"end": 31371,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 31278,
											"end": 31371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31396,
											"end": 31398,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 31391,
											"end": 31394,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31387,
											"end": 31399,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31380,
											"end": 31399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31039,
											"end": 31405,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31039,
											"end": 31405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31039,
											"end": 31405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31039,
											"end": 31405,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31411,
											"end": 31830,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 31411,
											"end": 31830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31577,
											"end": 31581,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31615,
											"end": 31617,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31604,
											"end": 31613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31600,
											"end": 31618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31592,
											"end": 31618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31592,
											"end": 31618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31664,
											"end": 31673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31658,
											"end": 31662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31654,
											"end": 31674,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 31650,
											"end": 31651,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31639,
											"end": 31648,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31635,
											"end": 31652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31628,
											"end": 31675,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31692,
											"end": 31823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 31818,
											"end": 31822,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31692,
											"end": 31823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 31692,
											"end": 31823,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 31692,
											"end": 31823,
											"name": "tag",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 31692,
											"end": 31823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31684,
											"end": 31823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31684,
											"end": 31823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31411,
											"end": 31830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31411,
											"end": 31830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31411,
											"end": 31830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31411,
											"end": 31830,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32059,
											"end": 32063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32097,
											"end": 32100,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 32086,
											"end": 32095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32082,
											"end": 32101,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32074,
											"end": 32101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32074,
											"end": 32101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32111,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 32179,
											"end": 32180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32168,
											"end": 32177,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32164,
											"end": 32181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32155,
											"end": 32161,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 32111,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 32111,
											"end": 32182,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32111,
											"end": 32182,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 32111,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32192,
											"end": 32264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 32260,
											"end": 32262,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32249,
											"end": 32258,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32245,
											"end": 32263,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32236,
											"end": 32242,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 32192,
											"end": 32264,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 32192,
											"end": 32264,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32192,
											"end": 32264,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 32192,
											"end": 32264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32274,
											"end": 32346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 32342,
											"end": 32344,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 32331,
											"end": 32340,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32327,
											"end": 32345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32318,
											"end": 32324,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 32274,
											"end": 32346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 32274,
											"end": 32346,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32274,
											"end": 32346,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 32274,
											"end": 32346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32356,
											"end": 32428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 32424,
											"end": 32426,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 32413,
											"end": 32422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32409,
											"end": 32427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32400,
											"end": 32406,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 32356,
											"end": 32428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 32356,
											"end": 32428,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32356,
											"end": 32428,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 32356,
											"end": 32428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32476,
											"end": 32485,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32470,
											"end": 32474,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32466,
											"end": 32486,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 32460,
											"end": 32463,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 32449,
											"end": 32458,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32445,
											"end": 32464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32438,
											"end": 32487,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32504,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 32575,
											"end": 32579,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32566,
											"end": 32572,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 32504,
											"end": 32580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 32504,
											"end": 32580,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 32504,
											"end": 32580,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 32504,
											"end": 32580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32496,
											"end": 32580,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32496,
											"end": 32580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31836,
											"end": 32587,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d\",\"dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 33,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220184f122e4a4528fb55b34dbfc9e58137b732102445c23a91edff28a093d58e2e64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220184f122e4a4528fb55b34dbfc9e58137b732102445c23a91edff28a093d58e2e64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x4F SLT 0x2E 0x4A GASLIMIT 0x28 0xFB SSTORE 0xB3 0x4D 0xBF 0xC9 0xE5 DUP2 CALLDATACOPY 0xB7 ORIGIN LT 0x24 GASLIMIT 0xC2 GASPRICE SWAP2 0xED SELFDESTRUCT 0x28 LOG0 SWAP4 0xD5 DUP15 0x2E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:8111:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220184f122e4a4528fb55b34dbfc9e58137b732102445c23a91edff28a093d58e2e64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x4F SLT 0x2E 0x4A GASLIMIT 0x28 0xFB SSTORE 0xB3 0x4D 0xBF 0xC9 0xE5 DUP2 CALLDATACOPY 0xB7 ORIGIN LT 0x24 GASLIMIT 0xC2 GASPRICE SWAP2 0xED SELFDESTRUCT 0x28 LOG0 SWAP4 0xD5 DUP15 0x2E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "194:8111:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220184f122e4a4528fb55b34dbfc9e58137b732102445c23a91edff28a093d58e2e64736f6c634300080a0033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CouponMarket.sol": {
				"CouponMarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "discount",
									"type": "uint256"
								}
							],
							"name": "amount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "discount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "ContractAddr",
									"type": "address"
								}
							],
							"name": "buyCoupon",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "discount",
									"type": "uint256"
								}
							],
							"name": "seller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CouponMarket.sol\":505:1927  contract CouponMarket {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CouponMarket.sol\":505:1927  contract CouponMarket {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01edf85c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8b0d0258\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xaacdfe6f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CouponMarket.sol\":854:1352  function buyCoupon(... */\n    tag_2:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CouponMarket.sol\":743:848  function amount(uint256 discount) public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CouponMarket.sol\":632:737  function seller(uint256 discount) public view returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CouponMarket.sol\":1492:1925  function onERC1155Received(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CouponMarket.sol\":854:1352  function buyCoupon(... */\n    tag_9:\n        /* \"contracts/CouponMarket.sol\":983:987  bool */\n      0x00\n        /* \"contracts/CouponMarket.sol\":999:1023  address payable receiver */\n      dup1\n        /* \"contracts/CouponMarket.sol\":1034:1041  _seller */\n      0x00\n        /* \"contracts/CouponMarket.sol\":1034:1051  _seller[discount] */\n      dup1\n        /* \"contracts/CouponMarket.sol\":1042:1050  discount */\n      dup7\n        /* \"contracts/CouponMarket.sol\":1034:1051  _seller[discount] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CouponMarket.sol\":999:1052  address payable receiver = payable(_seller[discount]) */\n      swap1\n      pop\n        /* \"contracts/CouponMarket.sol\":1062:1075  uint256 price */\n      0x00\n        /* \"contracts/CouponMarket.sol\":1078:1079  1 */\n      0x01\n        /* \"contracts/CouponMarket.sol\":1062:1079  uint256 price = 1 */\n      swap1\n      pop\n        /* \"contracts/CouponMarket.sol\":1089:1097  receiver */\n      dup2\n        /* \"contracts/CouponMarket.sol\":1089:1106  receiver.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CouponMarket.sol\":1089:1113  receiver.transfer(price) */\n      0x08fc\n        /* \"contracts/CouponMarket.sol\":1107:1112  price */\n      dup3\n        /* \"contracts/CouponMarket.sol\":1089:1113  receiver.transfer(price) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n        /* \"contracts/CouponMarket.sol\":1130:1142  ContractAddr */\n      dup4\n        /* \"contracts/CouponMarket.sol\":1123:1160  others(ContractAddr).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"contracts/CouponMarket.sol\":1182:1186  this */\n      address\n        /* \"contracts/CouponMarket.sol\":1201:1211  msg.sender */\n      caller\n        /* \"contracts/CouponMarket.sol\":1225:1233  discount */\n      dup10\n        /* \"contracts/CouponMarket.sol\":1247:1253  amount */\n      dup10\n        /* \"contracts/CouponMarket.sol\":1123:1283  others(ContractAddr).safeTransferFrom(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CouponMarket.sol\":1293:1324  _reduceAmount(discount, amount) */\n      tag_40\n        /* \"contracts/CouponMarket.sol\":1307:1315  discount */\n      dup7\n        /* \"contracts/CouponMarket.sol\":1317:1323  amount */\n      dup7\n        /* \"contracts/CouponMarket.sol\":1293:1306  _reduceAmount */\n      tag_41\n        /* \"contracts/CouponMarket.sol\":1293:1324  _reduceAmount(discount, amount) */\n      jump\t// in\n    tag_40:\n        /* \"contracts/CouponMarket.sol\":1341:1345  true */\n      0x01\n        /* \"contracts/CouponMarket.sol\":1334:1345  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/CouponMarket.sol\":854:1352  function buyCoupon(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CouponMarket.sol\":743:848  function amount(uint256 discount) public view returns (uint256) {... */\n    tag_16:\n        /* \"contracts/CouponMarket.sol\":798:805  uint256 */\n      0x00\n        /* \"contracts/CouponMarket.sol\":824:831  _amount */\n      0x01\n        /* \"contracts/CouponMarket.sol\":824:841  _amount[discount] */\n      0x00\n        /* \"contracts/CouponMarket.sol\":832:840  discount */\n      dup4\n        /* \"contracts/CouponMarket.sol\":824:841  _amount[discount] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CouponMarket.sol\":817:841  return _amount[discount] */\n      swap1\n      pop\n        /* \"contracts/CouponMarket.sol\":743:848  function amount(uint256 discount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CouponMarket.sol\":632:737  function seller(uint256 discount) public view returns (address) {... */\n    tag_22:\n        /* \"contracts/CouponMarket.sol\":687:694  address */\n      0x00\n        /* \"contracts/CouponMarket.sol\":713:720  _seller */\n      dup1\n        /* \"contracts/CouponMarket.sol\":713:730  _seller[discount] */\n      0x00\n        /* \"contracts/CouponMarket.sol\":721:729  discount */\n      dup4\n        /* \"contracts/CouponMarket.sol\":713:730  _seller[discount] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CouponMarket.sol\":706:730  return _seller[discount] */\n      swap1\n      pop\n        /* \"contracts/CouponMarket.sol\":632:737  function seller(uint256 discount) public view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CouponMarket.sol\":1492:1925  function onERC1155Received(... */\n    tag_29:\n        /* \"contracts/CouponMarket.sol\":1663:1669  bytes4 */\n      0x00\n        /* \"contracts/CouponMarket.sol\":1695:1699  from */\n      dup6\n        /* \"contracts/CouponMarket.sol\":1681:1688  _seller */\n      0x00\n        /* \"contracts/CouponMarket.sol\":1681:1692  _seller[id] */\n      dup1\n        /* \"contracts/CouponMarket.sol\":1689:1691  id */\n      dup8\n        /* \"contracts/CouponMarket.sol\":1681:1692  _seller[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/CouponMarket.sol\":1681:1699  _seller[id] = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/CouponMarket.sol\":1737:1742  value */\n      dup4\n        /* \"contracts/CouponMarket.sol\":1723:1730  _amount */\n      0x01\n        /* \"contracts/CouponMarket.sol\":1723:1734  _amount[id] */\n      0x00\n        /* \"contracts/CouponMarket.sol\":1731:1733  id */\n      dup8\n        /* \"contracts/CouponMarket.sol\":1723:1734  _amount[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CouponMarket.sol\":1723:1742  _amount[id] + value */\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"contracts/CouponMarket.sol\":1709:1716  _amount */\n      0x01\n        /* \"contracts/CouponMarket.sol\":1709:1720  _amount[id] */\n      0x00\n        /* \"contracts/CouponMarket.sol\":1717:1719  id */\n      dup8\n        /* \"contracts/CouponMarket.sol\":1709:1720  _amount[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CouponMarket.sol\":1709:1742  _amount[id] = _amount[id] + value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CouponMarket.sol\":1795:1904  keccak256(... */\n      0xf23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97\n        /* \"contracts/CouponMarket.sol\":1752:1918  return... */\n      swap1\n      pop\n        /* \"contracts/CouponMarket.sol\":1492:1925  function onERC1155Received(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CouponMarket.sol\":1358:1486  function _reduceAmount(uint256 discount, uint256 amount) private {... */\n    tag_41:\n        /* \"contracts/CouponMarket.sol\":1473:1479  amount */\n      dup1\n        /* \"contracts/CouponMarket.sol\":1453:1460  _amount */\n      0x01\n        /* \"contracts/CouponMarket.sol\":1453:1470  _amount[discount] */\n      0x00\n        /* \"contracts/CouponMarket.sol\":1461:1469  discount */\n      dup5\n        /* \"contracts/CouponMarket.sol\":1453:1470  _amount[discount] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/CouponMarket.sol\":1453:1479  _amount[discount] - amount */\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contracts/CouponMarket.sol\":1433:1440  _amount */\n      0x01\n        /* \"contracts/CouponMarket.sol\":1433:1450  _amount[discount] */\n      0x00\n        /* \"contracts/CouponMarket.sol\":1441:1449  discount */\n      dup5\n        /* \"contracts/CouponMarket.sol\":1433:1450  _amount[discount] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/CouponMarket.sol\":1433:1479  _amount[discount] = _amount[discount] - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CouponMarket.sol\":1358:1486  function _reduceAmount(uint256 discount, uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_51:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_52:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_53:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_54:\n        /* \"#utility.yul\":490:514   */\n      tag_80\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_53\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_81:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_55:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_83\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_54\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:816   */\n    tag_56:\n        /* \"#utility.yul\":727:734   */\n      0x00\n        /* \"#utility.yul\":767:809   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":760:765   */\n      dup3\n        /* \"#utility.yul\":756:810   */\n      and\n        /* \"#utility.yul\":745:810   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:918   */\n    tag_57:\n        /* \"#utility.yul\":859:866   */\n      0x00\n        /* \"#utility.yul\":888:912   */\n      tag_86\n        /* \"#utility.yul\":906:911   */\n      dup3\n        /* \"#utility.yul\":888:912   */\n      tag_56\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":877:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":822:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_58:\n        /* \"#utility.yul\":997:1021   */\n      tag_88\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_57\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_89\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_89:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_59:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_91\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_58\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1816   */\n    tag_8:\n        /* \"#utility.yul\":1274:1280   */\n      0x00\n        /* \"#utility.yul\":1282:1288   */\n      dup1\n        /* \"#utility.yul\":1290:1296   */\n      0x00\n        /* \"#utility.yul\":1339:1341   */\n      0x60\n        /* \"#utility.yul\":1327:1336   */\n      dup5\n        /* \"#utility.yul\":1318:1325   */\n      dup7\n        /* \"#utility.yul\":1314:1337   */\n      sub\n        /* \"#utility.yul\":1310:1342   */\n      slt\n        /* \"#utility.yul\":1307:1426   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":1345:1424   */\n      tag_94\n      tag_51\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1307:1426   */\n    tag_93:\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1490:1543   */\n      tag_95\n        /* \"#utility.yul\":1535:1542   */\n      dup7\n        /* \"#utility.yul\":1526:1532   */\n      dup3\n        /* \"#utility.yul\":1515:1524   */\n      dup8\n        /* \"#utility.yul\":1511:1533   */\n      add\n        /* \"#utility.yul\":1490:1543   */\n      tag_55\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1480:1543   */\n      swap4\n      pop\n        /* \"#utility.yul\":1436:1553   */\n      pop\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1618:1671   */\n      tag_96\n        /* \"#utility.yul\":1663:1670   */\n      dup7\n        /* \"#utility.yul\":1654:1660   */\n      dup3\n        /* \"#utility.yul\":1643:1652   */\n      dup8\n        /* \"#utility.yul\":1639:1661   */\n      add\n        /* \"#utility.yul\":1618:1671   */\n      tag_55\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1608:1671   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1681   */\n      pop\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1746:1799   */\n      tag_97\n        /* \"#utility.yul\":1791:1798   */\n      dup7\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1771:1780   */\n      dup8\n        /* \"#utility.yul\":1767:1789   */\n      add\n        /* \"#utility.yul\":1746:1799   */\n      tag_59\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1736:1799   */\n      swap2\n      pop\n        /* \"#utility.yul\":1691:1809   */\n      pop\n        /* \"#utility.yul\":1197:1816   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1822:1912   */\n    tag_60:\n        /* \"#utility.yul\":1856:1863   */\n      0x00\n        /* \"#utility.yul\":1899:1904   */\n      dup2\n        /* \"#utility.yul\":1892:1905   */\n      iszero\n        /* \"#utility.yul\":1885:1906   */\n      iszero\n        /* \"#utility.yul\":1874:1906   */\n      swap1\n      pop\n        /* \"#utility.yul\":1822:1912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1918:2027   */\n    tag_61:\n        /* \"#utility.yul\":1999:2020   */\n      tag_100\n        /* \"#utility.yul\":2014:2019   */\n      dup2\n        /* \"#utility.yul\":1999:2020   */\n      tag_60\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1994:1997   */\n      dup3\n        /* \"#utility.yul\":1987:2021   */\n      mstore\n        /* \"#utility.yul\":1918:2027   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2033:2243   */\n    tag_11:\n        /* \"#utility.yul\":2120:2124   */\n      0x00\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2147:2156   */\n      dup3\n        /* \"#utility.yul\":2143:2161   */\n      add\n        /* \"#utility.yul\":2135:2161   */\n      swap1\n      pop\n        /* \"#utility.yul\":2171:2236   */\n      tag_102\n        /* \"#utility.yul\":2233:2234   */\n      0x00\n        /* \"#utility.yul\":2222:2231   */\n      dup4\n        /* \"#utility.yul\":2218:2235   */\n      add\n        /* \"#utility.yul\":2209:2215   */\n      dup5\n        /* \"#utility.yul\":2171:2236   */\n      tag_61\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2033:2243   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2249:2578   */\n    tag_15:\n        /* \"#utility.yul\":2308:2314   */\n      0x00\n        /* \"#utility.yul\":2357:2359   */\n      0x20\n        /* \"#utility.yul\":2345:2354   */\n      dup3\n        /* \"#utility.yul\":2336:2343   */\n      dup5\n        /* \"#utility.yul\":2332:2355   */\n      sub\n        /* \"#utility.yul\":2328:2360   */\n      slt\n        /* \"#utility.yul\":2325:2444   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2363:2442   */\n      tag_105\n      tag_51\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2325:2444   */\n    tag_104:\n        /* \"#utility.yul\":2483:2484   */\n      0x00\n        /* \"#utility.yul\":2508:2561   */\n      tag_106\n        /* \"#utility.yul\":2553:2560   */\n      dup5\n        /* \"#utility.yul\":2544:2550   */\n      dup3\n        /* \"#utility.yul\":2533:2542   */\n      dup6\n        /* \"#utility.yul\":2529:2551   */\n      add\n        /* \"#utility.yul\":2508:2561   */\n      tag_55\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2498:2561   */\n      swap2\n      pop\n        /* \"#utility.yul\":2454:2571   */\n      pop\n        /* \"#utility.yul\":2249:2578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2584:2702   */\n    tag_62:\n        /* \"#utility.yul\":2671:2695   */\n      tag_108\n        /* \"#utility.yul\":2689:2694   */\n      dup2\n        /* \"#utility.yul\":2671:2695   */\n      tag_53\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2666:2669   */\n      dup3\n        /* \"#utility.yul\":2659:2696   */\n      mstore\n        /* \"#utility.yul\":2584:2702   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2708:2930   */\n    tag_18:\n        /* \"#utility.yul\":2801:2805   */\n      0x00\n        /* \"#utility.yul\":2839:2841   */\n      0x20\n        /* \"#utility.yul\":2828:2837   */\n      dup3\n        /* \"#utility.yul\":2824:2842   */\n      add\n        /* \"#utility.yul\":2816:2842   */\n      swap1\n      pop\n        /* \"#utility.yul\":2852:2923   */\n      tag_110\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2909:2918   */\n      dup4\n        /* \"#utility.yul\":2905:2922   */\n      add\n        /* \"#utility.yul\":2896:2902   */\n      dup5\n        /* \"#utility.yul\":2852:2923   */\n      tag_62\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2708:2930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2936:3054   */\n    tag_63:\n        /* \"#utility.yul\":3023:3047   */\n      tag_112\n        /* \"#utility.yul\":3041:3046   */\n      dup2\n        /* \"#utility.yul\":3023:3047   */\n      tag_57\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3018:3021   */\n      dup3\n        /* \"#utility.yul\":3011:3048   */\n      mstore\n        /* \"#utility.yul\":2936:3054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3060:3282   */\n    tag_24:\n        /* \"#utility.yul\":3153:3157   */\n      0x00\n        /* \"#utility.yul\":3191:3193   */\n      0x20\n        /* \"#utility.yul\":3180:3189   */\n      dup3\n        /* \"#utility.yul\":3176:3194   */\n      add\n        /* \"#utility.yul\":3168:3194   */\n      swap1\n      pop\n        /* \"#utility.yul\":3204:3275   */\n      tag_114\n        /* \"#utility.yul\":3272:3273   */\n      0x00\n        /* \"#utility.yul\":3261:3270   */\n      dup4\n        /* \"#utility.yul\":3257:3274   */\n      add\n        /* \"#utility.yul\":3248:3254   */\n      dup5\n        /* \"#utility.yul\":3204:3275   */\n      tag_63\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3060:3282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3288:3405   */\n    tag_64:\n        /* \"#utility.yul\":3397:3398   */\n      0x00\n        /* \"#utility.yul\":3394:3395   */\n      dup1\n        /* \"#utility.yul\":3387:3399   */\n      revert\n        /* \"#utility.yul\":3411:3528   */\n    tag_65:\n        /* \"#utility.yul\":3520:3521   */\n      0x00\n        /* \"#utility.yul\":3517:3518   */\n      dup1\n        /* \"#utility.yul\":3510:3522   */\n      revert\n        /* \"#utility.yul\":3534:3651   */\n    tag_66:\n        /* \"#utility.yul\":3643:3644   */\n      0x00\n        /* \"#utility.yul\":3640:3641   */\n      dup1\n        /* \"#utility.yul\":3633:3645   */\n      revert\n        /* \"#utility.yul\":3670:4222   */\n    tag_67:\n        /* \"#utility.yul\":3727:3735   */\n      0x00\n        /* \"#utility.yul\":3737:3743   */\n      dup1\n        /* \"#utility.yul\":3787:3790   */\n      dup4\n        /* \"#utility.yul\":3780:3784   */\n      0x1f\n        /* \"#utility.yul\":3772:3778   */\n      dup5\n        /* \"#utility.yul\":3768:3785   */\n      add\n        /* \"#utility.yul\":3764:3791   */\n      slt\n        /* \"#utility.yul\":3754:3876   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":3795:3874   */\n      tag_120\n      tag_64\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3754:3876   */\n    tag_119:\n        /* \"#utility.yul\":3908:3914   */\n      dup3\n        /* \"#utility.yul\":3895:3915   */\n      calldataload\n        /* \"#utility.yul\":3885:3915   */\n      swap1\n      pop\n        /* \"#utility.yul\":3938:3956   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3930:3936   */\n      dup2\n        /* \"#utility.yul\":3927:3957   */\n      gt\n        /* \"#utility.yul\":3924:4041   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":3960:4039   */\n      tag_122\n      tag_65\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3924:4041   */\n    tag_121:\n        /* \"#utility.yul\":4074:4078   */\n      0x20\n        /* \"#utility.yul\":4066:4072   */\n      dup4\n        /* \"#utility.yul\":4062:4079   */\n      add\n        /* \"#utility.yul\":4050:4079   */\n      swap2\n      pop\n        /* \"#utility.yul\":4128:4131   */\n      dup4\n        /* \"#utility.yul\":4120:4124   */\n      0x01\n        /* \"#utility.yul\":4112:4118   */\n      dup3\n        /* \"#utility.yul\":4108:4125   */\n      mul\n        /* \"#utility.yul\":4098:4106   */\n      dup4\n        /* \"#utility.yul\":4094:4126   */\n      add\n        /* \"#utility.yul\":4091:4132   */\n      gt\n        /* \"#utility.yul\":4088:4216   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":4135:4214   */\n      tag_124\n      tag_66\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4088:4216   */\n    tag_123:\n        /* \"#utility.yul\":3670:4222   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4228:5337   */\n    tag_28:\n        /* \"#utility.yul\":4334:4340   */\n      0x00\n        /* \"#utility.yul\":4342:4348   */\n      dup1\n        /* \"#utility.yul\":4350:4356   */\n      0x00\n        /* \"#utility.yul\":4358:4364   */\n      dup1\n        /* \"#utility.yul\":4366:4372   */\n      0x00\n        /* \"#utility.yul\":4374:4380   */\n      dup1\n        /* \"#utility.yul\":4423:4426   */\n      0xa0\n        /* \"#utility.yul\":4411:4420   */\n      dup8\n        /* \"#utility.yul\":4402:4409   */\n      dup10\n        /* \"#utility.yul\":4398:4421   */\n      sub\n        /* \"#utility.yul\":4394:4427   */\n      slt\n        /* \"#utility.yul\":4391:4511   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":4430:4509   */\n      tag_127\n      tag_51\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4391:4511   */\n    tag_126:\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4575:4628   */\n      tag_128\n        /* \"#utility.yul\":4620:4627   */\n      dup10\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup11\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_59\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":4565:4628   */\n      swap7\n      pop\n        /* \"#utility.yul\":4521:4638   */\n      pop\n        /* \"#utility.yul\":4677:4679   */\n      0x20\n        /* \"#utility.yul\":4703:4756   */\n      tag_129\n        /* \"#utility.yul\":4748:4755   */\n      dup10\n        /* \"#utility.yul\":4739:4745   */\n      dup3\n        /* \"#utility.yul\":4728:4737   */\n      dup11\n        /* \"#utility.yul\":4724:4746   */\n      add\n        /* \"#utility.yul\":4703:4756   */\n      tag_59\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4693:4756   */\n      swap6\n      pop\n        /* \"#utility.yul\":4648:4766   */\n      pop\n        /* \"#utility.yul\":4805:4807   */\n      0x40\n        /* \"#utility.yul\":4831:4884   */\n      tag_130\n        /* \"#utility.yul\":4876:4883   */\n      dup10\n        /* \"#utility.yul\":4867:4873   */\n      dup3\n        /* \"#utility.yul\":4856:4865   */\n      dup11\n        /* \"#utility.yul\":4852:4874   */\n      add\n        /* \"#utility.yul\":4831:4884   */\n      tag_55\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4821:4884   */\n      swap5\n      pop\n        /* \"#utility.yul\":4776:4894   */\n      pop\n        /* \"#utility.yul\":4933:4935   */\n      0x60\n        /* \"#utility.yul\":4959:5012   */\n      tag_131\n        /* \"#utility.yul\":5004:5011   */\n      dup10\n        /* \"#utility.yul\":4995:5001   */\n      dup3\n        /* \"#utility.yul\":4984:4993   */\n      dup11\n        /* \"#utility.yul\":4980:5002   */\n      add\n        /* \"#utility.yul\":4959:5012   */\n      tag_55\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4949:5012   */\n      swap4\n      pop\n        /* \"#utility.yul\":4904:5022   */\n      pop\n        /* \"#utility.yul\":5089:5092   */\n      0x80\n        /* \"#utility.yul\":5078:5087   */\n      dup8\n        /* \"#utility.yul\":5074:5093   */\n      add\n        /* \"#utility.yul\":5061:5094   */\n      calldataload\n        /* \"#utility.yul\":5121:5139   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5113:5119   */\n      dup2\n        /* \"#utility.yul\":5110:5140   */\n      gt\n        /* \"#utility.yul\":5107:5224   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":5143:5222   */\n      tag_133\n      tag_52\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5107:5224   */\n    tag_132:\n        /* \"#utility.yul\":5256:5320   */\n      tag_134\n        /* \"#utility.yul\":5312:5319   */\n      dup10\n        /* \"#utility.yul\":5303:5309   */\n      dup3\n        /* \"#utility.yul\":5292:5301   */\n      dup11\n        /* \"#utility.yul\":5288:5310   */\n      add\n        /* \"#utility.yul\":5256:5320   */\n      tag_67\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5238:5320   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":5032:5330   */\n      pop\n        /* \"#utility.yul\":4228:5337   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":5343:5492   */\n    tag_68:\n        /* \"#utility.yul\":5379:5386   */\n      0x00\n        /* \"#utility.yul\":5419:5485   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5412:5417   */\n      dup3\n        /* \"#utility.yul\":5408:5486   */\n      and\n        /* \"#utility.yul\":5397:5486   */\n      swap1\n      pop\n        /* \"#utility.yul\":5343:5492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5498:5613   */\n    tag_69:\n        /* \"#utility.yul\":5583:5606   */\n      tag_137\n        /* \"#utility.yul\":5600:5605   */\n      dup2\n        /* \"#utility.yul\":5583:5606   */\n      tag_68\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5578:5581   */\n      dup3\n        /* \"#utility.yul\":5571:5607   */\n      mstore\n        /* \"#utility.yul\":5498:5613   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5619:5837   */\n    tag_31:\n        /* \"#utility.yul\":5710:5714   */\n      0x00\n        /* \"#utility.yul\":5748:5750   */\n      0x20\n        /* \"#utility.yul\":5737:5746   */\n      dup3\n        /* \"#utility.yul\":5733:5751   */\n      add\n        /* \"#utility.yul\":5725:5751   */\n      swap1\n      pop\n        /* \"#utility.yul\":5761:5830   */\n      tag_139\n        /* \"#utility.yul\":5827:5828   */\n      0x00\n        /* \"#utility.yul\":5816:5825   */\n      dup4\n        /* \"#utility.yul\":5812:5829   */\n      add\n        /* \"#utility.yul\":5803:5809   */\n      dup5\n        /* \"#utility.yul\":5761:5830   */\n      tag_69\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5619:5837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5843:6011   */\n    tag_70:\n        /* \"#utility.yul\":5926:5937   */\n      0x00\n        /* \"#utility.yul\":5960:5966   */\n      dup3\n        /* \"#utility.yul\":5955:5958   */\n      dup3\n        /* \"#utility.yul\":5948:5967   */\n      mstore\n        /* \"#utility.yul\":6000:6004   */\n      0x20\n        /* \"#utility.yul\":5995:5998   */\n      dup3\n        /* \"#utility.yul\":5991:6005   */\n      add\n        /* \"#utility.yul\":5976:6005   */\n      swap1\n      pop\n        /* \"#utility.yul\":5843:6011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6017:6171   */\n    tag_71:\n        /* \"#utility.yul\":6157:6163   */\n      0x3078303000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6153:6154   */\n      0x00\n        /* \"#utility.yul\":6145:6151   */\n      dup3\n        /* \"#utility.yul\":6141:6155   */\n      add\n        /* \"#utility.yul\":6134:6164   */\n      mstore\n        /* \"#utility.yul\":6017:6171   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6177:6540   */\n    tag_72:\n        /* \"#utility.yul\":6318:6321   */\n      0x00\n        /* \"#utility.yul\":6339:6404   */\n      tag_143\n        /* \"#utility.yul\":6402:6403   */\n      0x04\n        /* \"#utility.yul\":6397:6400   */\n      dup4\n        /* \"#utility.yul\":6339:6404   */\n      tag_70\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6332:6404   */\n      swap2\n      pop\n        /* \"#utility.yul\":6413:6506   */\n      tag_144\n        /* \"#utility.yul\":6502:6505   */\n      dup3\n        /* \"#utility.yul\":6413:6506   */\n      tag_71\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6531:6533   */\n      0x20\n        /* \"#utility.yul\":6526:6529   */\n      dup3\n        /* \"#utility.yul\":6522:6534   */\n      add\n        /* \"#utility.yul\":6515:6534   */\n      swap1\n      pop\n        /* \"#utility.yul\":6177:6540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6546:7405   */\n    tag_36:\n        /* \"#utility.yul\":6823:6827   */\n      0x00\n        /* \"#utility.yul\":6861:6864   */\n      0xa0\n        /* \"#utility.yul\":6850:6859   */\n      dup3\n        /* \"#utility.yul\":6846:6865   */\n      add\n        /* \"#utility.yul\":6838:6865   */\n      swap1\n      pop\n        /* \"#utility.yul\":6875:6946   */\n      tag_146\n        /* \"#utility.yul\":6943:6944   */\n      0x00\n        /* \"#utility.yul\":6932:6941   */\n      dup4\n        /* \"#utility.yul\":6928:6945   */\n      add\n        /* \"#utility.yul\":6919:6925   */\n      dup8\n        /* \"#utility.yul\":6875:6946   */\n      tag_63\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6956:7028   */\n      tag_147\n        /* \"#utility.yul\":7024:7026   */\n      0x20\n        /* \"#utility.yul\":7013:7022   */\n      dup4\n        /* \"#utility.yul\":7009:7027   */\n      add\n        /* \"#utility.yul\":7000:7006   */\n      dup7\n        /* \"#utility.yul\":6956:7028   */\n      tag_63\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":7038:7110   */\n      tag_148\n        /* \"#utility.yul\":7106:7108   */\n      0x40\n        /* \"#utility.yul\":7095:7104   */\n      dup4\n        /* \"#utility.yul\":7091:7109   */\n      add\n        /* \"#utility.yul\":7082:7088   */\n      dup6\n        /* \"#utility.yul\":7038:7110   */\n      tag_62\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":7120:7192   */\n      tag_149\n        /* \"#utility.yul\":7188:7190   */\n      0x60\n        /* \"#utility.yul\":7177:7186   */\n      dup4\n        /* \"#utility.yul\":7173:7191   */\n      add\n        /* \"#utility.yul\":7164:7170   */\n      dup5\n        /* \"#utility.yul\":7120:7192   */\n      tag_62\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":7240:7249   */\n      dup2\n        /* \"#utility.yul\":7234:7238   */\n      dup2\n        /* \"#utility.yul\":7230:7250   */\n      sub\n        /* \"#utility.yul\":7224:7227   */\n      0x80\n        /* \"#utility.yul\":7213:7222   */\n      dup4\n        /* \"#utility.yul\":7209:7228   */\n      add\n        /* \"#utility.yul\":7202:7251   */\n      mstore\n        /* \"#utility.yul\":7268:7398   */\n      tag_150\n        /* \"#utility.yul\":7393:7397   */\n      dup2\n        /* \"#utility.yul\":7268:7398   */\n      tag_72\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":7260:7398   */\n      swap1\n      pop\n        /* \"#utility.yul\":6546:7405   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7411:7591   */\n    tag_73:\n        /* \"#utility.yul\":7459:7536   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7456:7457   */\n      0x00\n        /* \"#utility.yul\":7449:7537   */\n      mstore\n        /* \"#utility.yul\":7556:7560   */\n      0x11\n        /* \"#utility.yul\":7553:7554   */\n      0x04\n        /* \"#utility.yul\":7546:7561   */\n      mstore\n        /* \"#utility.yul\":7580:7584   */\n      0x24\n        /* \"#utility.yul\":7577:7578   */\n      0x00\n        /* \"#utility.yul\":7570:7585   */\n      revert\n        /* \"#utility.yul\":7597:7902   */\n    tag_46:\n        /* \"#utility.yul\":7637:7640   */\n      0x00\n        /* \"#utility.yul\":7656:7676   */\n      tag_153\n        /* \"#utility.yul\":7674:7675   */\n      dup3\n        /* \"#utility.yul\":7656:7676   */\n      tag_53\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":7651:7676   */\n      swap2\n      pop\n        /* \"#utility.yul\":7690:7710   */\n      tag_154\n        /* \"#utility.yul\":7708:7709   */\n      dup4\n        /* \"#utility.yul\":7690:7710   */\n      tag_53\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":7685:7710   */\n      swap3\n      pop\n        /* \"#utility.yul\":7844:7845   */\n      dup3\n        /* \"#utility.yul\":7776:7842   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7772:7846   */\n      sub\n        /* \"#utility.yul\":7769:7770   */\n      dup3\n        /* \"#utility.yul\":7766:7847   */\n      gt\n        /* \"#utility.yul\":7763:7870   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":7850:7868   */\n      tag_156\n      tag_73\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":7763:7870   */\n    tag_155:\n        /* \"#utility.yul\":7894:7895   */\n      dup3\n        /* \"#utility.yul\":7891:7892   */\n      dup3\n        /* \"#utility.yul\":7887:7896   */\n      add\n        /* \"#utility.yul\":7880:7896   */\n      swap1\n      pop\n        /* \"#utility.yul\":7597:7902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7908:8099   */\n    tag_49:\n        /* \"#utility.yul\":7948:7952   */\n      0x00\n        /* \"#utility.yul\":7968:7988   */\n      tag_158\n        /* \"#utility.yul\":7986:7987   */\n      dup3\n        /* \"#utility.yul\":7968:7988   */\n      tag_53\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":7963:7988   */\n      swap2\n      pop\n        /* \"#utility.yul\":8002:8022   */\n      tag_159\n        /* \"#utility.yul\":8020:8021   */\n      dup4\n        /* \"#utility.yul\":8002:8022   */\n      tag_53\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":7997:8022   */\n      swap3\n      pop\n        /* \"#utility.yul\":8041:8042   */\n      dup3\n        /* \"#utility.yul\":8038:8039   */\n      dup3\n        /* \"#utility.yul\":8035:8043   */\n      lt\n        /* \"#utility.yul\":8032:8066   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":8046:8064   */\n      tag_161\n      tag_73\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":8032:8066   */\n    tag_160:\n        /* \"#utility.yul\":8091:8092   */\n      dup3\n        /* \"#utility.yul\":8088:8089   */\n      dup3\n        /* \"#utility.yul\":8084:8093   */\n      sub\n        /* \"#utility.yul\":8076:8093   */\n      swap1\n      pop\n        /* \"#utility.yul\":7908:8099   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220aad71b7d825ad304acae86494862ee3427a8f874cdb7442645bf1fea1c6c041f64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610822806100206000396000f3fe60806040526004361061003f5760003560e01c806301edf85c146100445780638b0d025814610074578063aacdfe6f146100b1578063f23a6e61146100ee575b600080fd5b61005e6004803603810190610059919061041f565b61012b565b60405161006b919061048d565b60405180910390f35b34801561008057600080fd5b5061009b600480360381019061009691906104a8565b610238565b6040516100a891906104e4565b60405180910390f35b3480156100bd57600080fd5b506100d860048036038101906100d391906104a8565b610255565b6040516100e5919061050e565b60405180910390f35b3480156100fa57600080fd5b506101156004803603810190610110919061058e565b610291565b6040516101229190610663565b60405180910390f35b60008060008086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600190508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101af573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff1663f242432a303389896040518563ffffffff1660e01b81526004016101ef94939291906106db565b600060405180830381600087803b15801561020957600080fd5b505af115801561021d573d6000803e3d6000fd5b5050505061022b8686610347565b6001925050509392505050565b600060016000838152602001908152602001600020549050919050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008560008087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360016000878152602001908152602001600020546103039190610762565b60016000878152602001908152602001600020819055507ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b80600160008481526020019081526020016000205461036691906107b8565b60016000848152602001908152602001600020819055505050565b600080fd5b600080fd5b6000819050919050565b61039e8161038b565b81146103a957600080fd5b50565b6000813590506103bb81610395565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ec826103c1565b9050919050565b6103fc816103e1565b811461040757600080fd5b50565b600081359050610419816103f3565b92915050565b60008060006060848603121561043857610437610381565b5b6000610446868287016103ac565b9350506020610457868287016103ac565b92505060406104688682870161040a565b9150509250925092565b60008115159050919050565b61048781610472565b82525050565b60006020820190506104a2600083018461047e565b92915050565b6000602082840312156104be576104bd610381565b5b60006104cc848285016103ac565b91505092915050565b6104de8161038b565b82525050565b60006020820190506104f960008301846104d5565b92915050565b610508816103e1565b82525050565b600060208201905061052360008301846104ff565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261054e5761054d610529565b5b8235905067ffffffffffffffff81111561056b5761056a61052e565b5b60208301915083600182028301111561058757610586610533565b5b9250929050565b60008060008060008060a087890312156105ab576105aa610381565b5b60006105b989828a0161040a565b96505060206105ca89828a0161040a565b95505060406105db89828a016103ac565b94505060606105ec89828a016103ac565b935050608087013567ffffffffffffffff81111561060d5761060c610386565b5b61061989828a01610538565b92509250509295509295509295565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61065d81610628565b82525050565b60006020820190506106786000830184610654565b92915050565b600082825260208201905092915050565b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b60006106c560048361067e565b91506106d08261068f565b602082019050919050565b600060a0820190506106f060008301876104ff565b6106fd60208301866104ff565b61070a60408301856104d5565b61071760608301846104d5565b8181036080830152610728816106b8565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061076d8261038b565b91506107788361038b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107ad576107ac610733565b5b828201905092915050565b60006107c38261038b565b91506107ce8361038b565b9250828210156107e1576107e0610733565b5b82820390509291505056fea2646970667358221220aad71b7d825ad304acae86494862ee3427a8f874cdb7442645bf1fea1c6c041f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x822 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1EDF85C EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x8B0D0258 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0xAACDFE6F EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xEE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59 SWAP2 SWAP1 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS CALLER DUP10 DUP10 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x22B DUP7 DUP7 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0x38B JUMP JUMPDEST DUP2 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BB DUP2 PUSH2 0x395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC DUP3 PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FC DUP2 PUSH2 0x3E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x419 DUP2 PUSH2 0x3F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x438 JUMPI PUSH2 0x437 PUSH2 0x381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x446 DUP7 DUP3 DUP8 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x457 DUP7 DUP3 DUP8 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x468 DUP7 DUP3 DUP8 ADD PUSH2 0x40A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x487 DUP2 PUSH2 0x472 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x47E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CC DUP5 DUP3 DUP6 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x38B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x508 DUP2 PUSH2 0x3E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x523 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x54E JUMPI PUSH2 0x54D PUSH2 0x529 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x52E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x587 JUMPI PUSH2 0x586 PUSH2 0x533 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x5AB JUMPI PUSH2 0x5AA PUSH2 0x381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5B9 DUP10 DUP3 DUP11 ADD PUSH2 0x40A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x5CA DUP10 DUP3 DUP11 ADD PUSH2 0x40A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x5DB DUP10 DUP3 DUP11 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x5EC DUP10 DUP3 DUP11 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60D JUMPI PUSH2 0x60C PUSH2 0x386 JUMP JUMPDEST JUMPDEST PUSH2 0x619 DUP10 DUP3 DUP11 ADD PUSH2 0x538 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP2 PUSH2 0x628 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x678 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3078303000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C5 PUSH1 0x4 DUP4 PUSH2 0x67E JUMP JUMPDEST SWAP2 POP PUSH2 0x6D0 DUP3 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x6F0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x6FD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x70A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x717 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4D5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x728 DUP2 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x76D DUP3 PUSH2 0x38B JUMP JUMPDEST SWAP2 POP PUSH2 0x778 DUP4 PUSH2 0x38B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AC PUSH2 0x733 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C3 DUP3 PUSH2 0x38B JUMP JUMPDEST SWAP2 POP PUSH2 0x7CE DUP4 PUSH2 0x38B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x7E1 JUMPI PUSH2 0x7E0 PUSH2 0x733 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xD7 SHL PUSH30 0x825AD304ACAE86494862EE3427A8F874CDB7442645BF1FEA1C6C041F6473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "505:1422:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_reduceAmount_1883": {
									"entryPoint": 839,
									"id": 1883,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@amount_1812": {
									"entryPoint": 568,
									"id": 1812,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyCoupon_1865": {
									"entryPoint": 299,
									"id": 1865,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@onERC1155Received_1923": {
									"entryPoint": 657,
									"id": 1923,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@seller_1800": {
									"entryPoint": 597,
									"id": 1800,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4": {
									"entryPoint": 1679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8102:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:9",
														"type": ""
													}
												],
												"src": "545:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "745:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "745:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "717:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "727:7:9",
														"type": ""
													}
												],
												"src": "690:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "867:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "877:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "906:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "888:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "888:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "877:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "849:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "859:7:9",
														"type": ""
													}
												],
												"src": "822:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:9"
															},
															"nodeType": "YulIf",
															"src": "977:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:9",
														"type": ""
													}
												],
												"src": "924:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:9",
														"type": ""
													}
												],
												"src": "1052:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:519:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1343:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1345:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1345:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1345:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1318:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1339:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:32:9"
															},
															"nodeType": "YulIf",
															"src": "1307:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1436:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1465:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1480:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1490:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1490:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1480:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1563:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1608:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1618:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1618:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1736:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1771:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1782:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1767:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1746:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1746:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1251:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1262:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1274:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1282:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1290:6:9",
														"type": ""
													}
												],
												"src": "1197:619:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1864:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1874:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1899:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1892:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1892:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1885:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1885:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1874:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1846:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1856:7:9",
														"type": ""
													}
												],
												"src": "1822:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1977:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1994:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2014:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1999:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1999:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1987:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1987:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1987:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1965:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1972:3:9",
														"type": ""
													}
												],
												"src": "1918:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2125:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2135:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2147:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2158:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2135:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2209:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2222:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2233:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2171:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2171:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2097:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2109:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2120:4:9",
														"type": ""
													}
												],
												"src": "2033:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2315:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2361:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2363:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2363:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2363:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2336:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2345:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2332:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2332:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2357:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2328:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:32:9"
															},
															"nodeType": "YulIf",
															"src": "2325:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2454:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2469:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2473:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2498:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2533:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2544:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2529:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2529:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2553:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2508:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2508:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2498:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2285:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2296:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2308:6:9",
														"type": ""
													}
												],
												"src": "2249:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2649:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2666:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2689:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2671:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2671:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2659:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2659:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2659:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2637:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2644:3:9",
														"type": ""
													}
												],
												"src": "2584:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2806:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2816:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2828:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2839:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2816:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2896:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2909:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2920:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2905:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2852:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2852:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2778:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2790:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2801:4:9",
														"type": ""
													}
												],
												"src": "2708:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3001:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3018:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3041:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3023:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3023:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3011:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3011:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3011:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2989:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2996:3:9",
														"type": ""
													}
												],
												"src": "2936:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3158:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3168:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3180:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3191:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3176:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3168:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3248:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3261:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3272:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3257:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3257:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3204:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3130:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3142:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3153:4:9",
														"type": ""
													}
												],
												"src": "3060:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3377:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3394:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3397:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3387:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3387:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3288:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3500:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3517:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3520:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3510:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3510:12:9"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "3411:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3623:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3640:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3643:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3633:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3633:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3744:478:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3793:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3795:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3795:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3795:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3772:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3780:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3768:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3768:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3787:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3764:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3764:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3757:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:35:9"
															},
															"nodeType": "YulIf",
															"src": "3754:122:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3885:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3908:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3895:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3895:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3885:6:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3958:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "3960:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3960:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3960:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3930:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3938:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:30:9"
															},
															"nodeType": "YulIf",
															"src": "3924:117:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4050:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4066:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4074:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4062:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4062:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "4050:8:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4133:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4135:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4135:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4135:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "4098:8:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4112:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4120:4:9",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4108:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4108:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4094:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4094:32:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4128:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4091:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:41:9"
															},
															"nodeType": "YulIf",
															"src": "4088:128:9"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3711:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3719:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "3727:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3737:6:9",
														"type": ""
													}
												],
												"src": "3670:552:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4381:956:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4428:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4430:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4430:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4402:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4411:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4394:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4394:33:9"
															},
															"nodeType": "YulIf",
															"src": "4391:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4521:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4536:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4540:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4565:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4648:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4663:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4677:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4667:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4693:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4728:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4739:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4724:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4724:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4748:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4703:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4703:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4693:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4776:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4791:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4805:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4795:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4821:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4856:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4867:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4852:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4852:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4876:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4831:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4831:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4821:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4904:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4919:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4933:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4923:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4949:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4984:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4995:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4980:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4980:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5004:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4959:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4959:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4949:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5032:298:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5047:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5078:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5089:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5074:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5074:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5061:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5061:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5051:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5141:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5143:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5143:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5143:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5113:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5121:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5110:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5110:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "5107:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5238:82:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5292:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5303:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5288:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5288:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5312:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5256:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5256:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5238:6:9"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "5246:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4311:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4322:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4334:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4342:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4350:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4358:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4366:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4374:6:9",
														"type": ""
													}
												],
												"src": "4228:1109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5387:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5397:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5412:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5397:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5369:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5379:7:9",
														"type": ""
													}
												],
												"src": "5343:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5561:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5578:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5600:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5583:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5571:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5571:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5571:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5549:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5556:3:9",
														"type": ""
													}
												],
												"src": "5498:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5715:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5725:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5737:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5748:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5733:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5733:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5725:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5803:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5816:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5827:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5812:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5812:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5761:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5687:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5699:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5710:4:9",
														"type": ""
													}
												],
												"src": "5619:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5938:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5955:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5960:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5948:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5948:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5948:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5976:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5995:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5991:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5976:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5910:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5915:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5926:11:9",
														"type": ""
													}
												],
												"src": "5843:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6123:48:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6145:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6153:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6141:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6141:14:9"
																	},
																	{
																		"hexValue": "30783030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6157:6:9",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6134:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6134:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6134:30:9"
														}
													]
												},
												"name": "store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6115:6:9",
														"type": ""
													}
												],
												"src": "6017:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6322:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6332:72:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6397:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6402:1:9",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6339:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:65:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6332:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6502:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"nodeType": "YulIdentifier",
																	"src": "6413:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6413:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6413:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6515:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6526:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6531:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6522:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6522:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6515:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6310:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6318:3:9",
														"type": ""
													}
												],
												"src": "6177:363:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6828:577:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6838:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6850:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6861:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6846:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6846:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6838:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6919:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6932:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6943:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6928:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6928:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6875:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6875:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6875:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7000:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7013:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7024:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7009:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7009:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6956:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6956:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7082:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7038:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7038:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7164:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7177:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7188:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7173:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7173:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7120:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7120:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7120:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7213:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7224:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7209:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7209:19:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7234:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7240:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7230:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7230:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7202:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7202:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7202:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7260:138:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7393:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7268:123:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7268:130:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7260:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6776:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6788:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6796:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6804:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6812:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6823:4:9",
														"type": ""
													}
												],
												"src": "6546:859:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7439:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7456:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7459:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7449:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7449:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7449:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7553:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7556:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7546:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7577:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7580:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7570:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7570:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7570:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7411:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7641:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7651:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7674:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7656:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7656:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7651:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7685:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7708:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7690:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7690:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7685:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7848:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7850:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7850:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7850:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7769:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7776:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7844:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7772:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7772:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7766:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7766:81:9"
															},
															"nodeType": "YulIf",
															"src": "7763:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7880:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7891:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7894:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7887:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7887:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7880:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7628:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7631:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7637:3:9",
														"type": ""
													}
												],
												"src": "7597:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7953:146:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7963:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7986:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7968:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7968:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7963:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7997:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8020:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8002:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7997:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8044:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8046:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8046:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8046:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8038:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8041:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8035:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8035:8:9"
															},
															"nodeType": "YulIf",
															"src": "8032:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8076:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8088:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8091:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8084:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8084:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8076:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7939:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7942:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7948:4:9",
														"type": ""
													}
												],
												"src": "7908:191:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"0x00\")\n\n    }\n\n    function abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c806301edf85c146100445780638b0d025814610074578063aacdfe6f146100b1578063f23a6e61146100ee575b600080fd5b61005e6004803603810190610059919061041f565b61012b565b60405161006b919061048d565b60405180910390f35b34801561008057600080fd5b5061009b600480360381019061009691906104a8565b610238565b6040516100a891906104e4565b60405180910390f35b3480156100bd57600080fd5b506100d860048036038101906100d391906104a8565b610255565b6040516100e5919061050e565b60405180910390f35b3480156100fa57600080fd5b506101156004803603810190610110919061058e565b610291565b6040516101229190610663565b60405180910390f35b60008060008086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600190508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101af573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff1663f242432a303389896040518563ffffffff1660e01b81526004016101ef94939291906106db565b600060405180830381600087803b15801561020957600080fd5b505af115801561021d573d6000803e3d6000fd5b5050505061022b8686610347565b6001925050509392505050565b600060016000838152602001908152602001600020549050919050565b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008560008087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360016000878152602001908152602001600020546103039190610762565b60016000878152602001908152602001600020819055507ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b80600160008481526020019081526020016000205461036691906107b8565b60016000848152602001908152602001600020819055505050565b600080fd5b600080fd5b6000819050919050565b61039e8161038b565b81146103a957600080fd5b50565b6000813590506103bb81610395565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ec826103c1565b9050919050565b6103fc816103e1565b811461040757600080fd5b50565b600081359050610419816103f3565b92915050565b60008060006060848603121561043857610437610381565b5b6000610446868287016103ac565b9350506020610457868287016103ac565b92505060406104688682870161040a565b9150509250925092565b60008115159050919050565b61048781610472565b82525050565b60006020820190506104a2600083018461047e565b92915050565b6000602082840312156104be576104bd610381565b5b60006104cc848285016103ac565b91505092915050565b6104de8161038b565b82525050565b60006020820190506104f960008301846104d5565b92915050565b610508816103e1565b82525050565b600060208201905061052360008301846104ff565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261054e5761054d610529565b5b8235905067ffffffffffffffff81111561056b5761056a61052e565b5b60208301915083600182028301111561058757610586610533565b5b9250929050565b60008060008060008060a087890312156105ab576105aa610381565b5b60006105b989828a0161040a565b96505060206105ca89828a0161040a565b95505060406105db89828a016103ac565b94505060606105ec89828a016103ac565b935050608087013567ffffffffffffffff81111561060d5761060c610386565b5b61061989828a01610538565b92509250509295509295509295565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61065d81610628565b82525050565b60006020820190506106786000830184610654565b92915050565b600082825260208201905092915050565b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b60006106c560048361067e565b91506106d08261068f565b602082019050919050565b600060a0820190506106f060008301876104ff565b6106fd60208301866104ff565b61070a60408301856104d5565b61071760608301846104d5565b8181036080830152610728816106b8565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061076d8261038b565b91506107788361038b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107ad576107ac610733565b5b828201905092915050565b60006107c38261038b565b91506107ce8361038b565b9250828210156107e1576107e0610733565b5b82820390509291505056fea2646970667358221220aad71b7d825ad304acae86494862ee3427a8f874cdb7442645bf1fea1c6c041f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1EDF85C EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x8B0D0258 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0xAACDFE6F EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xEE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59 SWAP2 SWAP1 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x58E JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS CALLER DUP10 DUP10 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x22B DUP7 DUP7 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0x38B JUMP JUMPDEST DUP2 EQ PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3BB DUP2 PUSH2 0x395 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC DUP3 PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FC DUP2 PUSH2 0x3E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x419 DUP2 PUSH2 0x3F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x438 JUMPI PUSH2 0x437 PUSH2 0x381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x446 DUP7 DUP3 DUP8 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x457 DUP7 DUP3 DUP8 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x468 DUP7 DUP3 DUP8 ADD PUSH2 0x40A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x487 DUP2 PUSH2 0x472 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x47E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CC DUP5 DUP3 DUP6 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x38B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x508 DUP2 PUSH2 0x3E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x523 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x54E JUMPI PUSH2 0x54D PUSH2 0x529 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x52E JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x587 JUMPI PUSH2 0x586 PUSH2 0x533 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x5AB JUMPI PUSH2 0x5AA PUSH2 0x381 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5B9 DUP10 DUP3 DUP11 ADD PUSH2 0x40A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x5CA DUP10 DUP3 DUP11 ADD PUSH2 0x40A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x5DB DUP10 DUP3 DUP11 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x5EC DUP10 DUP3 DUP11 ADD PUSH2 0x3AC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60D JUMPI PUSH2 0x60C PUSH2 0x386 JUMP JUMPDEST JUMPDEST PUSH2 0x619 DUP10 DUP3 DUP11 ADD PUSH2 0x538 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP2 PUSH2 0x628 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x678 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3078303000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C5 PUSH1 0x4 DUP4 PUSH2 0x67E JUMP JUMPDEST SWAP2 POP PUSH2 0x6D0 DUP3 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x6F0 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x6FD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x70A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x717 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4D5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x728 DUP2 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x76D DUP3 PUSH2 0x38B JUMP JUMPDEST SWAP2 POP PUSH2 0x778 DUP4 PUSH2 0x38B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x7AD JUMPI PUSH2 0x7AC PUSH2 0x733 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C3 DUP3 PUSH2 0x38B JUMP JUMPDEST SWAP2 POP PUSH2 0x7CE DUP4 PUSH2 0x38B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x7E1 JUMPI PUSH2 0x7E0 PUSH2 0x733 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xD7 SHL PUSH30 0x825AD304ACAE86494862EE3427A8F874CDB7442645BF1FEA1C6C041F6473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "505:1422:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:498;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;743:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;632;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1492:433;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;854:498;983:4;999:24;1034:7;:17;1042:8;1034:17;;;;;;;;;;;;;;;;;;;;;999:53;;1062:13;1078:1;1062:17;;1089:8;:17;;:24;1107:5;1089:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:12;1123:37;;;1182:4;1201:10;1225:8;1247:6;1123:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1293:31;1307:8;1317:6;1293:13;:31::i;:::-;1341:4;1334:11;;;;854:498;;;;;:::o;743:105::-;798:7;824;:17;832:8;824:17;;;;;;;;;;;;817:24;;743:105;;;:::o;632:::-;687:7;713;:17;721:8;713:17;;;;;;;;;;;;;;;;;;;;;706:24;;632:105;;;:::o;1492:433::-;1663:6;1695:4;1681:7;:11;1689:2;1681:11;;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;1737:5;1723:7;:11;1731:2;1723:11;;;;;;;;;;;;:19;;;;:::i;:::-;1709:7;:11;1717:2;1709:11;;;;;;;;;;;:33;;;;1795:109;1752:166;;1492:433;;;;;;;;:::o;1358:128::-;1473:6;1453:7;:17;1461:8;1453:17;;;;;;;;;;;;:26;;;;:::i;:::-;1433:7;:17;1441:8;1433:17;;;;;;;;;;;:46;;;;1358:128;;:::o;88:117:9:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:90::-;1856:7;1899:5;1892:13;1885:21;1874:32;;1822:90;;;:::o;1918:109::-;1999:21;2014:5;1999:21;:::i;:::-;1994:3;1987:34;1918:109;;:::o;2033:210::-;2120:4;2158:2;2147:9;2143:18;2135:26;;2171:65;2233:1;2222:9;2218:17;2209:6;2171:65;:::i;:::-;2033:210;;;;:::o;2249:329::-;2308:6;2357:2;2345:9;2336:7;2332:23;2328:32;2325:119;;;2363:79;;:::i;:::-;2325:119;2483:1;2508:53;2553:7;2544:6;2533:9;2529:22;2508:53;:::i;:::-;2498:63;;2454:117;2249:329;;;;:::o;2584:118::-;2671:24;2689:5;2671:24;:::i;:::-;2666:3;2659:37;2584:118;;:::o;2708:222::-;2801:4;2839:2;2828:9;2824:18;2816:26;;2852:71;2920:1;2909:9;2905:17;2896:6;2852:71;:::i;:::-;2708:222;;;;:::o;2936:118::-;3023:24;3041:5;3023:24;:::i;:::-;3018:3;3011:37;2936:118;;:::o;3060:222::-;3153:4;3191:2;3180:9;3176:18;3168:26;;3204:71;3272:1;3261:9;3257:17;3248:6;3204:71;:::i;:::-;3060:222;;;;:::o;3288:117::-;3397:1;3394;3387:12;3411:117;3520:1;3517;3510:12;3534:117;3643:1;3640;3633:12;3670:552;3727:8;3737:6;3787:3;3780:4;3772:6;3768:17;3764:27;3754:122;;3795:79;;:::i;:::-;3754:122;3908:6;3895:20;3885:30;;3938:18;3930:6;3927:30;3924:117;;;3960:79;;:::i;:::-;3924:117;4074:4;4066:6;4062:17;4050:29;;4128:3;4120:4;4112:6;4108:17;4098:8;4094:32;4091:41;4088:128;;;4135:79;;:::i;:::-;4088:128;3670:552;;;;;:::o;4228:1109::-;4334:6;4342;4350;4358;4366;4374;4423:3;4411:9;4402:7;4398:23;4394:33;4391:120;;;4430:79;;:::i;:::-;4391:120;4550:1;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4521:117;4677:2;4703:53;4748:7;4739:6;4728:9;4724:22;4703:53;:::i;:::-;4693:63;;4648:118;4805:2;4831:53;4876:7;4867:6;4856:9;4852:22;4831:53;:::i;:::-;4821:63;;4776:118;4933:2;4959:53;5004:7;4995:6;4984:9;4980:22;4959:53;:::i;:::-;4949:63;;4904:118;5089:3;5078:9;5074:19;5061:33;5121:18;5113:6;5110:30;5107:117;;;5143:79;;:::i;:::-;5107:117;5256:64;5312:7;5303:6;5292:9;5288:22;5256:64;:::i;:::-;5238:82;;;;5032:298;4228:1109;;;;;;;;:::o;5343:149::-;5379:7;5419:66;5412:5;5408:78;5397:89;;5343:149;;;:::o;5498:115::-;5583:23;5600:5;5583:23;:::i;:::-;5578:3;5571:36;5498:115;;:::o;5619:218::-;5710:4;5748:2;5737:9;5733:18;5725:26;;5761:69;5827:1;5816:9;5812:17;5803:6;5761:69;:::i;:::-;5619:218;;;;:::o;5843:168::-;5926:11;5960:6;5955:3;5948:19;6000:4;5995:3;5991:14;5976:29;;5843:168;;;;:::o;6017:154::-;6157:6;6153:1;6145:6;6141:14;6134:30;6017:154;:::o;6177:363::-;6318:3;6339:65;6402:1;6397:3;6339:65;:::i;:::-;6332:72;;6413:93;6502:3;6413:93;:::i;:::-;6531:2;6526:3;6522:12;6515:19;;6177:363;;;:::o;6546:859::-;6823:4;6861:3;6850:9;6846:19;6838:27;;6875:71;6943:1;6932:9;6928:17;6919:6;6875:71;:::i;:::-;6956:72;7024:2;7013:9;7009:18;7000:6;6956:72;:::i;:::-;7038;7106:2;7095:9;7091:18;7082:6;7038:72;:::i;:::-;7120;7188:2;7177:9;7173:18;7164:6;7120:72;:::i;:::-;7240:9;7234:4;7230:20;7224:3;7213:9;7209:19;7202:49;7268:130;7393:4;7268:130;:::i;:::-;7260:138;;6546:859;;;;;;;:::o;7411:180::-;7459:77;7456:1;7449:88;7556:4;7553:1;7546:15;7580:4;7577:1;7570:15;7597:305;7637:3;7656:20;7674:1;7656:20;:::i;:::-;7651:25;;7690:20;7708:1;7690:20;:::i;:::-;7685:25;;7844:1;7776:66;7772:74;7769:1;7766:81;7763:107;;;7850:18;;:::i;:::-;7763:107;7894:1;7891;7887:9;7880:16;;7597:305;;;;:::o;7908:191::-;7948:4;7968:20;7986:1;7968:20;:::i;:::-;7963:25;;8002:20;8020:1;8002:20;:::i;:::-;7997:25;;8041:1;8038;8035:8;8032:34;;;8046:18;;:::i;:::-;8032:34;8091:1;8088;8084:9;8076:17;;7908:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "416400",
								"executionCost": "455",
								"totalCost": "416855"
							},
							"external": {
								"amount(uint256)": "infinite",
								"buyCoupon(uint256,uint256,address)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"seller(uint256)": "2887"
							},
							"internal": {
								"_reduceAmount(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 505,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 505,
									"end": 1927,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aad71b7d825ad304acae86494862ee3427a8f874cdb7442645bf1fea1c6c041f64736f6c634300080a0033",
									".code": [
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "1EDF85C"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "8B0D0258"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "AACDFE6F"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "F23A6E61"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 1927,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 983,
											"end": 987,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1023,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1050,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1051,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 999,
											"end": 1052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 999,
											"end": 1052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1062,
											"end": 1079,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1079,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1106,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1106,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 1107,
											"end": 1112,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "PUSH",
											"source": 8,
											"value": "F242432A"
										},
										{
											"begin": 1182,
											"end": 1186,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1211,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1253,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1315,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1293,
											"end": 1324,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1324,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1345,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 854,
											"end": 1352,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 798,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 831,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 824,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 824,
											"end": 841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 824,
											"end": 841,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 824,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 841,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 824,
											"end": 841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 824,
											"end": 841,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 824,
											"end": 841,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 824,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 841,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 824,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 841,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 824,
											"end": 841,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 743,
											"end": 848,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 687,
											"end": 694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 720,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 729,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 713,
											"end": 730,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 730,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 706,
											"end": 730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 706,
											"end": 730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 737,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1699,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1689,
											"end": 1691,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1742,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1733,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1723,
											"end": 1742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1723,
											"end": 1742,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1723,
											"end": 1742,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1723,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1716,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1719,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1904,
											"name": "PUSH",
											"source": 8,
											"value": "F23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97"
										},
										{
											"begin": 1752,
											"end": 1918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1925,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1358,
											"end": 1486,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1358,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1473,
											"end": 1479,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1460,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1469,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1453,
											"end": 1479,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1453,
											"end": 1479,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1453,
											"end": 1479,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1453,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1440,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1449,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1450,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1479,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1479,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1486,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 727,
											"end": 734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 809,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 756,
											"end": 810,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 745,
											"end": 810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 745,
											"end": 810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 690,
											"end": 816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 822,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 822,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 859,
											"end": 866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 877,
											"end": 912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 877,
											"end": 912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 822,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 822,
											"end": 918,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1327,
											"end": 1336,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 1553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1904,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1906,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2027,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1918,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 1997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 2027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 2027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 2027,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2147,
											"end": 2156,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2135,
											"end": 2161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2135,
											"end": 2161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2231,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2218,
											"end": 2235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2209,
											"end": 2215,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2171,
											"end": 2236,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2171,
											"end": 2236,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2171,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2249,
											"end": 2578,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2249,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2359,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2355,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2360,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2325,
											"end": 2444,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2325,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2325,
											"end": 2444,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2363,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2363,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2363,
											"end": 2442,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2442,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2363,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2325,
											"end": 2444,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2325,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2553,
											"end": 2560,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2533,
											"end": 2542,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2529,
											"end": 2551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2508,
											"end": 2561,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2508,
											"end": 2561,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2508,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2561,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2578,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2578,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2578,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2689,
											"end": 2694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2659,
											"end": 2696,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2828,
											"end": 2837,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2816,
											"end": 2842,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2816,
											"end": 2842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2852,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2918,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2896,
											"end": 2902,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2852,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2852,
											"end": 2923,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2852,
											"end": 2923,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2852,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2930,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3041,
											"end": 3046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 3023,
											"end": 3047,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3023,
											"end": 3047,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3023,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3021,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3048,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3060,
											"end": 3282,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3060,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3153,
											"end": 3157,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3193,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3180,
											"end": 3189,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3176,
											"end": 3194,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3168,
											"end": 3194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3168,
											"end": 3194,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 3272,
											"end": 3273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3204,
											"end": 3275,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3204,
											"end": 3275,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 3204,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3282,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3282,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3288,
											"end": 3405,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3288,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3397,
											"end": 3398,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3387,
											"end": 3399,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3411,
											"end": 3528,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3411,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3651,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3534,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3641,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 4222,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3670,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3727,
											"end": 3735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3790,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3780,
											"end": 3784,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3785,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 3754,
											"end": 3876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3795,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3795,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3795,
											"end": 3874,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3795,
											"end": 3874,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3795,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3876,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 3754,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 3914,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3915,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3936,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3927,
											"end": 3957,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 4041,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3924,
											"end": 4041,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3960,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3960,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3960,
											"end": 4039,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3960,
											"end": 4039,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3960,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 4041,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3924,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4074,
											"end": 4078,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4050,
											"end": 4079,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4050,
											"end": 4079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4131,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4120,
											"end": 4124,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4125,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4098,
											"end": 4106,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4126,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4132,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4088,
											"end": 4216,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4088,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4088,
											"end": 4216,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4135,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4135,
											"end": 4214,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4135,
											"end": 4214,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4135,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4088,
											"end": 4216,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4088,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 4222,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 4222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 4222,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 4222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 4222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 4222,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4334,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4348,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4350,
											"end": 4356,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4366,
											"end": 4372,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4411,
											"end": 4420,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4409,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 4421,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4394,
											"end": 4427,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4511,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 4391,
											"end": 4511,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4511,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 4391,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4748,
											"end": 4755,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4728,
											"end": 4737,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4703,
											"end": 4756,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4703,
											"end": 4756,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 4703,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4756,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4693,
											"end": 4756,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4805,
											"end": 4807,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4831,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 4876,
											"end": 4883,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4852,
											"end": 4874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4831,
											"end": 4884,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4831,
											"end": 4884,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 4831,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4884,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4776,
											"end": 4894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4933,
											"end": 4935,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4959,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 5004,
											"end": 5011,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4984,
											"end": 4993,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4959,
											"end": 5012,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4959,
											"end": 5012,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 4959,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5012,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 5012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5089,
											"end": 5092,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5078,
											"end": 5087,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5074,
											"end": 5093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5094,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5110,
											"end": 5140,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5107,
											"end": 5224,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5107,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 5107,
											"end": 5224,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5143,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 5143,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5143,
											"end": 5222,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5143,
											"end": 5222,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 5143,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5107,
											"end": 5224,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 5107,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5256,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5312,
											"end": 5319,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5292,
											"end": 5301,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5256,
											"end": 5320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5256,
											"end": 5320,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5256,
											"end": 5320,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5256,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5238,
											"end": 5320,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5238,
											"end": 5320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5238,
											"end": 5320,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5238,
											"end": 5320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5330,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4228,
											"end": 5337,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5343,
											"end": 5492,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5343,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5379,
											"end": 5386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5485,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5412,
											"end": 5417,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5486,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5397,
											"end": 5486,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5397,
											"end": 5486,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5343,
											"end": 5492,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5343,
											"end": 5492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5343,
											"end": 5492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5343,
											"end": 5492,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5498,
											"end": 5613,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5498,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5583,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5600,
											"end": 5605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5583,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5583,
											"end": 5606,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5583,
											"end": 5606,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5583,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 5581,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5571,
											"end": 5607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5613,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5619,
											"end": 5837,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 5619,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5748,
											"end": 5750,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5725,
											"end": 5751,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5725,
											"end": 5751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5761,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5827,
											"end": 5828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5812,
											"end": 5829,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5803,
											"end": 5809,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5761,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5761,
											"end": 5830,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5761,
											"end": 5830,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5761,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5619,
											"end": 5837,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5619,
											"end": 5837,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5619,
											"end": 5837,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5619,
											"end": 5837,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5619,
											"end": 5837,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5843,
											"end": 6011,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5843,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5960,
											"end": 5966,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5955,
											"end": 5958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5948,
											"end": 5967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6000,
											"end": 6004,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5991,
											"end": 6005,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 6005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5976,
											"end": 6005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5843,
											"end": 6011,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5843,
											"end": 6011,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5843,
											"end": 6011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5843,
											"end": 6011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5843,
											"end": 6011,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6017,
											"end": 6171,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6017,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6157,
											"end": 6163,
											"name": "PUSH",
											"source": 9,
											"value": "3078303000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6153,
											"end": 6154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6141,
											"end": 6155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6164,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6017,
											"end": 6171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6017,
											"end": 6171,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6177,
											"end": 6540,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 6177,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6402,
											"end": 6403,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6397,
											"end": 6400,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6339,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 6339,
											"end": 6404,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6339,
											"end": 6404,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6339,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6404,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6413,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6502,
											"end": 6505,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6413,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6413,
											"end": 6506,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6413,
											"end": 6506,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6413,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6531,
											"end": 6533,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6526,
											"end": 6529,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6540,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6540,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6546,
											"end": 7405,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 6546,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6823,
											"end": 6827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6864,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6846,
											"end": 6865,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6838,
											"end": 6865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6838,
											"end": 6865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 6943,
											"end": 6944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6932,
											"end": 6941,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6928,
											"end": 6945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6919,
											"end": 6925,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 6875,
											"end": 6946,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6875,
											"end": 6946,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 6875,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6956,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7024,
											"end": 7026,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7013,
											"end": 7022,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7006,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6956,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 6956,
											"end": 7028,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6956,
											"end": 7028,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 6956,
											"end": 7028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7106,
											"end": 7108,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7095,
											"end": 7104,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 7038,
											"end": 7110,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7038,
											"end": 7110,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7038,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 7188,
											"end": 7190,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7177,
											"end": 7186,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7173,
											"end": 7191,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7164,
											"end": 7170,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 7120,
											"end": 7192,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7120,
											"end": 7192,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 7120,
											"end": 7192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7250,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7224,
											"end": 7227,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7213,
											"end": 7222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7202,
											"end": 7251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7268,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 7393,
											"end": 7397,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7268,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 7268,
											"end": 7398,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7268,
											"end": 7398,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 7268,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7398,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6546,
											"end": 7405,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6546,
											"end": 7405,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6546,
											"end": 7405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6546,
											"end": 7405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6546,
											"end": 7405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6546,
											"end": 7405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6546,
											"end": 7405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6546,
											"end": 7405,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7411,
											"end": 7591,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 7411,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7459,
											"end": 7536,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7456,
											"end": 7457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7556,
											"end": 7560,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7553,
											"end": 7554,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7546,
											"end": 7561,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7580,
											"end": 7584,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7577,
											"end": 7578,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7570,
											"end": 7585,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7902,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 7597,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7637,
											"end": 7640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7656,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 7674,
											"end": 7675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 7656,
											"end": 7676,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7656,
											"end": 7676,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 7656,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 7708,
											"end": 7709,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7690,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 7690,
											"end": 7710,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7690,
											"end": 7710,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 7690,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7685,
											"end": 7710,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7685,
											"end": 7710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7845,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7842,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7772,
											"end": 7846,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7769,
											"end": 7770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7847,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7763,
											"end": 7870,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7763,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 7763,
											"end": 7870,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7763,
											"end": 7870,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 7763,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7895,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7891,
											"end": 7892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7887,
											"end": 7896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7902,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7902,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7902,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7908,
											"end": 8099,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 7908,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7948,
											"end": 7952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7968,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 7986,
											"end": 7987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 7968,
											"end": 7988,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7968,
											"end": 7988,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 7968,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7963,
											"end": 7988,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7963,
											"end": 7988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8002,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 8020,
											"end": 8021,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8002,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 8002,
											"end": 8022,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8002,
											"end": 8022,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 8002,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7997,
											"end": 8022,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7997,
											"end": 8022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8041,
											"end": 8042,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8038,
											"end": 8039,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8035,
											"end": 8043,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8046,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 8046,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 8046,
											"end": 8064,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8046,
											"end": 8064,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 8046,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 8032,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8092,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8088,
											"end": 8089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8084,
											"end": 8093,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8076,
											"end": 8093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8076,
											"end": 8093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 8099,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 8099,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 8099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 8099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 8099,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"amount(uint256)": "8b0d0258",
							"buyCoupon(uint256,uint256,address)": "01edf85c",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"seller(uint256)": "aacdfe6f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"discount\",\"type\":\"uint256\"}],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"discount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ContractAddr\",\"type\":\"address\"}],\"name\":\"buyCoupon\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"discount\",\"type\":\"uint256\"}],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CouponMarket.sol\":\"CouponMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d\",\"dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/CouponMarket.sol\":{\"keccak256\":\"0x573754fedbb2c8274a2ba907c9943d8558ba7fc81f98da2eb5582f30e9fcfe49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2a9efee3cd2452b0940be036302b89ae7ad383c713dc63b3e3334940d43eb9\",\"dweb:/ipfs/QmVGR45LcQvtx5HLB4sWbLTck53biE6GCj5kzWgyW6LLvF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1784,
								"contract": "contracts/CouponMarket.sol:CouponMarket",
								"label": "_seller",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1788,
								"contract": "contracts/CouponMarket.sol:CouponMarket",
								"label": "_amount",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"others": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CouponMarket.sol\":\"others\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d\",\"dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/CouponMarket.sol\":{\"keccak256\":\"0x573754fedbb2c8274a2ba907c9943d8558ba7fc81f98da2eb5582f30e9fcfe49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad2a9efee3cd2452b0940be036302b89ae7ad383c713dc63b3e3334940d43eb9\",\"dweb:/ipfs/QmVGR45LcQvtx5HLB4sWbLTck53biE6GCj5kzWgyW6LLvF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/CouponMarket.sol:37:9:\n   |\n37 |         uint256 amount,\n   |         ^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/CouponMarket.sol:31:5:\n   |\n31 |     function amount(uint256 discount) public view returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 848,
						"file": "contracts/CouponMarket.sol",
						"message": "The shadowed declaration is here:",
						"start": 743
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 922,
					"file": "contracts/CouponMarket.sol",
					"start": 908
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/CouponMarket.sol:54:46:\n   |\n54 |     function _reduceAmount(uint256 discount, uint256 amount) private {\n   |                                              ^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/CouponMarket.sol:31:5:\n   |\n31 |     function amount(uint256 discount) public view returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 848,
						"file": "contracts/CouponMarket.sol",
						"message": "The shadowed declaration is here:",
						"start": 743
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1413,
					"file": "contracts/CouponMarket.sol",
					"start": 1399
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/CouponMarket.sol:59:9:\n   |\n59 |         address operator,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1544,
					"file": "contracts/CouponMarket.sol",
					"start": 1528
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/CouponMarket.sol:63:9:\n   |\n63 |         bytes calldata data\n   |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1638,
					"file": "contracts/CouponMarket.sol",
					"start": 1619
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1695
						],
						"Context": [
							1717
						],
						"ERC1155": [
							1222
						],
						"ERC165": [
							1741
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1400
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1753
						]
					},
					"id": 1223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1345,
							"src": "134:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1386,
							"src": "159:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1401,
							"src": "192:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1696,
							"src": "239:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1718,
							"src": "273:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1742,
							"src": "307:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1717,
										"src": "590:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "590:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1741,
										"src": "599:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "599:6:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1344,
										"src": "607:8:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "607:8:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1400,
										"src": "617:19:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "617:19:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "355:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1222,
							"linearizedBaseContracts": [
								1222,
								1400,
								1344,
								1741,
								1753,
								1717
							],
							"name": "ERC1155",
							"nameLocation": "579:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 19,
									"libraryName": {
										"id": 17,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1695,
										"src": "649:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "643:26:0",
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "780:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "724:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "724:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "751:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "743:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "899:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "846:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 30,
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "854:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "846:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 29,
											"keyType": {
												"id": 27,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "865:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 28,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "884:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1053:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "1038:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 32,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1038:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1139:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 40,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1157:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 39,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1149:13:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1064:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1133:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1119:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:20:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:0:0"
									},
									"scope": 1222,
									"src": "1107:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1740,
										1752
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1344:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1373:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 57,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "1393:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1344_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1344_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 56,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1388:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1388:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1344",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1388:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1373:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 61,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1430:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 63,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "1450:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1400_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1400_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 62,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1445:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1445:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1400",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1445:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1430:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1373:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 70,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1522:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 68,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1498:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1222_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1740,
															"src": "1498:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1498:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1373:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 54,
												"id": 73,
												"nodeType": "Return",
												"src": "1354:180:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1175:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1245:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 51,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 49,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1741,
												"src": "1312:6:0"
											},
											{
												"id": 50,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1753,
												"src": "1320:7:0"
											}
										],
										"src": "1303:25:0"
									},
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1270:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1263:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 46,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1338:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:0"
									},
									"scope": 1222,
									"src": "1236:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2015:28:0",
										"statements": [
											{
												"expression": {
													"id": 84,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "2032:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 83,
												"id": 85,
												"nodeType": "Return",
												"src": "2025:11:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1547:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1949:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 80,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1982:8:0"
									},
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1953:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:9:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2000:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 81,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2000:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:15:0"
									},
									"scope": 1222,
									"src": "1940:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1282
									],
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2280:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 99,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2317:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2309:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2309:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2298:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2290:76:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 108,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2383:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 110,
														"indexExpression": {
															"id": 109,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2393:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2383:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 112,
													"indexExpression": {
														"id": 111,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "2397:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2383:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 97,
												"id": 113,
												"nodeType": "Return",
												"src": "2376:29:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2049:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 94,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2253:8:0"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:29:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:0"
									},
									"scope": 1222,
									"src": "2185:227:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2742:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 130,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2760:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2760:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 132,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2779:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2779:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2760:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2752:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2752:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2752:83:0"
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2863:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "2846:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 140,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2846:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"nodeType": "ArrayTypeName",
															"src": "2846:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 146,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2893:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2893:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2879:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 143,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2883:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 144,
															"nodeType": "ArrayTypeName",
															"src": "2883:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2879:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2846:63:0"
											},
											{
												"body": {
													"id": 174,
													"nodeType": "Block",
													"src": "2966:74:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 161,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2980:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 163,
																	"indexExpression": {
																		"id": 162,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2994:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2980:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 165,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "3009:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 167,
																			"indexExpression": {
																				"id": 166,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3018:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3009:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 168,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 122,
																				"src": "3022:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 170,
																			"indexExpression": {
																				"id": 169,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "3026:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3022:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 164,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "2999:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2999:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2980:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2980:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 154,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2940:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 155,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2944:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2944:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2940:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2933:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 175,
															"src": "2925:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2925:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 153,
													"initialValue": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2937:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2925:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2961:3:0",
														"subExpression": {
															"id": 158,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2963:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ExpressionStatement",
													"src": "2961:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2920:120:0"
											},
											{
												"expression": {
													"id": 176,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "3057:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 128,
												"id": 177,
												"nodeType": "Return",
												"src": "3050:20:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2418:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2578:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2694:8:0"
									},
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2610:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2593:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2593:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 118,
													"nodeType": "ArrayTypeName",
													"src": "2593:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2637:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2620:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2620:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 121,
													"nodeType": "ArrayTypeName",
													"src": "2620:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2592:49:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2720:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 125,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 126,
													"nodeType": "ArrayTypeName",
													"src": "2720:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2719:18:0"
									},
									"scope": 1222,
									"src": "2569:508:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1303
									],
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "3229:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 189,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1707,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "3272:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3282:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 188,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "3239:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3239:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3239:52:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3083:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3154:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3220:8:0"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3180:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3172:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3195:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "3190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:33:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3229:0:0"
									},
									"scope": 1222,
									"src": "3145:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "3470:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 207,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "3487:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 209,
														"indexExpression": {
															"id": 208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3487:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 211,
													"indexExpression": {
														"id": 210,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3515:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3487:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 206,
												"id": 212,
												"nodeType": "Return",
												"src": "3480:44:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "3304:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3374:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3446:8:0"
									},
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3391:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3416:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3408:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3390:35:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3464:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3464:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:6:0"
									},
									"scope": 1222,
									"src": "3365:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "3767:226:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 230,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "3798:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 231,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "3806:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3806:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3798:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "3839:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 236,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1707,
																			"src": "3845:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3845:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 234,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "3822:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3822:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3798:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3872:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															},
															"value": "ERC1155: caller is not token owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3777:154:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "3777:154:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3959:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "3965:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3969:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3973:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3981:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 243,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "3941:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3941:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "3941:45:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3537:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3607:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3758:8:0"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3641:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3633:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3663:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3655:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3683:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3675:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3732:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "3719:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:119:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3767:0:0"
									},
									"scope": 1222,
									"src": "3598:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4259:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 270,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "4290:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 271,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "4298:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4298:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4290:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 275,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "4331:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1707,
																			"src": "4337:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4337:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 274,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4314:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4314:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4290:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4364:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															},
															"value": "ERC1155: caller is not token owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4269:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4269:154:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "4269:154:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4456:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4462:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4466:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 287,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4471:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 288,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 283,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4433:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4433:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "4433:52:0"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "3999:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4074:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 267,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4250:8:0"
									},
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4113:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4105:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4135:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4127:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4164:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4147:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "4147:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4194:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4177:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "4177:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4211:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4095:139:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4259:0:0"
									},
									"scope": 1222,
									"src": "4065:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "5105:784:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "5123:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5137:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5129:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5129:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5129:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5123:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5141:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5115:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5115:66:0"
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5200:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5192:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5192:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "5211:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5211:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5192:31:0"
											},
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5250:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5233:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 323,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5233:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 324,
															"nodeType": "ArrayTypeName",
															"src": "5233:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5274:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5256:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5256:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5233:44:0"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5304:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5287:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 332,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5287:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 333,
															"nodeType": "ArrayTypeName",
															"src": "5287:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"arguments": [
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5332:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5314:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5287:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5371:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5381:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5387:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5391:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 344,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 345,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5405:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 339,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "5350:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "5350:60:0"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5429:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "5421:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5421:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 350,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "5443:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 352,
														"indexExpression": {
															"id": 351,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5453:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5443:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5457:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5443:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5421:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "5480:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 358,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "5495:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5480:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5472:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "5472:76:0"
											},
											{
												"id": 373,
												"nodeType": "UncheckedBlock",
												"src": "5558:77:0",
												"statements": [
													{
														"expression": {
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 363,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "5582:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 366,
																	"indexExpression": {
																		"id": 364,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "5592:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5582:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 367,
																"indexExpression": {
																	"id": 365,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "5596:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5582:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 368,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "5604:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 369,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5618:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5604:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5582:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 372,
														"nodeType": "ExpressionStatement",
														"src": "5582:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 374,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "5644:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 377,
															"indexExpression": {
																"id": 375,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "5654:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5644:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 378,
														"indexExpression": {
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5658:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5644:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 379,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5665:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5644:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "5644:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 383,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5702:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5712:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5718:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5722:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 387,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5726:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 382,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "5687:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "5682:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5764:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5774:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5780:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5784:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 395,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5789:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 396,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 390,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "5744:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5744:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "5744:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5845:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "5855:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "5861:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "5865:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "5869:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "5877:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 399,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "5814:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5814:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "5814:68:0"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4498:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4951:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4986:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4978:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5008:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5000:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5028:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5020:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5048:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5040:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "5064:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5064:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:119:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5105:0:0"
									},
									"scope": 1222,
									"src": "4942:947:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "6423:927:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 426,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6441:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6441:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 428,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "6455:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6455:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6441:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6471:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6433:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6433:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6433:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 435,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "6532:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6546:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6538:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 436,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6538:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6538:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6532:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6550:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6524:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "6524:66:0"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6609:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "6601:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 444,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6601:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 446,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "6620:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6620:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6601:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6664:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6674:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6680:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6684:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 454,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "6689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 455,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6698:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 449,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "6643:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6643:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "6643:60:0"
											},
											{
												"body": {
													"id": 515,
													"nodeType": "Block",
													"src": "6755:370:0",
													"statements": [
														{
															"assignments": [
																470
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 470,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6777:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6769:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6769:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 474,
															"initialValue": {
																"baseExpression": {
																	"id": 471,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6782:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 473,
																"indexExpression": {
																	"id": 472,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6786:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6782:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6769:19:0"
														},
														{
															"assignments": [
																476
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 476,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6810:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6802:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 475,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6802:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 480,
															"initialValue": {
																"baseExpression": {
																	"id": 477,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "6819:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 479,
																"indexExpression": {
																	"id": 478,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "6827:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6819:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6802:27:0"
														},
														{
															"assignments": [
																482
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 482,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6852:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 515,
																	"src": "6844:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 481,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6844:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 488,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 483,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "6866:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 485,
																	"indexExpression": {
																		"id": 484,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "6876:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6866:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"id": 486,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "6880:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6866:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6844:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 482,
																			"src": "6907:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 491,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6922:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6907:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6930:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 489,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6899:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6899:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 495,
															"nodeType": "ExpressionStatement",
															"src": "6899:76:0"
														},
														{
															"id": 506,
															"nodeType": "UncheckedBlock",
															"src": "6989:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 496,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "7017:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 499,
																				"indexExpression": {
																					"id": 497,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 470,
																					"src": "7027:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7017:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 500,
																			"indexExpression": {
																				"id": 498,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 412,
																				"src": "7031:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7017:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 501,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 482,
																				"src": "7039:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 502,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "7053:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7039:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7017:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"nodeType": "ExpressionStatement",
																	"src": "7017:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 507,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "7087:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 510,
																		"indexExpression": {
																			"id": 508,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "7097:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7087:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 511,
																	"indexExpression": {
																		"id": 509,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "7101:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7087:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 512,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "7108:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7087:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 514,
															"nodeType": "ExpressionStatement",
															"src": "7087:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 462,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "6734:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6738:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6738:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6734:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"initializationExpression": {
													"assignments": [
														459
													],
													"declarations": [
														{
															"constant": false,
															"id": 459,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6727:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 516,
															"src": "6719:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 458,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6719:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 461,
													"initialValue": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6731:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6719:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6750:3:0",
														"subExpression": {
															"id": 466,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "6752:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 468,
													"nodeType": "ExpressionStatement",
													"src": "6750:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6714:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 518,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7154:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7164:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7170:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7174:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 522,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 517,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "7140:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7140:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "7135:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7218:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7228:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7234:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7238:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 530,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7243:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 525,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "7198:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7198:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "7198:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "7304:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "7314:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7320:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7324:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 539,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "7329:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 540,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "7338:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "7268:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "7268:75:0"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "5895:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6244:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6284:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6276:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6306:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6298:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6335:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6318:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 415,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6318:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 416,
													"nodeType": "ArrayTypeName",
													"src": "6318:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6365:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6348:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 418,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 419,
													"nodeType": "ArrayTypeName",
													"src": "6348:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6395:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "6382:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6382:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:139:0"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6423:0:0"
									},
									"scope": 1222,
									"src": "6235:1115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "8229:30:0",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "8239:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 551,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "8246:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8239:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "8239:13:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "7356:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8182:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8204:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "8190:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8190:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8189:22:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8229:0:0"
									},
									"scope": 1222,
									"src": "8173:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "8761:580:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 568,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "8779:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8793:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8785:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 569,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8785:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8785:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8779:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8797:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8771:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8771:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "8771:62:0"
											},
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8852:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8844:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8844:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 579,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "8863:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8863:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8844:31:0"
											},
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8902:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8885:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 584,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8885:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 585,
															"nodeType": "ArrayTypeName",
															"src": "8885:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"arguments": [
														{
															"id": 588,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "8926:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "8908:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8908:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8885:44:0"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8956:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "8939:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 593,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8939:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 594,
															"nodeType": "ArrayTypeName",
															"src": "8939:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"id": 597,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "8984:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "8966:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8966:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8939:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9023:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9041:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9033:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9033:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9033:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9045:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9049:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 608,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9054:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 609,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9063:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 600,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9002:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9002:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "9002:66:0"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 612,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "9079:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 613,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "9089:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9079:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 616,
														"indexExpression": {
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9093:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9079:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 617,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "9100:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9079:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "9079:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 621,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9136:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9154:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9146:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 622,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9146:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9146:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9158:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9162:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 628,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9166:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 620,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "9121:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9121:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "EmitStatement",
												"src": "9116:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9204:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9222:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9214:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 633,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9214:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9214:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9226:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "9230:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 639,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "9235:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 640,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9244:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 631,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "9184:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9184:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "9184:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9291:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9309:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9301:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9301:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9301:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "9313:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 650,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "9317:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 651,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "9321:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 652,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "9329:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 643,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9260:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9260:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "9260:74:0"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "8265:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8641:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8664:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8656:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8684:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8676:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8704:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8696:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8733:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "8720:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8720:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:97:0"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8761:0:0"
									},
									"scope": 1222,
									"src": "8632:709:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "9885:637:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "9903:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9917:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9909:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 672,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9909:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9909:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9903:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9921:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9895:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9895:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9895:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 681,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "9975:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9975:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 683,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "9989:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9989:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9975:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10005:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9967:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9967:81:0"
											},
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10067:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "10059:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10059:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 691,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "10078:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10078:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10059:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10122:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10140:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10132:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10132:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10132:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10144:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10148:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 702,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 703,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 694,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "10101:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10101:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "10101:66:0"
											},
											{
												"body": {
													"id": 729,
													"nodeType": "Block",
													"src": "10219:60:0",
													"statements": [
														{
															"expression": {
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 717,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "10233:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 722,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 718,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "10243:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 720,
																			"indexExpression": {
																				"id": 719,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "10247:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10243:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10233:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 723,
																	"indexExpression": {
																		"id": 721,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "10251:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10233:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 724,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "10258:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"indexExpression": {
																		"id": 725,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "10266:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10258:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10233:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ExpressionStatement",
															"src": "10233:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "10198:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 711,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10202:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10202:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10198:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 730,
												"initializationExpression": {
													"assignments": [
														707
													],
													"declarations": [
														{
															"constant": false,
															"id": 707,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10191:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 730,
															"src": "10183:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 706,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10183:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 709,
													"initialValue": {
														"hexValue": "30",
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10195:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10183:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10214:3:0",
														"subExpression": {
															"id": 714,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10214:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 716,
													"nodeType": "ExpressionStatement",
													"src": "10214:3:0"
												},
												"nodeType": "ForStatement",
												"src": "10178:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 732,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10308:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10326:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10318:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 733,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10318:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10318:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10330:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10334:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 731,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "10294:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10294:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "EmitStatement",
												"src": "10289:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 743,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10378:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10396:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10388:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 744,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10388:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10388:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10400:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10404:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 750,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10418:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 742,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "10358:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10358:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "10358:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "10470:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10488:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10480:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 756,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10480:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10480:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10492:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "10496:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 762,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 763,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10510:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 754,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "10434:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10434:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10434:81:0"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "9347:379:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9740:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9768:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9760:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9797:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9780:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 660,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 661,
													"nodeType": "ArrayTypeName",
													"src": "9780:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9810:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 663,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 664,
													"nodeType": "ArrayTypeName",
													"src": "9810:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9857:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9844:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9844:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9750:117:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9885:0:0"
									},
									"scope": 1222,
									"src": "9731:791:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "10912:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "10930:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10946:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10938:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10938:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10938:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10930:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10950:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10922:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10922:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "10922:66:0"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11007:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "10999:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 787,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10999:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 789,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "11018:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11018:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10999:31:0"
											},
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11057:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11040:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 794,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11040:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 795,
															"nodeType": "ArrayTypeName",
															"src": "11040:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"arguments": [
														{
															"id": 798,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11081:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 797,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "11063:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11063:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11040:44:0"
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11111:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11094:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 803,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11094:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ArrayTypeName",
															"src": "11094:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11139:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "11121:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11121:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11094:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11178:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 812,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11188:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11202:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11194:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 813,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11194:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11194:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11206:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 818,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11211:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11220:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 810,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "11157:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11157:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "11157:66:0"
											},
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11242:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "11234:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11234:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 824,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "11256:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 826,
														"indexExpression": {
															"id": 825,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11266:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11256:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 828,
													"indexExpression": {
														"id": 827,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "11270:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11256:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11234:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 831,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "11293:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 832,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "11308:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11293:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11316:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11285:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11285:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "11285:70:0"
											},
											{
												"id": 847,
												"nodeType": "UncheckedBlock",
												"src": "11365:77:0",
												"statements": [
													{
														"expression": {
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 837,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "11389:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 840,
																	"indexExpression": {
																		"id": 838,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "11399:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11389:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 841,
																"indexExpression": {
																	"id": 839,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "11403:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11389:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 842,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "11411:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 843,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "11425:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11411:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11389:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 846,
														"nodeType": "ExpressionStatement",
														"src": "11389:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 849,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11472:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11482:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11496:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11488:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11488:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11500:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11504:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "11457:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11457:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "EmitStatement",
												"src": "11452:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "11542:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11552:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11566:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 862,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11558:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11558:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11570:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 867,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "11575:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11584:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 859,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "11522:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11522:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "11522:65:0"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10528:275:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10817:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10862:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10854:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10882:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "10874:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10822:72:0"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10912:0:0"
									},
									"scope": 1222,
									"src": "10808:786:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "11962:814:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 885,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "11980:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11996:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11988:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11988:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11988:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11980:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12000:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11972:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "11972:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 895,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "12056:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12056:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 897,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "12070:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12070:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12056:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12086:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12048:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "12048:81:0"
											},
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12148:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "12140:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 903,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12140:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 905,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "12159:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12159:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12140:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12203:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12213:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12227:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12219:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 911,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12219:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12219:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12231:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 916,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12236:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12245:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "12182:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12182:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "12182:66:0"
											},
											{
												"body": {
													"id": 969,
													"nodeType": "Block",
													"src": "12300:323:0",
													"statements": [
														{
															"assignments": [
																932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 932,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12322:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12314:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12314:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 936,
															"initialValue": {
																"baseExpression": {
																	"id": 933,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "12327:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 935,
																"indexExpression": {
																	"id": 934,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "12331:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12327:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12314:19:0"
														},
														{
															"assignments": [
																938
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 938,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12355:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12347:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12347:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 942,
															"initialValue": {
																"baseExpression": {
																	"id": 939,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "12364:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 941,
																"indexExpression": {
																	"id": 940,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "12372:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12364:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12347:27:0"
														},
														{
															"assignments": [
																944
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 944,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12397:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 969,
																	"src": "12389:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 943,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12389:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 950,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 945,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "12411:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 947,
																	"indexExpression": {
																		"id": 946,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "12421:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12411:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 949,
																"indexExpression": {
																	"id": 948,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "12425:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12411:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12389:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 952,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "12452:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 953,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 938,
																			"src": "12467:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12452:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12475:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 951,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12444:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12444:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 957,
															"nodeType": "ExpressionStatement",
															"src": "12444:70:0"
														},
														{
															"id": 968,
															"nodeType": "UncheckedBlock",
															"src": "12528:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 958,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "12556:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 961,
																				"indexExpression": {
																					"id": 959,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 932,
																					"src": "12566:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12556:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 962,
																			"indexExpression": {
																				"id": 960,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "12570:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12556:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 963,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "12578:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 964,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "12592:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12578:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12556:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 967,
																	"nodeType": "ExpressionStatement",
																	"src": "12556:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "12279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 925,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12283:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12283:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12279:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 970,
												"initializationExpression": {
													"assignments": [
														921
													],
													"declarations": [
														{
															"constant": false,
															"id": 921,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12272:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 970,
															"src": "12264:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 920,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12264:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 923,
													"initialValue": {
														"hexValue": "30",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12276:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12264:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12295:3:0",
														"subExpression": {
															"id": 928,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "12295:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 930,
													"nodeType": "ExpressionStatement",
													"src": "12295:3:0"
												},
												"nodeType": "ForStatement",
												"src": "12259:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 972,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12652:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12662:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12676:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12668:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 974,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12668:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12668:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12680:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 979,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12685:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 971,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "12638:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12638:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "EmitStatement",
												"src": "12633:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "12724:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "12734:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12748:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12740:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12740:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12740:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "12752:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 990,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "12757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12766:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 982,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "12704:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12704:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "12704:65:0"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "11600:228:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11842:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11870:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11862:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11901:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11884:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 876,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11884:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 877,
													"nodeType": "ArrayTypeName",
													"src": "11884:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11931:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "11914:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 879,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 880,
													"nodeType": "ArrayTypeName",
													"src": "11914:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11852:92:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11962:0:0"
									},
									"scope": 1222,
									"src": "11833:943:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "13035:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1006,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "13053:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1007,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "13062:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13053:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13072:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13045:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "13045:71:0"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1012,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "13126:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1015,
															"indexExpression": {
																"id": 1013,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "13145:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13126:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1016,
														"indexExpression": {
															"id": 1014,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13152:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13126:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "13164:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13126:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "13126:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1021,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "13202:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "13209:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "13219:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1020,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "13187:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13187:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "EmitStatement",
												"src": "13182:46:0"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "12782:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12957:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12949:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12980:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12972:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13003:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "12998:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12998:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12939:78:0"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13035:0:0"
									},
									"scope": 1222,
									"src": "12912:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "14383:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "13241:925:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14180:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14218:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14210:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14244:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14236:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14266:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14258:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14295:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14278:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1035,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1036,
													"nodeType": "ArrayTypeName",
													"src": "14278:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14325:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14308:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1038,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14308:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1039,
													"nodeType": "ArrayTypeName",
													"src": "14308:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14355:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14342:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14342:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14200:165:0"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14383:0:0"
									},
									"scope": 1222,
									"src": "14171:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "15529:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "14391:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15327:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15364:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15356:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15390:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15382:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15412:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15404:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15441:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15424:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1054,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15424:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1055,
													"nodeType": "ArrayTypeName",
													"src": "15424:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15471:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15454:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1057,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15454:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1058,
													"nodeType": "ArrayTypeName",
													"src": "15454:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15501:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "15488:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15488:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15346:165:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15529:0:0"
									},
									"scope": 1222,
									"src": "15318:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "15730:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1080,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "15744:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "15744:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15744:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "15740:516:0",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "15761:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1107,
																		"nodeType": "Block",
																		"src": "15878:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1100,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1096,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1094,
																						"src": "15900:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1097,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "15912:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1098,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1366,
																							"src": "15912:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1099,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15912:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15900:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1106,
																				"nodeType": "IfStatement",
																				"src": "15896:152:0",
																				"trueBody": {
																					"id": 1105,
																					"nodeType": "Block",
																					"src": "15957:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1102,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15986:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1101,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15979:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1103,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15979:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1104,
																							"nodeType": "ExpressionStatement",
																							"src": "15979:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1108,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1095,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1094,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15868:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1108,
																				"src": "15861:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1093,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15861:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15860:17:0"
																	},
																	"src": "15852:210:0"
																},
																{
																	"block": {
																		"id": 1116,
																		"nodeType": "Block",
																		"src": "16097:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1113,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1110,
																							"src": "16122:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1112,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16115:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16115:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1115,
																				"nodeType": "ExpressionStatement",
																				"src": "16115:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1117,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1111,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1110,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16089:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1117,
																				"src": "16075:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1109,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16075:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16074:22:0"
																	},
																	"src": "16063:81:0"
																},
																{
																	"block": {
																		"id": 1122,
																		"nodeType": "Block",
																		"src": "16151:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1119,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16176:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1118,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16169:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1120,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16169:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1121,
																				"nodeType": "ExpressionStatement",
																				"src": "16169:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1123,
																	"nodeType": "TryCatchClause",
																	"src": "16145:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1087,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "15818:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1088,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "15828:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1089,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "15834:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1090,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "15838:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1091,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "15846:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1084,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1071,
																				"src": "15796:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1083,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "15779:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15779:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1385",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1366,
																	"src": "15779:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15779:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1124,
															"nodeType": "TryStatement",
															"src": "15775:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15546:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15594:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15586:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15620:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15612:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15642:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15634:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15662:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15654:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15682:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15674:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15711:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "15698:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15698:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15576:145:0"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15730:0:0"
									},
									"scope": 1222,
									"src": "15537:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "16486:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1145,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "16500:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "16500:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16500:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "IfStatement",
												"src": "16496:558:0",
												"trueBody": {
													"id": 1190,
													"nodeType": "Block",
													"src": "16517:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1172,
																		"nodeType": "Block",
																		"src": "16671:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1161,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1159,
																						"src": "16693:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1162,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "16705:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1163,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1384,
																							"src": "16705:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1164,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16705:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16693:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1171,
																				"nodeType": "IfStatement",
																				"src": "16689:157:0",
																				"trueBody": {
																					"id": 1170,
																					"nodeType": "Block",
																					"src": "16755:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1167,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16784:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1166,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16777:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1168,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16777:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1169,
																							"nodeType": "ExpressionStatement",
																							"src": "16777:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1173,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1160,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1159,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16648:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1173,
																				"src": "16641:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1158,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16641:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16623:47:0"
																	},
																	"src": "16615:245:0"
																},
																{
																	"block": {
																		"id": 1181,
																		"nodeType": "Block",
																		"src": "16895:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1178,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1175,
																							"src": "16920:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1177,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16913:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16913:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1180,
																				"nodeType": "ExpressionStatement",
																				"src": "16913:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1182,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1176,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1175,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16887:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1182,
																				"src": "16873:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1174,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16873:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16872:22:0"
																	},
																	"src": "16861:81:0"
																},
																{
																	"block": {
																		"id": 1187,
																		"nodeType": "Block",
																		"src": "16949:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1184,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16974:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1183,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16967:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1185,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16967:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1186,
																				"nodeType": "ExpressionStatement",
																				"src": "16967:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1188,
																	"nodeType": "TryCatchClause",
																	"src": "16943:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1152,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "16579:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1153,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "16589:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1154,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "16595:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1155,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "16600:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1156,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "16609:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1149,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "16552:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1148,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "16535:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1385_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16535:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1385",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1384,
																	"src": "16535:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16535:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1189,
															"nodeType": "TryStatement",
															"src": "16531:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16277:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16330:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16322:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16356:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16348:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16378:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16370:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16407:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16390:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1135,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1136,
													"nodeType": "ArrayTypeName",
													"src": "16390:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16420:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1138,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1139,
													"nodeType": "ArrayTypeName",
													"src": "16420:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16467:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "16454:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16454:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16312:165:0"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16486:0:0"
									},
									"scope": 1222,
									"src": "16268:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "17150:109:0",
										"statements": [
											{
												"assignments": [
													1205
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17177:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "17160:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1203,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17160:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1204,
															"nodeType": "ArrayTypeName",
															"src": "17160:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17199:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17185:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1206,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17189:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1207,
															"nodeType": "ArrayTypeName",
															"src": "17189:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17185:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17160:41:0"
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1212,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "17211:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1214,
														"indexExpression": {
															"hexValue": "30",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17217:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17211:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1215,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "17222:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17211:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "17211:18:0"
											},
											{
												"expression": {
													"id": 1218,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1205,
													"src": "17247:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1219,
												"nodeType": "Return",
												"src": "17240:12:0"
											}
										]
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17075:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17101:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "17093:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17092:17:0"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "17132:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1197,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17132:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1198,
													"nodeType": "ArrayTypeName",
													"src": "17132:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17131:18:0"
									},
									"scope": 1222,
									"src": "17066:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1223,
							"src": "570:16691:0",
							"usedErrors": []
						}
					],
					"src": "109:17153:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1344
						],
						"IERC165": [
							1753
						]
					},
					"id": 1345,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1224,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1345,
							"sourceUnit": 1754,
							"src": "135:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1227,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1753,
										"src": "372:7:1"
									},
									"id": 1228,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:1"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1226,
								"nodeType": "StructuredDocumentation",
								"src": "184:165:1",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1344,
							"linearizedBaseContracts": [
								1344,
								1753
							],
							"name": "IERC1155",
							"nameLocation": "360:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "386:121:1",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1241,
									"name": "TransferSingle",
									"nameLocation": "518:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "549:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "533:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "575:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "559:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "597:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "581:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "609:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "601:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "621:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "613:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:95:1"
									},
									"src": "512:116:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "634:144:1",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1256,
									"name": "TransferBatch",
									"nameLocation": "789:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "828:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "812:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "862:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "846:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "892:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "876:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "914:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "904:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1249,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "904:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1250,
													"nodeType": "ArrayTypeName",
													"src": "904:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "937:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "927:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1252,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "927:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1253,
													"nodeType": "ArrayTypeName",
													"src": "927:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:147:1"
									},
									"src": "783:167:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "956:147:1",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1265,
									"name": "ApprovalForAll",
									"nameLocation": "1114:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1145:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1129:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1170:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1154:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1185:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "1180:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1180:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:66:1"
									},
									"src": "1108:87:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "1201:343:1",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1272,
									"name": "URI",
									"nameLocation": "1555:3:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1566:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1559:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1589:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1573:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:34:1"
									},
									"src": "1549:44:1"
								},
								{
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "1599:173:1",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1786:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1804:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1796:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1821:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1813:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:29:1"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "1848:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:1"
									},
									"scope": 1344,
									"src": "1777:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "1863:188:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2065:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2099:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2080:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2080:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "2080:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2128:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2109:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1287,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2109:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1288,
													"nodeType": "ArrayTypeName",
													"src": "2109:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:53:1"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "2180:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1291,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2180:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1292,
													"nodeType": "ArrayTypeName",
													"src": "2180:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:18:1"
									},
									"scope": 1344,
									"src": "2056:142:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "2204:248:1",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2466:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2492:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2484:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2507:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2502:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2502:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:33:1"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:1"
									},
									"scope": 1344,
									"src": "2457:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "2532:135:1",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2681:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2706:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2698:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2723:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2715:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:35:1"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2756:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2756:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:6:1"
									},
									"scope": 1344,
									"src": "2672:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "2768:556:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3338:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3372:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3364:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3394:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3386:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3414:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3406:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3434:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3426:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3465:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3450:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3450:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:121:1"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3484:0:1"
									},
									"scope": 1344,
									"src": "3329:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "3491:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3895:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3926:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3956:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3948:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3987:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "3968:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1333,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3968:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1334,
													"nodeType": "ArrayTypeName",
													"src": "3968:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "4000:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1336,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4000:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1337,
													"nodeType": "ArrayTypeName",
													"src": "4000:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4051:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "4036:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4036:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:145:1"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4070:0:1"
									},
									"scope": 1344,
									"src": "3886:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1345,
							"src": "350:3723:1",
							"usedErrors": []
						}
					],
					"src": "110:3964:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1753
						]
					},
					"id": 1386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1386,
							"sourceUnit": 1754,
							"src": "143:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1349,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1753,
										"src": "262:7:2"
									},
									"id": 1350,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:2"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1348,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1385,
							"linearizedBaseContracts": [
								1385,
								1753
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1169:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1234:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:2"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1278:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:2"
									},
									"scope": 1385,
									"src": "1107:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2332:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2358:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2380:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1372,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1373,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2412:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1375,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1376,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:2"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "2491:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:2"
									},
									"scope": 1385,
									"src": "2291:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1386,
							"src": "232:2269:2",
							"usedErrors": []
						}
					],
					"src": "118:2384:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1400
						],
						"IERC165": [
							1753
						]
					},
					"id": 1401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1401,
							"sourceUnit": 1345,
							"src": "142:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1390,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1344,
										"src": "397:8:3"
									},
									"id": 1391,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:3"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1389,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:3",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1400,
							"linearizedBaseContracts": [
								1400,
								1344,
								1753
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:3",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "622:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "657:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:3"
									},
									"scope": 1400,
									"src": "609:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1401,
							"src": "364:310:3",
							"usedErrors": []
						}
					],
					"src": "117:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1695
						]
					},
					"id": 1696,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1402,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1403,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1695,
							"linearizedBaseContracts": [
								1695
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1416,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 1695,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1429,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1695",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1695",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1427,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1432,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													1438,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1438,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1451,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1437,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1445,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1439,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1441,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1447,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 1695,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1463,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1464,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1462,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1469,
															1489
														],
														"referencedDeclaration": 1489,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1467,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 1695,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1483,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1485,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1481,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1509,
															1559
														],
														"referencedDeclaration": 1559,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1480,
												"id": 1487,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 1695,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1502,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1503,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1504,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1501,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1509,
															1559
														],
														"referencedDeclaration": 1559,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1500,
												"id": 1507,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 1695,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1526,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1695",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1695",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1524,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1529,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1536,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1535,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													1542,
													1544
												],
												"declarations": [
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1541,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1544,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1543,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1551,
												"initialValue": {
													"arguments": [
														{
															"id": 1549,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1545,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1547,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1553,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1554,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1555,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1552,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1522,
												"id": 1557,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1513,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 1695,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1569,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1576,
															1611
														],
														"referencedDeclaration": 1611,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1568,
												"id": 1574,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 1695,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1590,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1579,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1589,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													1596,
													1598
												],
												"declarations": [
													{
														"constant": false,
														"id": 1596,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1610,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1595,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1598,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1610,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1597,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1603,
												"initialValue": {
													"arguments": [
														{
															"id": 1601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1599,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1605,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1606,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1607,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1604,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1609,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 1695,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1622,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1623,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1621,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1628,
															1663
														],
														"referencedDeclaration": 1663,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1626,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 1695,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1642,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1641,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													1648,
													1650
												],
												"declarations": [
													{
														"constant": false,
														"id": 1648,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1662,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1647,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1650,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1662,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1649,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1655,
												"initialValue": {
													"arguments": [
														{
															"id": 1653,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1651,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1657,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1658,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1659,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1656,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1639,
												"id": 1661,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 1695,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "7721:582:4",
										"statements": [
											{
												"condition": {
													"id": 1675,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1666,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1691,
													"nodeType": "Block",
													"src": "7792:505:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1679,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1689,
																"nodeType": "Block",
																"src": "8234:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1686,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1670,
																					"src": "8259:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1685,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1688,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:4"
																	}
																]
															},
															"id": 1690,
															"nodeType": "IfStatement",
															"src": "7872:415:4",
															"trueBody": {
																"id": 1684,
																"nodeType": "Block",
																"src": "7899:329:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:4"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1668,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1668,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1683,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1692,
												"nodeType": "IfStatement",
												"src": "7731:566:4",
												"trueBody": {
													"id": 1678,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 1676,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1674,
															"id": 1677,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1665,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 1695,
									"src": "7561:742:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1696,
							"src": "194:8111:4",
							"usedErrors": []
						}
					],
					"src": "101:8205:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1717
						]
					},
					"id": 1718,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1697,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1698,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1717,
							"linearizedBaseContracts": [
								1717
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1703,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1702,
												"id": 1705,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1717,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1712,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1714,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1709,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1717,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1718,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1741
						],
						"IERC165": [
							1753
						]
					},
					"id": 1742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1719,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1720,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 1754,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1722,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1753,
										"src": "754:7:6"
									},
									"id": 1723,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1721,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1741,
							"linearizedBaseContracts": [
								1741,
								1753
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1752
									],
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1732,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1734,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1753_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1753_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1733,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1753",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1731,
												"id": 1738,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1728,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1725,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 1741,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1742,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1753
						]
					},
					"id": 1754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1744,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1753,
							"linearizedBaseContracts": [
								1753
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1746,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 1753,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1754,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/CouponMarket.sol": {
				"ast": {
					"absolutePath": "contracts/CouponMarket.sol",
					"exportedSymbols": {
						"Address": [
							1695
						],
						"Context": [
							1717
						],
						"CouponMarket": [
							1924
						],
						"ERC1155": [
							1222
						],
						"ERC165": [
							1741
						],
						"IERC1155": [
							1344
						],
						"IERC1155MetadataURI": [
							1400
						],
						"IERC1155Receiver": [
							1385
						],
						"IERC165": [
							1753
						],
						"others": [
							1780
						]
					},
					"id": 1925,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "59:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 1756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1925,
							"sourceUnit": 1223,
							"src": "84:59:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"id": 1757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1925,
							"sourceUnit": 1386,
							"src": "144:68:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "others",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1780,
							"linearizedBaseContracts": [
								1780
							],
							"name": "others",
							"nameLocation": "224:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "00fdd58e",
									"id": 1766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "246:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "264:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "256:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "281:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "273:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "255:29:8"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "332:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:9:8"
									},
									"scope": 1780,
									"src": "237:104:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f242432a",
									"id": 1779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "356:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "390:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "382:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "412:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "404:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "432:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "424:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "452:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "444:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "481:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "468:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "468:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:119:8"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:0:8"
									},
									"scope": 1780,
									"src": "347:154:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1925,
							"src": "214:289:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CouponMarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1924,
							"linearizedBaseContracts": [
								1924
							],
							"name": "CouponMarket",
							"nameLocation": "514:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1784,
									"mutability": "mutable",
									"name": "_seller",
									"nameLocation": "569:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1924,
									"src": "533:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1783,
										"keyType": {
											"id": 1781,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "541:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "533:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1782,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "552:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1788,
									"mutability": "mutable",
									"name": "_amount",
									"nameLocation": "618:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1924,
									"src": "582:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1787,
										"keyType": {
											"id": 1785,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "590:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "582:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1786,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "601:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "696:41:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1795,
														"name": "_seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "713:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1797,
													"indexExpression": {
														"id": 1796,
														"name": "discount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "721:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "713:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1798,
												"nodeType": "Return",
												"src": "706:24:8"
											}
										]
									},
									"functionSelector": "aacdfe6f",
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "seller",
									"nameLocation": "641:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "discount",
												"nameLocation": "656:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "648:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:18:8"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "687:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:9:8"
									},
									"scope": 1924,
									"src": "632:105:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "807:41:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1807,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "824:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1809,
													"indexExpression": {
														"id": 1808,
														"name": "discount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "832:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "824:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1806,
												"id": 1810,
												"nodeType": "Return",
												"src": "817:24:8"
											}
										]
									},
									"functionSelector": "8b0d0258",
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "amount",
									"nameLocation": "752:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "discount",
												"nameLocation": "767:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "759:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:18:8"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "798:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:9:8"
									},
									"scope": 1924,
									"src": "743:105:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "989:363:8",
										"statements": [
											{
												"assignments": [
													1824
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "receiver",
														"nameLocation": "1015:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1864,
														"src": "999:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 1823,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "999:15:8",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1831,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1827,
																"name": "_seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "1034:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																	"typeString": "mapping(uint256 => address)"
																}
															},
															"id": 1829,
															"indexExpression": {
																"id": 1828,
																"name": "discount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1814,
																"src": "1042:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1034:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1026:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 1825,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1026:8:8",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1026:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "999:53:8"
											},
											{
												"assignments": [
													1833
												],
												"declarations": [
													{
														"constant": false,
														"id": 1833,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1070:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1864,
														"src": "1062:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1062:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1835,
												"initialValue": {
													"hexValue": "31",
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1078:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1062:17:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1839,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "1107:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1836,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "1089:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1089:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "1089:24:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1848,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1182:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CouponMarket_$1924",
																		"typeString": "contract CouponMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CouponMarket_$1924",
																		"typeString": "contract CouponMarket"
																	}
																],
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1174:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1846,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1174:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1174:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1850,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1201:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1201:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1852,
															"name": "discount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "1225:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1853,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "1247:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30783030",
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1267:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															},
															"value": "0x00"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1843,
																	"name": "ContractAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "1130:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1842,
																"name": "others",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "1123:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_others_$1780_$",
																	"typeString": "type(contract others)"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1123:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_others_$1780",
																"typeString": "contract others"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1779,
														"src": "1123:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1123:160:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1856,
												"nodeType": "ExpressionStatement",
												"src": "1123:160:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1858,
															"name": "discount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "1307:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1859,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "1317:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1857,
														"name": "_reduceAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "1293:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "1293:31:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1341:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1822,
												"id": 1863,
												"nodeType": "Return",
												"src": "1334:11:8"
											}
										]
									},
									"functionSelector": "01edf85c",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyCoupon",
									"nameLocation": "863:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "discount",
												"nameLocation": "890:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "882:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "916:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "908:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "ContractAddr",
												"nameLocation": "940:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "932:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:86:8"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "983:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "983:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:6:8"
									},
									"scope": 1924,
									"src": "854:498:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "1423:63:8",
										"statements": [
											{
												"expression": {
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1872,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "1433:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1874,
														"indexExpression": {
															"id": 1873,
															"name": "discount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "1441:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1433:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1875,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "1453:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1877,
															"indexExpression": {
																"id": 1876,
																"name": "discount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "1461:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1453:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1878,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "1473:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1453:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1433:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "1433:46:8"
											}
										]
									},
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reduceAmount",
									"nameLocation": "1367:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "discount",
												"nameLocation": "1389:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "1381:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1407:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "1399:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:34:8"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1423:0:8"
									},
									"scope": 1924,
									"src": "1358:128:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1922,
										"nodeType": "Block",
										"src": "1671:254:8",
										"statements": [
											{
												"expression": {
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1898,
															"name": "_seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "1681:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1900,
														"indexExpression": {
															"id": 1899,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "1689:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1681:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1901,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "1695:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1681:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "1681:18:8"
											},
											{
												"expression": {
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1904,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "1709:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1906,
														"indexExpression": {
															"id": 1905,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "1717:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1709:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1907,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "1723:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1909,
															"indexExpression": {
																"id": 1908,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "1731:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1723:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1910,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "1737:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1723:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1709:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1913,
												"nodeType": "ExpressionStatement",
												"src": "1709:33:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"components": [
																		{
																			"hexValue": "6f6e45524331313535526563656976656428616464726573732c616464726573732c75696e743235362c75696e743235362c627974657329",
																			"id": 1917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:58:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																				"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																			},
																			"value": "onERC1155Received(address,address,uint256,uint256,bytes)"
																		}
																	],
																	"id": 1918,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1826:60:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	}
																],
																"id": 1916,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1795:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1795:109:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1771:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 1914,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "1771:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1771:147:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1897,
												"id": 1921,
												"nodeType": "Return",
												"src": "1752:166:8"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 1923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1501:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1536:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "1528:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1562:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "1554:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1584:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "1576:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1604:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "1596:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1634:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "1619:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1892,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1619:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:126:8"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "1663:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1895,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:8:8"
									},
									"scope": 1924,
									"src": "1492:433:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1925,
							"src": "505:1422:8",
							"usedErrors": []
						}
					],
					"src": "59:1869:8"
				},
				"id": 8
			}
		}
	}
}