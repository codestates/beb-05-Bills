{
	"id": "74e6a31cfd7bdb564e1f3411ff76f3c7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Coupon.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\ncontract Coupon {\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    event TransferSingle(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 id,\n        uint256 value\n    );\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    function isContract(address account) private view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    function _msgSender() private view returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id)\n        public\n        view\n        virtual\n        returns (uint256)\n    {\n        require(\n            account != address(0),\n            \"ERC1155: address zero is not a valid owner\"\n        );\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual {\n        require(\n            from == _msgSender(),\n            \"ERC1155: caller is not token owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(\n            fromBalance >= amount,\n            \"ERC1155: insufficient balance for transfer\"\n        );\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _asSingletonArray(uint256 element)\n        private\n        pure\n        returns (uint256[] memory)\n    {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n\n    function CouponMint(uint256 discount, uint256 amount) public {\n        _mint(msg.sender, discount, amount, \"\");\n        // _safeTransferFrom(msg.sender, marketContract, discount, amount, \"\");\n    }\n\n    function transf(\n        address from,\n        address addr,\n        uint256 discount,\n        uint256 amount,\n        bytes memory data\n    ) public {\n        _safeTransferFrom(from, addr, discount, amount, data);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Coupon.sol": {
				"Coupon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "discount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CouponMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "discount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transf",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Coupon.sol\":2767:12045  contract Coupon {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Coupon.sol\":3807:3869  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Coupon.sol\":3849:3862  _setURI(uri_) */\n  tag_6\n    /* \"contracts/Coupon.sol\":3857:3861  uri_ */\n  dup2\n    /* \"contracts/Coupon.sol\":3849:3856  _setURI */\n  shl(0x20, tag_7)\n    /* \"contracts/Coupon.sol\":3849:3862  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/Coupon.sol\":3807:3869  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/Coupon.sol\":2767:12045  contract Coupon {... */\n  jump(tag_8)\n    /* \"contracts/Coupon.sol\":6936:7022  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"contracts/Coupon.sol\":7009:7015  newuri */\n  dup1\n    /* \"contracts/Coupon.sol\":7002:7006  _uri */\n  0x02\n    /* \"contracts/Coupon.sol\":7002:7015  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/Coupon.sol\":6936:7022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Coupon.sol\":2767:12045  contract Coupon {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_14:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_24:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_26\n    /* \"#utility.yul\":137:186   */\n  tag_27\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":121:187   */\n  tag_29\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_31\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":262:374   */\ntag_30:\n    /* \"#utility.yul\":383:422   */\n  tag_33\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_35:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_38\n  tag_39\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":531:653   */\ntag_37:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_40\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1333   */\ntag_3:\n    /* \"#utility.yul\":889:895   */\n  0x00\n    /* \"#utility.yul\":938:940   */\n  0x20\n    /* \"#utility.yul\":926:935   */\n  dup3\n    /* \"#utility.yul\":917:924   */\n  dup5\n    /* \"#utility.yul\":913:936   */\n  sub\n    /* \"#utility.yul\":909:941   */\n  slt\n    /* \"#utility.yul\":906:1025   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":944:1023   */\n  tag_43\n  tag_44\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":906:1025   */\ntag_42:\n    /* \"#utility.yul\":1085:1086   */\n  0x00\n    /* \"#utility.yul\":1074:1083   */\n  dup3\n    /* \"#utility.yul\":1070:1087   */\n  add\n    /* \"#utility.yul\":1064:1088   */\n  mload\n    /* \"#utility.yul\":1115:1133   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1107:1113   */\n  dup2\n    /* \"#utility.yul\":1104:1134   */\n  gt\n    /* \"#utility.yul\":1101:1218   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1137:1216   */\n  tag_46\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1101:1218   */\ntag_45:\n    /* \"#utility.yul\":1242:1316   */\n  tag_48\n    /* \"#utility.yul\":1308:1315   */\n  dup5\n    /* \"#utility.yul\":1299:1305   */\n  dup3\n    /* \"#utility.yul\":1288:1297   */\n  dup6\n    /* \"#utility.yul\":1284:1306   */\n  add\n    /* \"#utility.yul\":1242:1316   */\n  tag_35\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1232:1316   */\n  swap2\n  pop\n    /* \"#utility.yul\":1035:1326   */\n  pop\n    /* \"#utility.yul\":809:1333   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1339:1468   */\ntag_29:\n    /* \"#utility.yul\":1373:1379   */\n  0x00\n    /* \"#utility.yul\":1400:1420   */\n  tag_50\n  tag_51\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1390:1420   */\n  swap1\n  pop\n    /* \"#utility.yul\":1429:1462   */\n  tag_52\n    /* \"#utility.yul\":1457:1461   */\n  dup3\n    /* \"#utility.yul\":1449:1455   */\n  dup3\n    /* \"#utility.yul\":1429:1462   */\n  tag_53\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1339:1468   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1474:1549   */\ntag_51:\n    /* \"#utility.yul\":1507:1513   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x40\n    /* \"#utility.yul\":1534:1543   */\n  mload\n    /* \"#utility.yul\":1524:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1474:1549   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1555:1863   */\ntag_28:\n    /* \"#utility.yul\":1617:1621   */\n  0x00\n    /* \"#utility.yul\":1707:1725   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1696:1726   */\n  gt\n    /* \"#utility.yul\":1693:1749   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1729:1747   */\n  tag_57\n  tag_58\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1693:1749   */\ntag_56:\n    /* \"#utility.yul\":1767:1796   */\n  tag_59\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1767:1796   */\n  tag_60\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1759:1796   */\n  swap1\n  pop\n    /* \"#utility.yul\":1851:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1849   */\n  dup2\n    /* \"#utility.yul\":1841:1856   */\n  add\n    /* \"#utility.yul\":1833:1856   */\n  swap1\n  pop\n    /* \"#utility.yul\":1555:1863   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1869:2176   */\ntag_34:\n    /* \"#utility.yul\":1937:1938   */\n  0x00\n    /* \"#utility.yul\":1947:2060   */\ntag_62:\n    /* \"#utility.yul\":1961:1967   */\n  dup4\n    /* \"#utility.yul\":1958:1959   */\n  dup2\n    /* \"#utility.yul\":1955:1968   */\n  lt\n    /* \"#utility.yul\":1947:2060   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2046:2047   */\n  dup1\n    /* \"#utility.yul\":2041:2044   */\n  dup3\n    /* \"#utility.yul\":2037:2048   */\n  add\n    /* \"#utility.yul\":2031:2049   */\n  mload\n    /* \"#utility.yul\":2027:2028   */\n  dup2\n    /* \"#utility.yul\":2022:2025   */\n  dup5\n    /* \"#utility.yul\":2018:2029   */\n  add\n    /* \"#utility.yul\":2011:2050   */\n  mstore\n    /* \"#utility.yul\":1983:1985   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  dup2\n    /* \"#utility.yul\":1976:1986   */\n  add\n    /* \"#utility.yul\":1971:1986   */\n  swap1\n  pop\n    /* \"#utility.yul\":1947:2060   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2078:2084   */\n  dup4\n    /* \"#utility.yul\":2075:2076   */\n  dup2\n    /* \"#utility.yul\":2072:2085   */\n  gt\n    /* \"#utility.yul\":2069:2170   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2158:2159   */\n  0x00\n    /* \"#utility.yul\":2149:2155   */\n  dup5\n    /* \"#utility.yul\":2144:2147   */\n  dup5\n    /* \"#utility.yul\":2140:2156   */\n  add\n    /* \"#utility.yul\":2133:2160   */\n  mstore\n    /* \"#utility.yul\":2069:2170   */\ntag_65:\n    /* \"#utility.yul\":1918:2176   */\n  pop\n    /* \"#utility.yul\":1869:2176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2182:2502   */\ntag_13:\n    /* \"#utility.yul\":2226:2232   */\n  0x00\n    /* \"#utility.yul\":2263:2264   */\n  0x02\n    /* \"#utility.yul\":2257:2261   */\n  dup3\n    /* \"#utility.yul\":2253:2265   */\n  div\n    /* \"#utility.yul\":2243:2265   */\n  swap1\n  pop\n    /* \"#utility.yul\":2310:2311   */\n  0x01\n    /* \"#utility.yul\":2304:2308   */\n  dup3\n    /* \"#utility.yul\":2300:2312   */\n  and\n    /* \"#utility.yul\":2331:2349   */\n  dup1\n    /* \"#utility.yul\":2321:2402   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2387:2391   */\n  0x7f\n    /* \"#utility.yul\":2379:2385   */\n  dup3\n    /* \"#utility.yul\":2375:2392   */\n  and\n    /* \"#utility.yul\":2365:2392   */\n  swap2\n  pop\n    /* \"#utility.yul\":2321:2402   */\ntag_67:\n    /* \"#utility.yul\":2449:2451   */\n  0x20\n    /* \"#utility.yul\":2441:2447   */\n  dup3\n    /* \"#utility.yul\":2438:2452   */\n  lt\n    /* \"#utility.yul\":2418:2436   */\n  dup2\n    /* \"#utility.yul\":2415:2453   */\n  eq\n    /* \"#utility.yul\":2412:2496   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2468:2486   */\n  tag_69\n  tag_70\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2412:2496   */\ntag_68:\n    /* \"#utility.yul\":2233:2502   */\n  pop\n    /* \"#utility.yul\":2182:2502   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2508:2789   */\ntag_53:\n    /* \"#utility.yul\":2591:2618   */\n  tag_72\n    /* \"#utility.yul\":2613:2617   */\n  dup3\n    /* \"#utility.yul\":2591:2618   */\n  tag_60\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2583:2589   */\n  dup2\n    /* \"#utility.yul\":2579:2619   */\n  add\n    /* \"#utility.yul\":2721:2727   */\n  dup2\n    /* \"#utility.yul\":2709:2719   */\n  dup2\n    /* \"#utility.yul\":2706:2728   */\n  lt\n    /* \"#utility.yul\":2685:2703   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2673:2683   */\n  dup3\n    /* \"#utility.yul\":2670:2704   */\n  gt\n    /* \"#utility.yul\":2667:2729   */\n  or\n    /* \"#utility.yul\":2664:2752   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2732:2750   */\n  tag_74\n  tag_58\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2664:2752   */\ntag_73:\n    /* \"#utility.yul\":2772:2782   */\n  dup1\n    /* \"#utility.yul\":2768:2770   */\n  0x40\n    /* \"#utility.yul\":2761:2783   */\n  mstore\n    /* \"#utility.yul\":2551:2789   */\n  pop\n    /* \"#utility.yul\":2508:2789   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2795:2975   */\ntag_70:\n    /* \"#utility.yul\":2843:2920   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2840:2841   */\n  0x00\n    /* \"#utility.yul\":2833:2921   */\n  mstore\n    /* \"#utility.yul\":2940:2944   */\n  0x22\n    /* \"#utility.yul\":2937:2938   */\n  0x04\n    /* \"#utility.yul\":2930:2945   */\n  mstore\n    /* \"#utility.yul\":2964:2968   */\n  0x24\n    /* \"#utility.yul\":2961:2962   */\n  0x00\n    /* \"#utility.yul\":2954:2969   */\n  revert\n    /* \"#utility.yul\":2981:3161   */\ntag_58:\n    /* \"#utility.yul\":3029:3106   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3026:3027   */\n  0x00\n    /* \"#utility.yul\":3019:3107   */\n  mstore\n    /* \"#utility.yul\":3126:3130   */\n  0x41\n    /* \"#utility.yul\":3123:3124   */\n  0x04\n    /* \"#utility.yul\":3116:3131   */\n  mstore\n    /* \"#utility.yul\":3150:3154   */\n  0x24\n    /* \"#utility.yul\":3147:3148   */\n  0x00\n    /* \"#utility.yul\":3140:3155   */\n  revert\n    /* \"#utility.yul\":3167:3284   */\ntag_39:\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3290:3407   */\ntag_32:\n    /* \"#utility.yul\":3399:3400   */\n  0x00\n    /* \"#utility.yul\":3396:3397   */\n  dup1\n    /* \"#utility.yul\":3389:3401   */\n  revert\n    /* \"#utility.yul\":3413:3530   */\ntag_47:\n    /* \"#utility.yul\":3522:3523   */\n  0x00\n    /* \"#utility.yul\":3519:3520   */\n  dup1\n    /* \"#utility.yul\":3512:3524   */\n  revert\n    /* \"#utility.yul\":3536:3653   */\ntag_44:\n    /* \"#utility.yul\":3645:3646   */\n  0x00\n    /* \"#utility.yul\":3642:3643   */\n  dup1\n    /* \"#utility.yul\":3635:3647   */\n  revert\n    /* \"#utility.yul\":3659:3761   */\ntag_60:\n    /* \"#utility.yul\":3700:3706   */\n  0x00\n    /* \"#utility.yul\":3751:3753   */\n  0x1f\n    /* \"#utility.yul\":3747:3754   */\n  not\n    /* \"#utility.yul\":3742:3744   */\n  0x1f\n    /* \"#utility.yul\":3735:3740   */\n  dup4\n    /* \"#utility.yul\":3731:3745   */\n  add\n    /* \"#utility.yul\":3727:3755   */\n  and\n    /* \"#utility.yul\":3717:3755   */\n  swap1\n  pop\n    /* \"#utility.yul\":3659:3761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/Coupon.sol\":2767:12045  contract Coupon {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Coupon.sol\":2767:12045  contract Coupon {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x57e87575\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa6f27714\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Coupon.sol\":4504:4792  function balanceOf(address account, uint256 id)... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coupon.sol\":4268:4362  function uri(uint256) public view virtual returns (string memory) {... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Coupon.sol\":11620:11817  function CouponMint(uint256 discount, uint256 amount) public {... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/Coupon.sol\":11823:12043  function transf(... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/Coupon.sol\":4859:5205  function safeTransferFrom(... */\n    tag_7:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/Coupon.sol\":4504:4792  function balanceOf(address account, uint256 id)... */\n    tag_11:\n        /* \"contracts/Coupon.sol\":4613:4620  uint256 */\n      0x00\n        /* \"contracts/Coupon.sol\":4676:4677  0 */\n      dup1\n        /* \"contracts/Coupon.sol\":4657:4678  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coupon.sol\":4657:4664  account */\n      dup4\n        /* \"contracts/Coupon.sol\":4657:4678  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Coupon.sol\":4636:4746  require(... */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"contracts/Coupon.sol\":4763:4772  _balances */\n      0x00\n        /* \"contracts/Coupon.sol\":4763:4776  _balances[id] */\n      dup1\n        /* \"contracts/Coupon.sol\":4773:4775  id */\n      dup4\n        /* \"contracts/Coupon.sol\":4763:4776  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coupon.sol\":4763:4785  _balances[id][account] */\n      0x00\n        /* \"contracts/Coupon.sol\":4777:4784  account */\n      dup5\n        /* \"contracts/Coupon.sol\":4763:4785  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Coupon.sol\":4756:4785  return _balances[id][account] */\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":4504:4792  function balanceOf(address account, uint256 id)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coupon.sol\":4268:4362  function uri(uint256) public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"contracts/Coupon.sol\":4319:4332  string memory */\n      0x60\n        /* \"contracts/Coupon.sol\":4351:4355  _uri */\n      0x02\n        /* \"contracts/Coupon.sol\":4344:4355  return _uri */\n      dup1\n      sload\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_38\n      swap1\n      tag_37\n      jump\t// in\n    tag_38:\n      dup1\n      iszero\n      tag_39\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_40\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_39)\n    tag_40:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_41:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_41\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":4268:4362  function uri(uint256) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Coupon.sol\":11620:11817  function CouponMint(uint256 discount, uint256 amount) public {... */\n    tag_23:\n        /* \"contracts/Coupon.sol\":11691:11730  _mint(msg.sender, discount, amount, \"\") */\n      tag_43\n        /* \"contracts/Coupon.sol\":11697:11707  msg.sender */\n      caller\n        /* \"contracts/Coupon.sol\":11709:11717  discount */\n      dup4\n        /* \"contracts/Coupon.sol\":11719:11725  amount */\n      dup4\n        /* \"contracts/Coupon.sol\":11691:11730  _mint(msg.sender, discount, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/Coupon.sol\":11691:11696  _mint */\n      tag_44\n        /* \"contracts/Coupon.sol\":11691:11730  _mint(msg.sender, discount, amount, \"\") */\n      jump\t// in\n    tag_43:\n        /* \"contracts/Coupon.sol\":11620:11817  function CouponMint(uint256 discount, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coupon.sol\":11823:12043  function transf(... */\n    tag_27:\n        /* \"contracts/Coupon.sol\":11983:12036  _safeTransferFrom(from, addr, discount, amount, data) */\n      tag_46\n        /* \"contracts/Coupon.sol\":12001:12005  from */\n      dup6\n        /* \"contracts/Coupon.sol\":12007:12011  addr */\n      dup6\n        /* \"contracts/Coupon.sol\":12013:12021  discount */\n      dup6\n        /* \"contracts/Coupon.sol\":12023:12029  amount */\n      dup6\n        /* \"contracts/Coupon.sol\":12031:12035  data */\n      dup6\n        /* \"contracts/Coupon.sol\":11983:12000  _safeTransferFrom */\n      tag_47\n        /* \"contracts/Coupon.sol\":11983:12036  _safeTransferFrom(from, addr, discount, amount, data) */\n      jump\t// in\n    tag_46:\n        /* \"contracts/Coupon.sol\":11823:12043  function transf(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coupon.sol\":4859:5205  function safeTransferFrom(... */\n    tag_30:\n        /* \"contracts/Coupon.sol\":5058:5070  _msgSender() */\n      tag_49\n        /* \"contracts/Coupon.sol\":5058:5068  _msgSender */\n      tag_50\n        /* \"contracts/Coupon.sol\":5058:5070  _msgSender() */\n      jump\t// in\n    tag_49:\n        /* \"contracts/Coupon.sol\":5050:5070  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coupon.sol\":5050:5054  from */\n      dup6\n        /* \"contracts/Coupon.sol\":5050:5070  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Coupon.sol\":5029:5143  require(... */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"contracts/Coupon.sol\":5153:5198  _safeTransferFrom(from, to, id, amount, data) */\n      tag_54\n        /* \"contracts/Coupon.sol\":5171:5175  from */\n      dup6\n        /* \"contracts/Coupon.sol\":5177:5179  to */\n      dup6\n        /* \"contracts/Coupon.sol\":5181:5183  id */\n      dup6\n        /* \"contracts/Coupon.sol\":5185:5191  amount */\n      dup6\n        /* \"contracts/Coupon.sol\":5193:5197  data */\n      dup6\n        /* \"contracts/Coupon.sol\":5153:5170  _safeTransferFrom */\n      tag_47\n        /* \"contracts/Coupon.sol\":5153:5198  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/Coupon.sol\":4859:5205  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coupon.sol\":7395:8019  function _mint(... */\n    tag_44:\n        /* \"contracts/Coupon.sol\":7556:7557  0 */\n      0x00\n        /* \"contracts/Coupon.sol\":7542:7558  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coupon.sol\":7542:7544  to */\n      dup5\n        /* \"contracts/Coupon.sol\":7542:7558  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Coupon.sol\":7534:7596  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"contracts/Coupon.sol\":7607:7623  address operator */\n      0x00\n        /* \"contracts/Coupon.sol\":7626:7638  _msgSender() */\n      tag_59\n        /* \"contracts/Coupon.sol\":7626:7636  _msgSender */\n      tag_50\n        /* \"contracts/Coupon.sol\":7626:7638  _msgSender() */\n      jump\t// in\n    tag_59:\n        /* \"contracts/Coupon.sol\":7607:7638  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":7648:7668  uint256[] memory ids */\n      0x00\n        /* \"contracts/Coupon.sol\":7671:7692  _asSingletonArray(id) */\n      tag_60\n        /* \"contracts/Coupon.sol\":7689:7691  id */\n      dup6\n        /* \"contracts/Coupon.sol\":7671:7688  _asSingletonArray */\n      tag_61\n        /* \"contracts/Coupon.sol\":7671:7692  _asSingletonArray(id) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/Coupon.sol\":7648:7692  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":7702:7726  uint256[] memory amounts */\n      0x00\n        /* \"contracts/Coupon.sol\":7729:7754  _asSingletonArray(amount) */\n      tag_62\n        /* \"contracts/Coupon.sol\":7747:7753  amount */\n      dup6\n        /* \"contracts/Coupon.sol\":7729:7746  _asSingletonArray */\n      tag_61\n        /* \"contracts/Coupon.sol\":7729:7754  _asSingletonArray(amount) */\n      jump\t// in\n    tag_62:\n        /* \"contracts/Coupon.sol\":7702:7754  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":7765:7831  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_63\n        /* \"contracts/Coupon.sol\":7786:7794  operator */\n      dup4\n        /* \"contracts/Coupon.sol\":7804:7805  0 */\n      0x00\n        /* \"contracts/Coupon.sol\":7808:7810  to */\n      dup10\n        /* \"contracts/Coupon.sol\":7812:7815  ids */\n      dup6\n        /* \"contracts/Coupon.sol\":7817:7824  amounts */\n      dup6\n        /* \"contracts/Coupon.sol\":7826:7830  data */\n      dup10\n        /* \"contracts/Coupon.sol\":7765:7785  _beforeTokenTransfer */\n      tag_64\n        /* \"contracts/Coupon.sol\":7765:7831  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/Coupon.sol\":7863:7869  amount */\n      dup5\n        /* \"contracts/Coupon.sol\":7842:7851  _balances */\n      0x00\n        /* \"contracts/Coupon.sol\":7842:7855  _balances[id] */\n      dup1\n        /* \"contracts/Coupon.sol\":7852:7854  id */\n      dup9\n        /* \"contracts/Coupon.sol\":7842:7855  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coupon.sol\":7842:7859  _balances[id][to] */\n      0x00\n        /* \"contracts/Coupon.sol\":7856:7858  to */\n      dup10\n        /* \"contracts/Coupon.sol\":7842:7859  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Coupon.sol\":7842:7869  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coupon.sol\":7921:7923  to */\n      dup7\n        /* \"contracts/Coupon.sol\":7884:7936  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coupon.sol\":7917:7918  0 */\n      0x00\n        /* \"contracts/Coupon.sol\":7884:7936  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coupon.sol\":7899:7907  operator */\n      dup5\n        /* \"contracts/Coupon.sol\":7884:7936  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"contracts/Coupon.sol\":7925:7927  id */\n      dup10\n        /* \"contracts/Coupon.sol\":7929:7935  amount */\n      dup10\n        /* \"contracts/Coupon.sol\":7884:7936  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Coupon.sol\":7947:8012  _afterTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_69\n        /* \"contracts/Coupon.sol\":7967:7975  operator */\n      dup4\n        /* \"contracts/Coupon.sol\":7985:7986  0 */\n      0x00\n        /* \"contracts/Coupon.sol\":7989:7991  to */\n      dup10\n        /* \"contracts/Coupon.sol\":7993:7996  ids */\n      dup6\n        /* \"contracts/Coupon.sol\":7998:8005  amounts */\n      dup6\n        /* \"contracts/Coupon.sol\":8007:8011  data */\n      dup10\n        /* \"contracts/Coupon.sol\":7947:7966  _afterTokenTransfer */\n      tag_70\n        /* \"contracts/Coupon.sol\":7947:8012  _afterTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/Coupon.sol\":7524:8019  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Coupon.sol\":7395:8019  function _mint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coupon.sol\":5211:6113  function _safeTransferFrom(... */\n    tag_47:\n        /* \"contracts/Coupon.sol\":5406:5407  0 */\n      0x00\n        /* \"contracts/Coupon.sol\":5392:5408  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coupon.sol\":5392:5394  to */\n      dup5\n        /* \"contracts/Coupon.sol\":5392:5408  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Coupon.sol\":5384:5450  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"contracts/Coupon.sol\":5461:5477  address operator */\n      0x00\n        /* \"contracts/Coupon.sol\":5480:5492  _msgSender() */\n      tag_75\n        /* \"contracts/Coupon.sol\":5480:5490  _msgSender */\n      tag_50\n        /* \"contracts/Coupon.sol\":5480:5492  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"contracts/Coupon.sol\":5461:5492  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":5502:5522  uint256[] memory ids */\n      0x00\n        /* \"contracts/Coupon.sol\":5525:5546  _asSingletonArray(id) */\n      tag_76\n        /* \"contracts/Coupon.sol\":5543:5545  id */\n      dup6\n        /* \"contracts/Coupon.sol\":5525:5542  _asSingletonArray */\n      tag_61\n        /* \"contracts/Coupon.sol\":5525:5546  _asSingletonArray(id) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/Coupon.sol\":5502:5546  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":5556:5580  uint256[] memory amounts */\n      0x00\n        /* \"contracts/Coupon.sol\":5583:5608  _asSingletonArray(amount) */\n      tag_77\n        /* \"contracts/Coupon.sol\":5601:5607  amount */\n      dup6\n        /* \"contracts/Coupon.sol\":5583:5600  _asSingletonArray */\n      tag_61\n        /* \"contracts/Coupon.sol\":5583:5608  _asSingletonArray(amount) */\n      jump\t// in\n    tag_77:\n        /* \"contracts/Coupon.sol\":5556:5608  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":5619:5679  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_78\n        /* \"contracts/Coupon.sol\":5640:5648  operator */\n      dup4\n        /* \"contracts/Coupon.sol\":5650:5654  from */\n      dup10\n        /* \"contracts/Coupon.sol\":5656:5658  to */\n      dup10\n        /* \"contracts/Coupon.sol\":5660:5663  ids */\n      dup6\n        /* \"contracts/Coupon.sol\":5665:5672  amounts */\n      dup6\n        /* \"contracts/Coupon.sol\":5674:5678  data */\n      dup10\n        /* \"contracts/Coupon.sol\":5619:5639  _beforeTokenTransfer */\n      tag_64\n        /* \"contracts/Coupon.sol\":5619:5679  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/Coupon.sol\":5690:5709  uint256 fromBalance */\n      0x00\n        /* \"contracts/Coupon.sol\":5712:5721  _balances */\n      dup1\n        /* \"contracts/Coupon.sol\":5712:5725  _balances[id] */\n      0x00\n        /* \"contracts/Coupon.sol\":5722:5724  id */\n      dup9\n        /* \"contracts/Coupon.sol\":5712:5725  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coupon.sol\":5712:5731  _balances[id][from] */\n      0x00\n        /* \"contracts/Coupon.sol\":5726:5730  from */\n      dup11\n        /* \"contracts/Coupon.sol\":5712:5731  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Coupon.sol\":5690:5731  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":5777:5783  amount */\n      dup6\n        /* \"contracts/Coupon.sol\":5762:5773  fromBalance */\n      dup2\n        /* \"contracts/Coupon.sol\":5762:5783  fromBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/Coupon.sol\":5741:5851  require(... */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/Coupon.sol\":5921:5927  amount */\n      dup6\n        /* \"contracts/Coupon.sol\":5907:5918  fromBalance */\n      dup2\n        /* \"contracts/Coupon.sol\":5907:5927  fromBalance - amount */\n      sub\n        /* \"contracts/Coupon.sol\":5885:5894  _balances */\n      0x00\n        /* \"contracts/Coupon.sol\":5885:5898  _balances[id] */\n      dup1\n        /* \"contracts/Coupon.sol\":5895:5897  id */\n      dup10\n        /* \"contracts/Coupon.sol\":5885:5898  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coupon.sol\":5885:5904  _balances[id][from] */\n      0x00\n        /* \"contracts/Coupon.sol\":5899:5903  from */\n      dup12\n        /* \"contracts/Coupon.sol\":5885:5904  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coupon.sol\":5885:5927  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coupon.sol\":5968:5974  amount */\n      dup6\n        /* \"contracts/Coupon.sol\":5947:5956  _balances */\n      0x00\n        /* \"contracts/Coupon.sol\":5947:5960  _balances[id] */\n      dup1\n        /* \"contracts/Coupon.sol\":5957:5959  id */\n      dup10\n        /* \"contracts/Coupon.sol\":5947:5960  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Coupon.sol\":5947:5964  _balances[id][to] */\n      0x00\n        /* \"contracts/Coupon.sol\":5961:5963  to */\n      dup11\n        /* \"contracts/Coupon.sol\":5947:5964  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Coupon.sol\":5947:5974  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_82\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_82:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Coupon.sol\":6021:6023  to */\n      dup8\n        /* \"contracts/Coupon.sol\":5990:6036  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coupon.sol\":6015:6019  from */\n      dup10\n        /* \"contracts/Coupon.sol\":5990:6036  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Coupon.sol\":6005:6013  operator */\n      dup6\n        /* \"contracts/Coupon.sol\":5990:6036  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"contracts/Coupon.sol\":6025:6027  id */\n      dup11\n        /* \"contracts/Coupon.sol\":6029:6035  amount */\n      dup11\n        /* \"contracts/Coupon.sol\":5990:6036  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_83\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Coupon.sol\":6047:6106  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_84\n        /* \"contracts/Coupon.sol\":6067:6075  operator */\n      dup5\n        /* \"contracts/Coupon.sol\":6077:6081  from */\n      dup11\n        /* \"contracts/Coupon.sol\":6083:6085  to */\n      dup11\n        /* \"contracts/Coupon.sol\":6087:6090  ids */\n      dup7\n        /* \"contracts/Coupon.sol\":6092:6099  amounts */\n      dup7\n        /* \"contracts/Coupon.sol\":6101:6105  data */\n      dup11\n        /* \"contracts/Coupon.sol\":6047:6066  _afterTokenTransfer */\n      tag_70\n        /* \"contracts/Coupon.sol\":6047:6106  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/Coupon.sol\":5374:6113  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Coupon.sol\":5211:6113  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coupon.sol\":3671:3758  function _msgSender() private view returns (address) {... */\n    tag_50:\n        /* \"contracts/Coupon.sol\":3715:3722  address */\n      0x00\n        /* \"contracts/Coupon.sol\":3741:3751  msg.sender */\n      caller\n        /* \"contracts/Coupon.sol\":3734:3751  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":3671:3758  function _msgSender() private view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Coupon.sol\":11393:11614  function _asSingletonArray(uint256 element)... */\n    tag_61:\n        /* \"contracts/Coupon.sol\":11483:11499  uint256[] memory */\n      0x60\n        /* \"contracts/Coupon.sol\":11515:11537  uint256[] memory array */\n      0x00\n        /* \"contracts/Coupon.sol\":11554:11555  1 */\n      0x01\n        /* \"contracts/Coupon.sol\":11540:11556  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_87\n      jumpi\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n    tag_87:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_90:\n      pop\n        /* \"contracts/Coupon.sol\":11515:11556  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/Coupon.sol\":11577:11584  element */\n      dup3\n        /* \"contracts/Coupon.sol\":11566:11571  array */\n      dup2\n        /* \"contracts/Coupon.sol\":11572:11573  0 */\n      0x00\n        /* \"contracts/Coupon.sol\":11566:11574  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_91\n      jumpi\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n    tag_91:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Coupon.sol\":11566:11584  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Coupon.sol\":11602:11607  array */\n      dup1\n        /* \"contracts/Coupon.sol\":11595:11607  return array */\n      swap2\n      pop\n      pop\n        /* \"contracts/Coupon.sol\":11393:11614  function _asSingletonArray(uint256 element)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Coupon.sol\":10027:10241  function _beforeTokenTransfer(... */\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Coupon.sol\":11174:11387  function _afterTokenTransfer(... */\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_97:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_99\n        /* \"#utility.yul\":125:173   */\n      tag_100\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":109:174   */\n      tag_102\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":249:361   */\n    tag_103:\n        /* \"#utility.yul\":370:411   */\n      tag_106\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_108:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_110\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_112:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":652:774   */\n    tag_114:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_117\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_97\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_118:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_120\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:2159   */\n    tag_26:\n        /* \"#utility.yul\":1174:1180   */\n      0x00\n        /* \"#utility.yul\":1182:1188   */\n      dup1\n        /* \"#utility.yul\":1190:1196   */\n      0x00\n        /* \"#utility.yul\":1198:1204   */\n      dup1\n        /* \"#utility.yul\":1206:1212   */\n      0x00\n        /* \"#utility.yul\":1255:1258   */\n      0xa0\n        /* \"#utility.yul\":1243:1252   */\n      dup7\n        /* \"#utility.yul\":1234:1241   */\n      dup9\n        /* \"#utility.yul\":1230:1253   */\n      sub\n        /* \"#utility.yul\":1226:1259   */\n      slt\n        /* \"#utility.yul\":1223:1343   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":1262:1341   */\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1223:1343   */\n    tag_123:\n        /* \"#utility.yul\":1382:1383   */\n      0x00\n        /* \"#utility.yul\":1407:1460   */\n      tag_126\n        /* \"#utility.yul\":1452:1459   */\n      dup9\n        /* \"#utility.yul\":1443:1449   */\n      dup3\n        /* \"#utility.yul\":1432:1441   */\n      dup10\n        /* \"#utility.yul\":1428:1450   */\n      add\n        /* \"#utility.yul\":1407:1460   */\n      tag_108\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1397:1460   */\n      swap6\n      pop\n        /* \"#utility.yul\":1353:1470   */\n      pop\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1535:1588   */\n      tag_127\n        /* \"#utility.yul\":1580:1587   */\n      dup9\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup10\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_108\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1525:1588   */\n      swap5\n      pop\n        /* \"#utility.yul\":1480:1598   */\n      pop\n        /* \"#utility.yul\":1637:1639   */\n      0x40\n        /* \"#utility.yul\":1663:1716   */\n      tag_128\n        /* \"#utility.yul\":1708:1715   */\n      dup9\n        /* \"#utility.yul\":1699:1705   */\n      dup3\n        /* \"#utility.yul\":1688:1697   */\n      dup10\n        /* \"#utility.yul\":1684:1706   */\n      add\n        /* \"#utility.yul\":1663:1716   */\n      tag_118\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1653:1716   */\n      swap4\n      pop\n        /* \"#utility.yul\":1608:1726   */\n      pop\n        /* \"#utility.yul\":1765:1767   */\n      0x60\n        /* \"#utility.yul\":1791:1844   */\n      tag_129\n        /* \"#utility.yul\":1836:1843   */\n      dup9\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup10\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_118\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1781:1844   */\n      swap3\n      pop\n        /* \"#utility.yul\":1736:1854   */\n      pop\n        /* \"#utility.yul\":1921:1924   */\n      0x80\n        /* \"#utility.yul\":1910:1919   */\n      dup7\n        /* \"#utility.yul\":1906:1925   */\n      add\n        /* \"#utility.yul\":1893:1926   */\n      calldataload\n        /* \"#utility.yul\":1953:1971   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1945:1951   */\n      dup2\n        /* \"#utility.yul\":1942:1972   */\n      gt\n        /* \"#utility.yul\":1939:2056   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":1975:2054   */\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1939:2056   */\n    tag_130:\n        /* \"#utility.yul\":2080:2142   */\n      tag_133\n        /* \"#utility.yul\":2134:2141   */\n      dup9\n        /* \"#utility.yul\":2125:2131   */\n      dup3\n        /* \"#utility.yul\":2114:2123   */\n      dup10\n        /* \"#utility.yul\":2110:2132   */\n      add\n        /* \"#utility.yul\":2080:2142   */\n      tag_112\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2070:2142   */\n      swap2\n      pop\n        /* \"#utility.yul\":1864:2152   */\n      pop\n        /* \"#utility.yul\":1070:2159   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2165:2639   */\n    tag_10:\n        /* \"#utility.yul\":2233:2239   */\n      0x00\n        /* \"#utility.yul\":2241:2247   */\n      dup1\n        /* \"#utility.yul\":2290:2292   */\n      0x40\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2269:2276   */\n      dup6\n        /* \"#utility.yul\":2265:2288   */\n      sub\n        /* \"#utility.yul\":2261:2293   */\n      slt\n        /* \"#utility.yul\":2258:2377   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":2296:2375   */\n      tag_136\n      tag_125\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2258:2377   */\n    tag_135:\n        /* \"#utility.yul\":2416:2417   */\n      0x00\n        /* \"#utility.yul\":2441:2494   */\n      tag_137\n        /* \"#utility.yul\":2486:2493   */\n      dup6\n        /* \"#utility.yul\":2477:2483   */\n      dup3\n        /* \"#utility.yul\":2466:2475   */\n      dup7\n        /* \"#utility.yul\":2462:2484   */\n      add\n        /* \"#utility.yul\":2441:2494   */\n      tag_108\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2431:2494   */\n      swap3\n      pop\n        /* \"#utility.yul\":2387:2504   */\n      pop\n        /* \"#utility.yul\":2543:2545   */\n      0x20\n        /* \"#utility.yul\":2569:2622   */\n      tag_138\n        /* \"#utility.yul\":2614:2621   */\n      dup6\n        /* \"#utility.yul\":2605:2611   */\n      dup3\n        /* \"#utility.yul\":2594:2603   */\n      dup7\n        /* \"#utility.yul\":2590:2612   */\n      add\n        /* \"#utility.yul\":2569:2622   */\n      tag_118\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2559:2622   */\n      swap2\n      pop\n        /* \"#utility.yul\":2514:2632   */\n      pop\n        /* \"#utility.yul\":2165:2639   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2645:2974   */\n    tag_16:\n        /* \"#utility.yul\":2704:2710   */\n      0x00\n        /* \"#utility.yul\":2753:2755   */\n      0x20\n        /* \"#utility.yul\":2741:2750   */\n      dup3\n        /* \"#utility.yul\":2732:2739   */\n      dup5\n        /* \"#utility.yul\":2728:2751   */\n      sub\n        /* \"#utility.yul\":2724:2756   */\n      slt\n        /* \"#utility.yul\":2721:2840   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":2759:2838   */\n      tag_141\n      tag_125\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2721:2840   */\n    tag_140:\n        /* \"#utility.yul\":2879:2880   */\n      0x00\n        /* \"#utility.yul\":2904:2957   */\n      tag_142\n        /* \"#utility.yul\":2949:2956   */\n      dup5\n        /* \"#utility.yul\":2940:2946   */\n      dup3\n        /* \"#utility.yul\":2929:2938   */\n      dup6\n        /* \"#utility.yul\":2925:2947   */\n      add\n        /* \"#utility.yul\":2904:2957   */\n      tag_118\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2894:2957   */\n      swap2\n      pop\n        /* \"#utility.yul\":2850:2967   */\n      pop\n        /* \"#utility.yul\":2645:2974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2980:3454   */\n    tag_22:\n        /* \"#utility.yul\":3048:3054   */\n      0x00\n        /* \"#utility.yul\":3056:3062   */\n      dup1\n        /* \"#utility.yul\":3105:3107   */\n      0x40\n        /* \"#utility.yul\":3093:3102   */\n      dup4\n        /* \"#utility.yul\":3084:3091   */\n      dup6\n        /* \"#utility.yul\":3080:3103   */\n      sub\n        /* \"#utility.yul\":3076:3108   */\n      slt\n        /* \"#utility.yul\":3073:3192   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":3111:3190   */\n      tag_145\n      tag_125\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3073:3192   */\n    tag_144:\n        /* \"#utility.yul\":3231:3232   */\n      0x00\n        /* \"#utility.yul\":3256:3309   */\n      tag_146\n        /* \"#utility.yul\":3301:3308   */\n      dup6\n        /* \"#utility.yul\":3292:3298   */\n      dup3\n        /* \"#utility.yul\":3281:3290   */\n      dup7\n        /* \"#utility.yul\":3277:3299   */\n      add\n        /* \"#utility.yul\":3256:3309   */\n      tag_118\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3246:3309   */\n      swap3\n      pop\n        /* \"#utility.yul\":3202:3319   */\n      pop\n        /* \"#utility.yul\":3358:3360   */\n      0x20\n        /* \"#utility.yul\":3384:3437   */\n      tag_147\n        /* \"#utility.yul\":3429:3436   */\n      dup6\n        /* \"#utility.yul\":3420:3426   */\n      dup3\n        /* \"#utility.yul\":3409:3418   */\n      dup7\n        /* \"#utility.yul\":3405:3427   */\n      add\n        /* \"#utility.yul\":3384:3437   */\n      tag_118\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3374:3437   */\n      swap2\n      pop\n        /* \"#utility.yul\":3329:3447   */\n      pop\n        /* \"#utility.yul\":2980:3454   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3460:3824   */\n    tag_148:\n        /* \"#utility.yul\":3548:3551   */\n      0x00\n        /* \"#utility.yul\":3576:3615   */\n      tag_150\n        /* \"#utility.yul\":3609:3614   */\n      dup3\n        /* \"#utility.yul\":3576:3615   */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3631:3702   */\n      tag_152\n        /* \"#utility.yul\":3695:3701   */\n      dup2\n        /* \"#utility.yul\":3690:3693   */\n      dup6\n        /* \"#utility.yul\":3631:3702   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3624:3702   */\n      swap4\n      pop\n        /* \"#utility.yul\":3711:3763   */\n      tag_154\n        /* \"#utility.yul\":3756:3762   */\n      dup2\n        /* \"#utility.yul\":3751:3754   */\n      dup6\n        /* \"#utility.yul\":3744:3748   */\n      0x20\n        /* \"#utility.yul\":3737:3742   */\n      dup7\n        /* \"#utility.yul\":3733:3749   */\n      add\n        /* \"#utility.yul\":3711:3763   */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3788:3817   */\n      tag_156\n        /* \"#utility.yul\":3810:3816   */\n      dup2\n        /* \"#utility.yul\":3788:3817   */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3783:3786   */\n      dup5\n        /* \"#utility.yul\":3779:3818   */\n      add\n        /* \"#utility.yul\":3772:3818   */\n      swap2\n      pop\n        /* \"#utility.yul\":3552:3824   */\n      pop\n        /* \"#utility.yul\":3460:3824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3830:4196   */\n    tag_158:\n        /* \"#utility.yul\":3972:3975   */\n      0x00\n        /* \"#utility.yul\":3993:4060   */\n      tag_160\n        /* \"#utility.yul\":4057:4059   */\n      0x2f\n        /* \"#utility.yul\":4052:4055   */\n      dup4\n        /* \"#utility.yul\":3993:4060   */\n      tag_153\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3986:4060   */\n      swap2\n      pop\n        /* \"#utility.yul\":4069:4162   */\n      tag_161\n        /* \"#utility.yul\":4158:4161   */\n      dup3\n        /* \"#utility.yul\":4069:4162   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4187:4189   */\n      0x40\n        /* \"#utility.yul\":4182:4185   */\n      dup3\n        /* \"#utility.yul\":4178:4190   */\n      add\n        /* \"#utility.yul\":4171:4190   */\n      swap1\n      pop\n        /* \"#utility.yul\":3830:4196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4202:4568   */\n    tag_163:\n        /* \"#utility.yul\":4344:4347   */\n      0x00\n        /* \"#utility.yul\":4365:4432   */\n      tag_165\n        /* \"#utility.yul\":4429:4431   */\n      0x2a\n        /* \"#utility.yul\":4424:4427   */\n      dup4\n        /* \"#utility.yul\":4365:4432   */\n      tag_153\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4358:4432   */\n      swap2\n      pop\n        /* \"#utility.yul\":4441:4534   */\n      tag_166\n        /* \"#utility.yul\":4530:4533   */\n      dup3\n        /* \"#utility.yul\":4441:4534   */\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4559:4561   */\n      0x40\n        /* \"#utility.yul\":4554:4557   */\n      dup3\n        /* \"#utility.yul\":4550:4562   */\n      add\n        /* \"#utility.yul\":4543:4562   */\n      swap1\n      pop\n        /* \"#utility.yul\":4202:4568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4574:4940   */\n    tag_168:\n        /* \"#utility.yul\":4716:4719   */\n      0x00\n        /* \"#utility.yul\":4737:4804   */\n      tag_170\n        /* \"#utility.yul\":4801:4803   */\n      0x25\n        /* \"#utility.yul\":4796:4799   */\n      dup4\n        /* \"#utility.yul\":4737:4804   */\n      tag_153\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4730:4804   */\n      swap2\n      pop\n        /* \"#utility.yul\":4813:4906   */\n      tag_171\n        /* \"#utility.yul\":4902:4905   */\n      dup3\n        /* \"#utility.yul\":4813:4906   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4931:4933   */\n      0x40\n        /* \"#utility.yul\":4926:4929   */\n      dup3\n        /* \"#utility.yul\":4922:4934   */\n      add\n        /* \"#utility.yul\":4915:4934   */\n      swap1\n      pop\n        /* \"#utility.yul\":4574:4940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4946:5312   */\n    tag_173:\n        /* \"#utility.yul\":5088:5091   */\n      0x00\n        /* \"#utility.yul\":5109:5176   */\n      tag_175\n        /* \"#utility.yul\":5173:5175   */\n      0x2a\n        /* \"#utility.yul\":5168:5171   */\n      dup4\n        /* \"#utility.yul\":5109:5176   */\n      tag_153\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5102:5176   */\n      swap2\n      pop\n        /* \"#utility.yul\":5185:5278   */\n      tag_176\n        /* \"#utility.yul\":5274:5277   */\n      dup3\n        /* \"#utility.yul\":5185:5278   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5303:5305   */\n      0x40\n        /* \"#utility.yul\":5298:5301   */\n      dup3\n        /* \"#utility.yul\":5294:5306   */\n      add\n        /* \"#utility.yul\":5287:5306   */\n      swap1\n      pop\n        /* \"#utility.yul\":4946:5312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5318:5684   */\n    tag_178:\n        /* \"#utility.yul\":5460:5463   */\n      0x00\n        /* \"#utility.yul\":5481:5548   */\n      tag_180\n        /* \"#utility.yul\":5545:5547   */\n      0x21\n        /* \"#utility.yul\":5540:5543   */\n      dup4\n        /* \"#utility.yul\":5481:5548   */\n      tag_153\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5474:5548   */\n      swap2\n      pop\n        /* \"#utility.yul\":5557:5650   */\n      tag_181\n        /* \"#utility.yul\":5646:5649   */\n      dup3\n        /* \"#utility.yul\":5557:5650   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5675:5677   */\n      0x40\n        /* \"#utility.yul\":5670:5673   */\n      dup3\n        /* \"#utility.yul\":5666:5678   */\n      add\n        /* \"#utility.yul\":5659:5678   */\n      swap1\n      pop\n        /* \"#utility.yul\":5318:5684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5690:5808   */\n    tag_183:\n        /* \"#utility.yul\":5777:5801   */\n      tag_185\n        /* \"#utility.yul\":5795:5800   */\n      dup2\n        /* \"#utility.yul\":5777:5801   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5772:5775   */\n      dup3\n        /* \"#utility.yul\":5765:5802   */\n      mstore\n        /* \"#utility.yul\":5690:5808   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5814:6127   */\n    tag_19:\n        /* \"#utility.yul\":5927:5931   */\n      0x00\n        /* \"#utility.yul\":5965:5967   */\n      0x20\n        /* \"#utility.yul\":5954:5963   */\n      dup3\n        /* \"#utility.yul\":5950:5968   */\n      add\n        /* \"#utility.yul\":5942:5968   */\n      swap1\n      pop\n        /* \"#utility.yul\":6014:6023   */\n      dup2\n        /* \"#utility.yul\":6008:6012   */\n      dup2\n        /* \"#utility.yul\":6004:6024   */\n      sub\n        /* \"#utility.yul\":6000:6001   */\n      0x00\n        /* \"#utility.yul\":5989:5998   */\n      dup4\n        /* \"#utility.yul\":5985:6002   */\n      add\n        /* \"#utility.yul\":5978:6025   */\n      mstore\n        /* \"#utility.yul\":6042:6120   */\n      tag_188\n        /* \"#utility.yul\":6115:6119   */\n      dup2\n        /* \"#utility.yul\":6106:6112   */\n      dup5\n        /* \"#utility.yul\":6042:6120   */\n      tag_148\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6034:6120   */\n      swap1\n      pop\n        /* \"#utility.yul\":5814:6127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6133:6552   */\n    tag_53:\n        /* \"#utility.yul\":6299:6303   */\n      0x00\n        /* \"#utility.yul\":6337:6339   */\n      0x20\n        /* \"#utility.yul\":6326:6335   */\n      dup3\n        /* \"#utility.yul\":6322:6340   */\n      add\n        /* \"#utility.yul\":6314:6340   */\n      swap1\n      pop\n        /* \"#utility.yul\":6386:6395   */\n      dup2\n        /* \"#utility.yul\":6380:6384   */\n      dup2\n        /* \"#utility.yul\":6376:6396   */\n      sub\n        /* \"#utility.yul\":6372:6373   */\n      0x00\n        /* \"#utility.yul\":6361:6370   */\n      dup4\n        /* \"#utility.yul\":6357:6374   */\n      add\n        /* \"#utility.yul\":6350:6397   */\n      mstore\n        /* \"#utility.yul\":6414:6545   */\n      tag_190\n        /* \"#utility.yul\":6540:6544   */\n      dup2\n        /* \"#utility.yul\":6414:6545   */\n      tag_158\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6406:6545   */\n      swap1\n      pop\n        /* \"#utility.yul\":6133:6552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6558:6977   */\n    tag_34:\n        /* \"#utility.yul\":6724:6728   */\n      0x00\n        /* \"#utility.yul\":6762:6764   */\n      0x20\n        /* \"#utility.yul\":6751:6760   */\n      dup3\n        /* \"#utility.yul\":6747:6765   */\n      add\n        /* \"#utility.yul\":6739:6765   */\n      swap1\n      pop\n        /* \"#utility.yul\":6811:6820   */\n      dup2\n        /* \"#utility.yul\":6805:6809   */\n      dup2\n        /* \"#utility.yul\":6801:6821   */\n      sub\n        /* \"#utility.yul\":6797:6798   */\n      0x00\n        /* \"#utility.yul\":6786:6795   */\n      dup4\n        /* \"#utility.yul\":6782:6799   */\n      add\n        /* \"#utility.yul\":6775:6822   */\n      mstore\n        /* \"#utility.yul\":6839:6970   */\n      tag_192\n        /* \"#utility.yul\":6965:6969   */\n      dup2\n        /* \"#utility.yul\":6839:6970   */\n      tag_163\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6831:6970   */\n      swap1\n      pop\n        /* \"#utility.yul\":6558:6977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6983:7402   */\n    tag_74:\n        /* \"#utility.yul\":7149:7153   */\n      0x00\n        /* \"#utility.yul\":7187:7189   */\n      0x20\n        /* \"#utility.yul\":7176:7185   */\n      dup3\n        /* \"#utility.yul\":7172:7190   */\n      add\n        /* \"#utility.yul\":7164:7190   */\n      swap1\n      pop\n        /* \"#utility.yul\":7236:7245   */\n      dup2\n        /* \"#utility.yul\":7230:7234   */\n      dup2\n        /* \"#utility.yul\":7226:7246   */\n      sub\n        /* \"#utility.yul\":7222:7223   */\n      0x00\n        /* \"#utility.yul\":7211:7220   */\n      dup4\n        /* \"#utility.yul\":7207:7224   */\n      add\n        /* \"#utility.yul\":7200:7247   */\n      mstore\n        /* \"#utility.yul\":7264:7395   */\n      tag_194\n        /* \"#utility.yul\":7390:7394   */\n      dup2\n        /* \"#utility.yul\":7264:7395   */\n      tag_168\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7256:7395   */\n      swap1\n      pop\n        /* \"#utility.yul\":6983:7402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7408:7827   */\n    tag_81:\n        /* \"#utility.yul\":7574:7578   */\n      0x00\n        /* \"#utility.yul\":7612:7614   */\n      0x20\n        /* \"#utility.yul\":7601:7610   */\n      dup3\n        /* \"#utility.yul\":7597:7615   */\n      add\n        /* \"#utility.yul\":7589:7615   */\n      swap1\n      pop\n        /* \"#utility.yul\":7661:7670   */\n      dup2\n        /* \"#utility.yul\":7655:7659   */\n      dup2\n        /* \"#utility.yul\":7651:7671   */\n      sub\n        /* \"#utility.yul\":7647:7648   */\n      0x00\n        /* \"#utility.yul\":7636:7645   */\n      dup4\n        /* \"#utility.yul\":7632:7649   */\n      add\n        /* \"#utility.yul\":7625:7672   */\n      mstore\n        /* \"#utility.yul\":7689:7820   */\n      tag_196\n        /* \"#utility.yul\":7815:7819   */\n      dup2\n        /* \"#utility.yul\":7689:7820   */\n      tag_173\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7681:7820   */\n      swap1\n      pop\n        /* \"#utility.yul\":7408:7827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7833:8252   */\n    tag_58:\n        /* \"#utility.yul\":7999:8003   */\n      0x00\n        /* \"#utility.yul\":8037:8039   */\n      0x20\n        /* \"#utility.yul\":8026:8035   */\n      dup3\n        /* \"#utility.yul\":8022:8040   */\n      add\n        /* \"#utility.yul\":8014:8040   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8095   */\n      dup2\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8096   */\n      sub\n        /* \"#utility.yul\":8072:8073   */\n      0x00\n        /* \"#utility.yul\":8061:8070   */\n      dup4\n        /* \"#utility.yul\":8057:8074   */\n      add\n        /* \"#utility.yul\":8050:8097   */\n      mstore\n        /* \"#utility.yul\":8114:8245   */\n      tag_198\n        /* \"#utility.yul\":8240:8244   */\n      dup2\n        /* \"#utility.yul\":8114:8245   */\n      tag_178\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":8106:8245   */\n      swap1\n      pop\n        /* \"#utility.yul\":7833:8252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8258:8480   */\n    tag_13:\n        /* \"#utility.yul\":8351:8355   */\n      0x00\n        /* \"#utility.yul\":8389:8391   */\n      0x20\n        /* \"#utility.yul\":8378:8387   */\n      dup3\n        /* \"#utility.yul\":8374:8392   */\n      add\n        /* \"#utility.yul\":8366:8392   */\n      swap1\n      pop\n        /* \"#utility.yul\":8402:8473   */\n      tag_200\n        /* \"#utility.yul\":8470:8471   */\n      0x00\n        /* \"#utility.yul\":8459:8468   */\n      dup4\n        /* \"#utility.yul\":8455:8472   */\n      add\n        /* \"#utility.yul\":8446:8452   */\n      dup5\n        /* \"#utility.yul\":8402:8473   */\n      tag_183\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8258:8480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8486:8818   */\n    tag_68:\n        /* \"#utility.yul\":8607:8611   */\n      0x00\n        /* \"#utility.yul\":8645:8647   */\n      0x40\n        /* \"#utility.yul\":8634:8643   */\n      dup3\n        /* \"#utility.yul\":8630:8648   */\n      add\n        /* \"#utility.yul\":8622:8648   */\n      swap1\n      pop\n        /* \"#utility.yul\":8658:8729   */\n      tag_202\n        /* \"#utility.yul\":8726:8727   */\n      0x00\n        /* \"#utility.yul\":8715:8724   */\n      dup4\n        /* \"#utility.yul\":8711:8728   */\n      add\n        /* \"#utility.yul\":8702:8708   */\n      dup6\n        /* \"#utility.yul\":8658:8729   */\n      tag_183\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":8739:8811   */\n      tag_203\n        /* \"#utility.yul\":8807:8809   */\n      0x20\n        /* \"#utility.yul\":8796:8805   */\n      dup4\n        /* \"#utility.yul\":8792:8810   */\n      add\n        /* \"#utility.yul\":8783:8789   */\n      dup5\n        /* \"#utility.yul\":8739:8811   */\n      tag_183\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8486:8818   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8824:8953   */\n    tag_102:\n        /* \"#utility.yul\":8858:8864   */\n      0x00\n        /* \"#utility.yul\":8885:8905   */\n      tag_205\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8875:8905   */\n      swap1\n      pop\n        /* \"#utility.yul\":8914:8947   */\n      tag_207\n        /* \"#utility.yul\":8942:8946   */\n      dup3\n        /* \"#utility.yul\":8934:8940   */\n      dup3\n        /* \"#utility.yul\":8914:8947   */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":8824:8953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8959:9034   */\n    tag_206:\n        /* \"#utility.yul\":8992:8998   */\n      0x00\n        /* \"#utility.yul\":9025:9027   */\n      0x40\n        /* \"#utility.yul\":9019:9028   */\n      mload\n        /* \"#utility.yul\":9009:9028   */\n      swap1\n      pop\n        /* \"#utility.yul\":8959:9034   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9040:9347   */\n    tag_101:\n        /* \"#utility.yul\":9101:9105   */\n      0x00\n        /* \"#utility.yul\":9191:9209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9183:9189   */\n      dup3\n        /* \"#utility.yul\":9180:9210   */\n      gt\n        /* \"#utility.yul\":9177:9233   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":9213:9231   */\n      tag_212\n      tag_89\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":9177:9233   */\n    tag_211:\n        /* \"#utility.yul\":9251:9280   */\n      tag_213\n        /* \"#utility.yul\":9273:9279   */\n      dup3\n        /* \"#utility.yul\":9251:9280   */\n      tag_157\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":9243:9280   */\n      swap1\n      pop\n        /* \"#utility.yul\":9335:9339   */\n      0x20\n        /* \"#utility.yul\":9329:9333   */\n      dup2\n        /* \"#utility.yul\":9325:9340   */\n      add\n        /* \"#utility.yul\":9317:9340   */\n      swap1\n      pop\n        /* \"#utility.yul\":9040:9347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9353:9452   */\n    tag_151:\n        /* \"#utility.yul\":9405:9411   */\n      0x00\n        /* \"#utility.yul\":9439:9444   */\n      dup2\n        /* \"#utility.yul\":9433:9445   */\n      mload\n        /* \"#utility.yul\":9423:9445   */\n      swap1\n      pop\n        /* \"#utility.yul\":9353:9452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9458:9627   */\n    tag_153:\n        /* \"#utility.yul\":9542:9553   */\n      0x00\n        /* \"#utility.yul\":9576:9582   */\n      dup3\n        /* \"#utility.yul\":9571:9574   */\n      dup3\n        /* \"#utility.yul\":9564:9583   */\n      mstore\n        /* \"#utility.yul\":9616:9620   */\n      0x20\n        /* \"#utility.yul\":9611:9614   */\n      dup3\n        /* \"#utility.yul\":9607:9621   */\n      add\n        /* \"#utility.yul\":9592:9621   */\n      swap1\n      pop\n        /* \"#utility.yul\":9458:9627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9633:9938   */\n    tag_66:\n        /* \"#utility.yul\":9673:9676   */\n      0x00\n        /* \"#utility.yul\":9692:9712   */\n      tag_217\n        /* \"#utility.yul\":9710:9711   */\n      dup3\n        /* \"#utility.yul\":9692:9712   */\n      tag_186\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":9687:9712   */\n      swap2\n      pop\n        /* \"#utility.yul\":9726:9746   */\n      tag_218\n        /* \"#utility.yul\":9744:9745   */\n      dup4\n        /* \"#utility.yul\":9726:9746   */\n      tag_186\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":9721:9746   */\n      swap3\n      pop\n        /* \"#utility.yul\":9880:9881   */\n      dup3\n        /* \"#utility.yul\":9812:9878   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9808:9882   */\n      sub\n        /* \"#utility.yul\":9805:9806   */\n      dup3\n        /* \"#utility.yul\":9802:9883   */\n      gt\n        /* \"#utility.yul\":9799:9906   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":9886:9904   */\n      tag_220\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":9799:9906   */\n    tag_219:\n        /* \"#utility.yul\":9930:9931   */\n      dup3\n        /* \"#utility.yul\":9927:9928   */\n      dup3\n        /* \"#utility.yul\":9923:9932   */\n      add\n        /* \"#utility.yul\":9916:9932   */\n      swap1\n      pop\n        /* \"#utility.yul\":9633:9938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9944:10040   */\n    tag_222:\n        /* \"#utility.yul\":9981:9988   */\n      0x00\n        /* \"#utility.yul\":10010:10034   */\n      tag_224\n        /* \"#utility.yul\":10028:10033   */\n      dup3\n        /* \"#utility.yul\":10010:10034   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":9999:10034   */\n      swap1\n      pop\n        /* \"#utility.yul\":9944:10040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10046:10172   */\n    tag_225:\n        /* \"#utility.yul\":10083:10090   */\n      0x00\n        /* \"#utility.yul\":10123:10165   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10116:10121   */\n      dup3\n        /* \"#utility.yul\":10112:10166   */\n      and\n        /* \"#utility.yul\":10101:10166   */\n      swap1\n      pop\n        /* \"#utility.yul\":10046:10172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10178:10255   */\n    tag_186:\n        /* \"#utility.yul\":10215:10222   */\n      0x00\n        /* \"#utility.yul\":10244:10249   */\n      dup2\n        /* \"#utility.yul\":10233:10249   */\n      swap1\n      pop\n        /* \"#utility.yul\":10178:10255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10261:10415   */\n    tag_107:\n        /* \"#utility.yul\":10345:10351   */\n      dup3\n        /* \"#utility.yul\":10340:10343   */\n      dup2\n        /* \"#utility.yul\":10335:10338   */\n      dup4\n        /* \"#utility.yul\":10322:10352   */\n      calldatacopy\n        /* \"#utility.yul\":10407:10408   */\n      0x00\n        /* \"#utility.yul\":10398:10404   */\n      dup4\n        /* \"#utility.yul\":10393:10396   */\n      dup4\n        /* \"#utility.yul\":10389:10405   */\n      add\n        /* \"#utility.yul\":10382:10409   */\n      mstore\n        /* \"#utility.yul\":10261:10415   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10421:10728   */\n    tag_155:\n        /* \"#utility.yul\":10489:10490   */\n      0x00\n        /* \"#utility.yul\":10499:10612   */\n    tag_230:\n        /* \"#utility.yul\":10513:10519   */\n      dup4\n        /* \"#utility.yul\":10510:10511   */\n      dup2\n        /* \"#utility.yul\":10507:10520   */\n      lt\n        /* \"#utility.yul\":10499:10612   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":10598:10599   */\n      dup1\n        /* \"#utility.yul\":10593:10596   */\n      dup3\n        /* \"#utility.yul\":10589:10600   */\n      add\n        /* \"#utility.yul\":10583:10601   */\n      mload\n        /* \"#utility.yul\":10579:10580   */\n      dup2\n        /* \"#utility.yul\":10574:10577   */\n      dup5\n        /* \"#utility.yul\":10570:10581   */\n      add\n        /* \"#utility.yul\":10563:10602   */\n      mstore\n        /* \"#utility.yul\":10535:10537   */\n      0x20\n        /* \"#utility.yul\":10532:10533   */\n      dup2\n        /* \"#utility.yul\":10528:10538   */\n      add\n        /* \"#utility.yul\":10523:10538   */\n      swap1\n      pop\n        /* \"#utility.yul\":10499:10612   */\n      jump(tag_230)\n    tag_232:\n        /* \"#utility.yul\":10630:10636   */\n      dup4\n        /* \"#utility.yul\":10627:10628   */\n      dup2\n        /* \"#utility.yul\":10624:10637   */\n      gt\n        /* \"#utility.yul\":10621:10722   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":10710:10711   */\n      0x00\n        /* \"#utility.yul\":10701:10707   */\n      dup5\n        /* \"#utility.yul\":10696:10699   */\n      dup5\n        /* \"#utility.yul\":10692:10708   */\n      add\n        /* \"#utility.yul\":10685:10712   */\n      mstore\n        /* \"#utility.yul\":10621:10722   */\n    tag_233:\n        /* \"#utility.yul\":10470:10728   */\n      pop\n        /* \"#utility.yul\":10421:10728   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10734:11054   */\n    tag_37:\n        /* \"#utility.yul\":10778:10784   */\n      0x00\n        /* \"#utility.yul\":10815:10816   */\n      0x02\n        /* \"#utility.yul\":10809:10813   */\n      dup3\n        /* \"#utility.yul\":10805:10817   */\n      div\n        /* \"#utility.yul\":10795:10817   */\n      swap1\n      pop\n        /* \"#utility.yul\":10862:10863   */\n      0x01\n        /* \"#utility.yul\":10856:10860   */\n      dup3\n        /* \"#utility.yul\":10852:10864   */\n      and\n        /* \"#utility.yul\":10883:10901   */\n      dup1\n        /* \"#utility.yul\":10873:10954   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":10939:10943   */\n      0x7f\n        /* \"#utility.yul\":10931:10937   */\n      dup3\n        /* \"#utility.yul\":10927:10944   */\n      and\n        /* \"#utility.yul\":10917:10944   */\n      swap2\n      pop\n        /* \"#utility.yul\":10873:10954   */\n    tag_235:\n        /* \"#utility.yul\":11001:11003   */\n      0x20\n        /* \"#utility.yul\":10993:10999   */\n      dup3\n        /* \"#utility.yul\":10990:11004   */\n      lt\n        /* \"#utility.yul\":10970:10988   */\n      dup2\n        /* \"#utility.yul\":10967:11005   */\n      eq\n        /* \"#utility.yul\":10964:11048   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":11020:11038   */\n      tag_237\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":10964:11048   */\n    tag_236:\n        /* \"#utility.yul\":10785:11054   */\n      pop\n        /* \"#utility.yul\":10734:11054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11060:11341   */\n    tag_208:\n        /* \"#utility.yul\":11143:11170   */\n      tag_240\n        /* \"#utility.yul\":11165:11169   */\n      dup3\n        /* \"#utility.yul\":11143:11170   */\n      tag_157\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":11135:11141   */\n      dup2\n        /* \"#utility.yul\":11131:11171   */\n      add\n        /* \"#utility.yul\":11273:11279   */\n      dup2\n        /* \"#utility.yul\":11261:11271   */\n      dup2\n        /* \"#utility.yul\":11258:11280   */\n      lt\n        /* \"#utility.yul\":11237:11255   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11225:11235   */\n      dup3\n        /* \"#utility.yul\":11222:11256   */\n      gt\n        /* \"#utility.yul\":11219:11281   */\n      or\n        /* \"#utility.yul\":11216:11304   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":11284:11302   */\n      tag_242\n      tag_89\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":11216:11304   */\n    tag_241:\n        /* \"#utility.yul\":11324:11334   */\n      dup1\n        /* \"#utility.yul\":11320:11322   */\n      0x40\n        /* \"#utility.yul\":11313:11335   */\n      mstore\n        /* \"#utility.yul\":11103:11341   */\n      pop\n        /* \"#utility.yul\":11060:11341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11347:11527   */\n    tag_221:\n        /* \"#utility.yul\":11395:11472   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11392:11393   */\n      0x00\n        /* \"#utility.yul\":11385:11473   */\n      mstore\n        /* \"#utility.yul\":11492:11496   */\n      0x11\n        /* \"#utility.yul\":11489:11490   */\n      0x04\n        /* \"#utility.yul\":11482:11497   */\n      mstore\n        /* \"#utility.yul\":11516:11520   */\n      0x24\n        /* \"#utility.yul\":11513:11514   */\n      0x00\n        /* \"#utility.yul\":11506:11521   */\n      revert\n        /* \"#utility.yul\":11533:11713   */\n    tag_238:\n        /* \"#utility.yul\":11581:11658   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11578:11579   */\n      0x00\n        /* \"#utility.yul\":11571:11659   */\n      mstore\n        /* \"#utility.yul\":11678:11682   */\n      0x22\n        /* \"#utility.yul\":11675:11676   */\n      0x04\n        /* \"#utility.yul\":11668:11683   */\n      mstore\n        /* \"#utility.yul\":11702:11706   */\n      0x24\n        /* \"#utility.yul\":11699:11700   */\n      0x00\n        /* \"#utility.yul\":11692:11707   */\n      revert\n        /* \"#utility.yul\":11719:11899   */\n    tag_93:\n        /* \"#utility.yul\":11767:11844   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11764:11765   */\n      0x00\n        /* \"#utility.yul\":11757:11845   */\n      mstore\n        /* \"#utility.yul\":11864:11868   */\n      0x32\n        /* \"#utility.yul\":11861:11862   */\n      0x04\n        /* \"#utility.yul\":11854:11869   */\n      mstore\n        /* \"#utility.yul\":11888:11892   */\n      0x24\n        /* \"#utility.yul\":11885:11886   */\n      0x00\n        /* \"#utility.yul\":11878:11893   */\n      revert\n        /* \"#utility.yul\":11905:12085   */\n    tag_89:\n        /* \"#utility.yul\":11953:12030   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11950:11951   */\n      0x00\n        /* \"#utility.yul\":11943:12031   */\n      mstore\n        /* \"#utility.yul\":12050:12054   */\n      0x41\n        /* \"#utility.yul\":12047:12048   */\n      0x04\n        /* \"#utility.yul\":12040:12055   */\n      mstore\n        /* \"#utility.yul\":12074:12078   */\n      0x24\n        /* \"#utility.yul\":12071:12072   */\n      0x00\n        /* \"#utility.yul\":12064:12079   */\n      revert\n        /* \"#utility.yul\":12091:12208   */\n    tag_116:\n        /* \"#utility.yul\":12200:12201   */\n      0x00\n        /* \"#utility.yul\":12197:12198   */\n      dup1\n        /* \"#utility.yul\":12190:12202   */\n      revert\n        /* \"#utility.yul\":12214:12331   */\n    tag_105:\n        /* \"#utility.yul\":12323:12324   */\n      0x00\n        /* \"#utility.yul\":12320:12321   */\n      dup1\n        /* \"#utility.yul\":12313:12325   */\n      revert\n        /* \"#utility.yul\":12337:12454   */\n    tag_132:\n        /* \"#utility.yul\":12446:12447   */\n      0x00\n        /* \"#utility.yul\":12443:12444   */\n      dup1\n        /* \"#utility.yul\":12436:12448   */\n      revert\n        /* \"#utility.yul\":12460:12577   */\n    tag_125:\n        /* \"#utility.yul\":12569:12570   */\n      0x00\n        /* \"#utility.yul\":12566:12567   */\n      dup1\n        /* \"#utility.yul\":12559:12571   */\n      revert\n        /* \"#utility.yul\":12583:12685   */\n    tag_157:\n        /* \"#utility.yul\":12624:12630   */\n      0x00\n        /* \"#utility.yul\":12675:12677   */\n      0x1f\n        /* \"#utility.yul\":12671:12678   */\n      not\n        /* \"#utility.yul\":12666:12668   */\n      0x1f\n        /* \"#utility.yul\":12659:12664   */\n      dup4\n        /* \"#utility.yul\":12655:12669   */\n      add\n        /* \"#utility.yul\":12651:12679   */\n      and\n        /* \"#utility.yul\":12641:12679   */\n      swap1\n      pop\n        /* \"#utility.yul\":12583:12685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12691:12925   */\n    tag_162:\n        /* \"#utility.yul\":12831:12865   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":12827:12828   */\n      0x00\n        /* \"#utility.yul\":12819:12825   */\n      dup3\n        /* \"#utility.yul\":12815:12829   */\n      add\n        /* \"#utility.yul\":12808:12866   */\n      mstore\n        /* \"#utility.yul\":12900:12917   */\n      0x6572206e6f7220617070726f7665640000000000000000000000000000000000\n        /* \"#utility.yul\":12895:12897   */\n      0x20\n        /* \"#utility.yul\":12887:12893   */\n      dup3\n        /* \"#utility.yul\":12883:12898   */\n      add\n        /* \"#utility.yul\":12876:12918   */\n      mstore\n        /* \"#utility.yul\":12691:12925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12931:13160   */\n    tag_167:\n        /* \"#utility.yul\":13071:13105   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":13067:13068   */\n      0x00\n        /* \"#utility.yul\":13059:13065   */\n      dup3\n        /* \"#utility.yul\":13055:13069   */\n      add\n        /* \"#utility.yul\":13048:13106   */\n      mstore\n        /* \"#utility.yul\":13140:13152   */\n      0x616c6964206f776e657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13135:13137   */\n      0x20\n        /* \"#utility.yul\":13127:13133   */\n      dup3\n        /* \"#utility.yul\":13123:13138   */\n      add\n        /* \"#utility.yul\":13116:13153   */\n      mstore\n        /* \"#utility.yul\":12931:13160   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13166:13390   */\n    tag_172:\n        /* \"#utility.yul\":13306:13340   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":13302:13303   */\n      0x00\n        /* \"#utility.yul\":13294:13300   */\n      dup3\n        /* \"#utility.yul\":13290:13304   */\n      add\n        /* \"#utility.yul\":13283:13341   */\n      mstore\n        /* \"#utility.yul\":13375:13382   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13370:13372   */\n      0x20\n        /* \"#utility.yul\":13362:13368   */\n      dup3\n        /* \"#utility.yul\":13358:13373   */\n      add\n        /* \"#utility.yul\":13351:13383   */\n      mstore\n        /* \"#utility.yul\":13166:13390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13396:13625   */\n    tag_177:\n        /* \"#utility.yul\":13536:13570   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":13532:13533   */\n      0x00\n        /* \"#utility.yul\":13524:13530   */\n      dup3\n        /* \"#utility.yul\":13520:13534   */\n      add\n        /* \"#utility.yul\":13513:13571   */\n      mstore\n        /* \"#utility.yul\":13605:13617   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13600:13602   */\n      0x20\n        /* \"#utility.yul\":13592:13598   */\n      dup3\n        /* \"#utility.yul\":13588:13603   */\n      add\n        /* \"#utility.yul\":13581:13618   */\n      mstore\n        /* \"#utility.yul\":13396:13625   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13631:13851   */\n    tag_182:\n        /* \"#utility.yul\":13771:13805   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":13767:13768   */\n      0x00\n        /* \"#utility.yul\":13759:13765   */\n      dup3\n        /* \"#utility.yul\":13755:13769   */\n      add\n        /* \"#utility.yul\":13748:13806   */\n      mstore\n        /* \"#utility.yul\":13840:13843   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13835:13837   */\n      0x20\n        /* \"#utility.yul\":13827:13833   */\n      dup3\n        /* \"#utility.yul\":13823:13838   */\n      add\n        /* \"#utility.yul\":13816:13844   */\n      mstore\n        /* \"#utility.yul\":13631:13851   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13857:13979   */\n    tag_111:\n        /* \"#utility.yul\":13930:13954   */\n      tag_258\n        /* \"#utility.yul\":13948:13953   */\n      dup2\n        /* \"#utility.yul\":13930:13954   */\n      tag_222\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":13923:13928   */\n      dup2\n        /* \"#utility.yul\":13920:13955   */\n      eq\n        /* \"#utility.yul\":13910:13973   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":13969:13970   */\n      0x00\n        /* \"#utility.yul\":13966:13967   */\n      dup1\n        /* \"#utility.yul\":13959:13971   */\n      revert\n        /* \"#utility.yul\":13910:13973   */\n    tag_259:\n        /* \"#utility.yul\":13857:13979   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13985:14107   */\n    tag_121:\n        /* \"#utility.yul\":14058:14082   */\n      tag_261\n        /* \"#utility.yul\":14076:14081   */\n      dup2\n        /* \"#utility.yul\":14058:14082   */\n      tag_186\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":14051:14056   */\n      dup2\n        /* \"#utility.yul\":14048:14083   */\n      eq\n        /* \"#utility.yul\":14038:14101   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":14097:14098   */\n      0x00\n        /* \"#utility.yul\":14094:14095   */\n      dup1\n        /* \"#utility.yul\":14087:14099   */\n      revert\n        /* \"#utility.yul\":14038:14101   */\n    tag_262:\n        /* \"#utility.yul\":13985:14107   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220469b3bde519080a923b3ec084d728a00dbf2f3dff509150407ad3fddf6d6d3a964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_112": {
									"entryPoint": null,
									"id": 112,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_299": {
									"entryPoint": 79,
									"id": 299,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3764:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:1"
															},
															"nodeType": "YulIf",
															"src": "262:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:1",
														"type": ""
													}
												],
												"src": "7:421:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:1"
															},
															"nodeType": "YulIf",
															"src": "531:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:1",
														"type": ""
													}
												],
												"src": "448:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "896:437:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "944:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "944:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "944:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "917:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "926:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "909:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:32:1"
															},
															"nodeType": "YulIf",
															"src": "906:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1035:291:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1050:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1074:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1085:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1064:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1064:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1054:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1135:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1137:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1137:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1137:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1115:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1104:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1104:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "1101:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1232:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1288:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1299:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1284:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1284:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1308:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1242:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1242:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1232:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "866:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "877:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "889:6:1",
														"type": ""
													}
												],
												"src": "809:524:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1380:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1390:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1400:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1457:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1429:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1429:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1364:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1373:6:1",
														"type": ""
													}
												],
												"src": "1339:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1514:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1524:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1534:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1507:6:1",
														"type": ""
													}
												],
												"src": "1474:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1622:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1727:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1729:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1729:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1729:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:30:1"
															},
															"nodeType": "YulIf",
															"src": "1693:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1759:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1789:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1767:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1759:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1833:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1845:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1606:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1617:4:1",
														"type": ""
													}
												],
												"src": "1555:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1928:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1937:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1932:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1997:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2022:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2027:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2018:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2018:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2041:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2046:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2037:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2037:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2031:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2031:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2011:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2011:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2011:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1958:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1961:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1955:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1969:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1971:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1980:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1983:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1976:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1971:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1951:3:1",
																"statements": []
															},
															"src": "1947:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2144:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2149:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2140:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2140:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2158:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2078:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2072:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2072:13:1"
															},
															"nodeType": "YulIf",
															"src": "2069:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1900:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1905:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1910:6:1",
														"type": ""
													}
												],
												"src": "1869:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2233:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2243:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2257:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2253:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2253:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2274:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2304:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2278:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2365:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2379:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2387:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2375:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2365:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2331:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:26:1"
															},
															"nodeType": "YulIf",
															"src": "2321:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2454:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2468:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2468:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2468:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2418:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2441:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2449:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2438:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2415:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:38:1"
															},
															"nodeType": "YulIf",
															"src": "2412:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2217:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2226:6:1",
														"type": ""
													}
												],
												"src": "2182:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2561:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2613:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2591:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2565:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2730:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2732:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2732:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2673:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2685:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2670:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2670:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2709:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2721:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2706:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2706:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2667:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:62:1"
															},
															"nodeType": "YulIf",
															"src": "2664:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2768:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2772:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2761:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2537:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2545:4:1",
														"type": ""
													}
												],
												"src": "2508:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2823:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2843:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2833:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2940:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2930:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2930:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2961:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2795:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3009:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3029:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3123:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3126:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2981:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3256:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3266:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3167:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3379:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3396:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3290:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3502:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3519:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3512:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3413:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3625:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3536:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3707:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3717:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3735:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3742:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3751:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3727:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3690:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3700:6:1",
														"type": ""
													}
												],
												"src": "3659:102:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13BC CODESIZE SUB DUP1 PUSH3 0x13BC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x199 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x36E JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x67 SWAP3 SWAP2 SWAP1 PUSH3 0x6B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x79 SWAP1 PUSH3 0x27F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x132 PUSH3 0x12C DUP5 PUSH3 0x213 JUMP JUMPDEST PUSH3 0x1EA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH3 0x150 PUSH3 0x34E JUMP JUMPDEST JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x249 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x17E JUMPI PUSH3 0x17D PUSH3 0x349 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x190 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x11B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1B2 JUMPI PUSH3 0x1B1 PUSH3 0x358 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1D3 JUMPI PUSH3 0x1D2 PUSH3 0x353 JUMP JUMPDEST JUMPDEST PUSH3 0x1E1 DUP5 DUP3 DUP6 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1F6 PUSH3 0x209 JUMP JUMPDEST SWAP1 POP PUSH3 0x204 DUP3 DUP3 PUSH3 0x2B5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x31A JUMP JUMPDEST JUMPDEST PUSH3 0x23C DUP3 PUSH3 0x35D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x269 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x24C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x279 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x298 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2AF JUMPI PUSH3 0x2AE PUSH3 0x2EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C0 DUP3 PUSH3 0x35D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2E2 JUMPI PUSH3 0x2E1 PUSH3 0x31A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x103E DUP1 PUSH3 0x37E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x57E87575 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xA6F27714 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x95B JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x1E7 SWAP1 PUSH2 0xD0B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0xD0B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x260 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x235 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x260 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x243 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x287 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x328 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x298 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4CA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x758 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30B SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x321 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4CA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A2 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3AF DUP6 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3BC DUP6 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CD DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x7DA JUMP JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x4C1 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x544 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x551 DUP6 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x55E DUP6 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP PUSH2 0x56E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP1 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x737 SWAP3 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x74D DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77E PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7AD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x7C5 JUMPI PUSH2 0x7C4 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FD PUSH2 0x7F8 DUP5 PUSH2 0xBEA JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x819 JUMPI PUSH2 0x818 PUSH2 0xE2F JUMP JUMPDEST JUMPDEST PUSH2 0x824 DUP5 DUP3 DUP6 PUSH2 0xCC9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x83B DUP2 PUSH2 0xFDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0xE2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x866 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x87E DUP2 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x89F PUSH2 0xE39 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8AE DUP9 DUP3 DUP10 ADD PUSH2 0x82C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x8BF DUP9 DUP3 DUP10 ADD PUSH2 0x82C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x8D0 DUP9 DUP3 DUP10 ADD PUSH2 0x86F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x8E1 DUP9 DUP3 DUP10 ADD PUSH2 0x86F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x902 JUMPI PUSH2 0x901 PUSH2 0xE34 JUMP JUMPDEST JUMPDEST PUSH2 0x90E DUP9 DUP3 DUP10 ADD PUSH2 0x841 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x932 JUMPI PUSH2 0x931 PUSH2 0xE39 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x940 DUP6 DUP3 DUP7 ADD PUSH2 0x82C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x951 DUP6 DUP3 DUP7 ADD PUSH2 0x86F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x971 JUMPI PUSH2 0x970 PUSH2 0xE39 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x97F DUP5 DUP3 DUP6 ADD PUSH2 0x86F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99E PUSH2 0xE39 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP6 DUP3 DUP7 ADD PUSH2 0x86F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9BE DUP6 DUP3 DUP7 ADD PUSH2 0x86F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D3 DUP3 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x9DD DUP2 DUP6 PUSH2 0xC26 JUMP JUMPDEST SWAP4 POP PUSH2 0x9ED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0xE3E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0E PUSH1 0x2F DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xA19 DUP3 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA31 PUSH1 0x2A DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3C DUP3 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA54 PUSH1 0x25 DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xA5F DUP3 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA77 PUSH1 0x2A DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xA82 DUP3 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9A PUSH1 0x21 DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA5 DUP3 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB9 DUP2 PUSH2 0xCBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAD9 DUP2 DUP5 PUSH2 0x9C8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAFA DUP2 PUSH2 0xA01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB1A DUP2 PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB3A DUP2 PUSH2 0xA47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB5A DUP2 PUSH2 0xA6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB7A DUP2 PUSH2 0xA8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB96 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBB1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0xBBE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCF PUSH2 0xBE0 JUMP JUMPDEST SWAP1 POP PUSH2 0xBDB DUP3 DUP3 PUSH2 0xD3D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC05 JUMPI PUSH2 0xC04 PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH2 0xC0E DUP3 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC42 DUP3 PUSH2 0xCBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC4D DUP4 PUSH2 0xCBF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xC82 JUMPI PUSH2 0xC81 PUSH2 0xD6E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC98 DUP3 PUSH2 0xC9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCDB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD23 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD36 PUSH2 0xD9D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD46 DUP3 PUSH2 0xE3E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD65 JUMPI PUSH2 0xD64 PUSH2 0xDFB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xFE3 DUP2 PUSH2 0xC8D JUMP JUMPDEST DUP2 EQ PUSH2 0xFEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFFA DUP2 PUSH2 0xCBF JUMP JUMPDEST DUP2 EQ PUSH2 0x1005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SWAP12 EXTCODESIZE 0xDE MLOAD SWAP1 DUP1 0xA9 0x23 0xB3 0xEC ADDMOD 0x4D PUSH19 0x8A00DBF2F3DFF509150407AD3FDDF6D6D3A964 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "2767:9278:0:-:0;;;3807:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3849:13;3857:4;3849:7;;;:13;;:::i;:::-;3807:62;2767:9278;;6936:86;7009:6;7002:4;:13;;;;;;;;;;;;:::i;:::-;;6936:86;:::o;2767:9278::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:1:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:524::-;889:6;938:2;926:9;917:7;913:23;909:32;906:119;;;944:79;;:::i;:::-;906:119;1085:1;1074:9;1070:17;1064:24;1115:18;1107:6;1104:30;1101:117;;;1137:79;;:::i;:::-;1101:117;1242:74;1308:7;1299:6;1288:9;1284:22;1242:74;:::i;:::-;1232:84;;1035:291;809:524;;;;:::o;1339:129::-;1373:6;1400:20;;:::i;:::-;1390:30;;1429:33;1457:4;1449:6;1429:33;:::i;:::-;1339:129;;;:::o;1474:75::-;1507:6;1540:2;1534:9;1524:19;;1474:75;:::o;1555:308::-;1617:4;1707:18;1699:6;1696:30;1693:56;;;1729:18;;:::i;:::-;1693:56;1767:29;1789:6;1767:29;:::i;:::-;1759:37;;1851:4;1845;1841:15;1833:23;;1555:308;;;:::o;1869:307::-;1937:1;1947:113;1961:6;1958:1;1955:13;1947:113;;;2046:1;2041:3;2037:11;2031:18;2027:1;2022:3;2018:11;2011:39;1983:2;1980:1;1976:10;1971:15;;1947:113;;;2078:6;2075:1;2072:13;2069:101;;;2158:1;2149:6;2144:3;2140:16;2133:27;2069:101;1918:258;1869:307;;;:::o;2182:320::-;2226:6;2263:1;2257:4;2253:12;2243:22;;2310:1;2304:4;2300:12;2331:18;2321:81;;2387:4;2379:6;2375:17;2365:27;;2321:81;2449:2;2441:6;2438:14;2418:18;2415:38;2412:84;;;2468:18;;:::i;:::-;2412:84;2233:269;2182:320;;;:::o;2508:281::-;2591:27;2613:4;2591:27;:::i;:::-;2583:6;2579:40;2721:6;2709:10;2706:22;2685:18;2673:10;2670:34;2667:62;2664:88;;;2732:18;;:::i;:::-;2664:88;2772:10;2768:2;2761:22;2551:238;2508:281;;:::o;2795:180::-;2843:77;2840:1;2833:88;2940:4;2937:1;2930:15;2964:4;2961:1;2954:15;2981:180;3029:77;3026:1;3019:88;3126:4;3123:1;3116:15;3150:4;3147:1;3140:15;3167:117;3276:1;3273;3266:12;3290:117;3399:1;3396;3389:12;3413:117;3522:1;3519;3512:12;3536:117;3645:1;3642;3635:12;3659:102;3700:6;3751:2;3747:7;3742:2;3735:5;3731:14;3727:28;3717:38;;3659:102;;;:::o;2767:9278:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CouponMint_575": {
									"entryPoint": 620,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_531": {
									"entryPoint": 2018,
									"id": 531,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_559": {
									"entryPoint": 1888,
									"id": 559,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_512": {
									"entryPoint": 2010,
									"id": 512,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_388": {
									"entryPoint": 808,
									"id": 388,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_101": {
									"entryPoint": 1880,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransferFrom_288": {
									"entryPoint": 1226,
									"id": 288,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@balanceOf_150": {
									"entryPoint": 271,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransferFrom_181": {
									"entryPoint": 671,
									"id": 181,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@transf_597": {
									"entryPoint": 651,
									"id": 597,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@uri_123": {
									"entryPoint": 472,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3626,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3636,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370": {
									"entryPoint": 3663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 3900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14110:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:1"
															},
															"nodeType": "YulIf",
															"src": "249:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:1",
														"type": ""
													}
												],
												"src": "7:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:1",
														"type": ""
													}
												],
												"src": "423:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:1"
															},
															"nodeType": "YulIf",
															"src": "652:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:1",
														"type": ""
													}
												],
												"src": "581:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:1",
														"type": ""
													}
												],
												"src": "925:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1213:946:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1260:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1262:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1262:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1262:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1234:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1243:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1230:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1230:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1255:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1226:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:33:1"
															},
															"nodeType": "YulIf",
															"src": "1223:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1353:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1368:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1382:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1372:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1397:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1432:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1443:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1452:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1407:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1407:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1397:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1525:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1608:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1623:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1627:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1653:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1688:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1699:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1663:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1653:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1736:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1751:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1755:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1781:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1864:288:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1879:47:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1910:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1921:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1906:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1906:19:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1893:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1893:33:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1883:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1973:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1975:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1975:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1975:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1945:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1953:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1942:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "1939:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2070:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2114:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2125:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2110:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2110:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2134:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2080:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2080:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2070:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1151:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1162:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1174:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1182:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1190:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1198:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1206:6:1",
														"type": ""
													}
												],
												"src": "1070:1089:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2248:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2294:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2296:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2296:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2296:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2269:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2278:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2265:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2265:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2290:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2261:32:1"
															},
															"nodeType": "YulIf",
															"src": "2258:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2387:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2402:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2416:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2406:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2431:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2466:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2477:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2462:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2462:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2486:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2441:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2441:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2431:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2514:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2529:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2543:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2533:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2559:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2594:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2605:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2590:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2590:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2614:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2569:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2569:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2559:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2210:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2221:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2233:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2241:6:1",
														"type": ""
													}
												],
												"src": "2165:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2711:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2757:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2759:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2759:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2759:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2732:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2728:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2753:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2724:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:32:1"
															},
															"nodeType": "YulIf",
															"src": "2721:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2850:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2865:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2879:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2869:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2894:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2929:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2940:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2925:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2925:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2949:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2904:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2904:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2894:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2681:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2692:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2704:6:1",
														"type": ""
													}
												],
												"src": "2645:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3063:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3109:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3111:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3111:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3111:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3084:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3093:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3080:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3080:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3105:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3076:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3076:32:1"
															},
															"nodeType": "YulIf",
															"src": "3073:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3202:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3217:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3231:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3221:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3246:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3281:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3292:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3277:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3277:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3301:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3256:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3256:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3246:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3329:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3344:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3348:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3374:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3409:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3420:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3405:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3405:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3429:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3384:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3374:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3025:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3036:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3048:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3056:6:1",
														"type": ""
													}
												],
												"src": "2980:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3552:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3562:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3609:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3576:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3566:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3624:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3690:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3695:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3631:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3631:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3624:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3737:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3744:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3733:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3751:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3756:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3711:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3711:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3711:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3772:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3783:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3810:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3788:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3788:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3779:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3772:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3533:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3540:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3548:3:1",
														"type": ""
													}
												],
												"src": "3460:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3976:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3986:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4052:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4057:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3993:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3986:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4158:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																	"nodeType": "YulIdentifier",
																	"src": "4069:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4069:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4069:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4171:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4182:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4187:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4178:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4178:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3964:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3972:3:1",
														"type": ""
													}
												],
												"src": "3830:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4348:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4358:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4424:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4429:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4365:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4358:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4530:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																	"nodeType": "YulIdentifier",
																	"src": "4441:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4441:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4441:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4543:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4554:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4559:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4550:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4550:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4543:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4336:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4344:3:1",
														"type": ""
													}
												],
												"src": "4202:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4720:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4730:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4796:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4801:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4737:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4737:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4730:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4902:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "4813:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4813:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4813:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4915:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4926:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4922:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4915:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4708:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4716:3:1",
														"type": ""
													}
												],
												"src": "4574:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5092:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5102:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5168:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5173:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5109:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5102:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5274:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "5185:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5185:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5185:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5287:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5298:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5303:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5294:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5287:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5080:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5088:3:1",
														"type": ""
													}
												],
												"src": "4946:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5464:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5474:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5540:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5545:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5481:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5646:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																	"nodeType": "YulIdentifier",
																	"src": "5557:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5557:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5557:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5659:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5670:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5666:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5659:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5452:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5460:3:1",
														"type": ""
													}
												],
												"src": "5318:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5755:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5772:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5795:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5777:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5777:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5765:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5743:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5750:3:1",
														"type": ""
													}
												],
												"src": "5690:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5932:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5942:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5954:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5965:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5942:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5989:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6000:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5985:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6008:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6014:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6004:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6004:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5978:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5978:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5978:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6034:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6106:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6115:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6042:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6042:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6034:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5904:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5916:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5927:4:1",
														"type": ""
													}
												],
												"src": "5814:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6304:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6314:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6326:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6322:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6314:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6361:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6372:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6357:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6380:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6386:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6376:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6376:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6350:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6350:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6406:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6540:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6414:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6406:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6284:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6299:4:1",
														"type": ""
													}
												],
												"src": "6133:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6729:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6739:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6751:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6762:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6747:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6747:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6739:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6786:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6797:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6782:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6805:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6811:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6801:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6801:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6775:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6831:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6965:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6839:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6839:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6831:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6709:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6724:4:1",
														"type": ""
													}
												],
												"src": "6558:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7154:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7164:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7176:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7187:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7172:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7172:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7164:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7211:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7222:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7207:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7230:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7236:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7226:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7200:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7200:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7200:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7256:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7390:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7264:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7264:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7256:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7134:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7149:4:1",
														"type": ""
													}
												],
												"src": "6983:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7579:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7589:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7601:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7612:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7597:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7597:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7589:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7636:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7647:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7632:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7655:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7661:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7651:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7651:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7625:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7681:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7815:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7689:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7689:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7681:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7559:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7574:4:1",
														"type": ""
													}
												],
												"src": "7408:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8004:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8014:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8026:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8037:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8022:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8022:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8014:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8061:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8072:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8057:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8080:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8086:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8076:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8050:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8106:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8240:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8114:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8114:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8106:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7984:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7999:4:1",
														"type": ""
													}
												],
												"src": "7833:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8356:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8366:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8378:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8389:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8374:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8374:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8366:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8470:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8455:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8402:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8402:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8402:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8328:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8340:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8351:4:1",
														"type": ""
													}
												],
												"src": "8258:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8612:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8622:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8634:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8645:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8630:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8630:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8622:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8702:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8715:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8726:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8711:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8658:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8658:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8658:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8783:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8796:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8807:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8792:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8792:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8739:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8739:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8739:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8576:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8588:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8596:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8607:4:1",
														"type": ""
													}
												],
												"src": "8486:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8865:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8875:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "8885:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8885:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8875:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8934:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8942:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "8914:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8914:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8849:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8858:6:1",
														"type": ""
													}
												],
												"src": "8824:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8999:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9009:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9025:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9019:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9019:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9009:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8992:6:1",
														"type": ""
													}
												],
												"src": "8959:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9106:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9211:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9213:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9213:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9183:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9191:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9180:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9180:30:1"
															},
															"nodeType": "YulIf",
															"src": "9177:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9243:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9273:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9251:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9251:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9243:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9317:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9329:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9335:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9325:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9325:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9317:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9090:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9101:4:1",
														"type": ""
													}
												],
												"src": "9040:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9412:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9423:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9439:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9433:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9433:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9423:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9395:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9405:6:1",
														"type": ""
													}
												],
												"src": "9353:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9554:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9571:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9576:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9564:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9564:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9592:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9611:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9616:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9607:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9592:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9526:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9531:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9542:11:1",
														"type": ""
													}
												],
												"src": "9458:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9677:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9687:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9710:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9692:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9692:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9687:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9721:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9744:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9726:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9726:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9721:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9884:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9886:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9886:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9886:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9805:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9812:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9880:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9808:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9802:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9802:81:1"
															},
															"nodeType": "YulIf",
															"src": "9799:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9916:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9927:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9930:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9923:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9923:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9916:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9664:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9667:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9673:3:1",
														"type": ""
													}
												],
												"src": "9633:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9989:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9999:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10028:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10010:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10010:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9999:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9971:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9981:7:1",
														"type": ""
													}
												],
												"src": "9944:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10091:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10101:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10116:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10123:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10112:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10112:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10101:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10073:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10083:7:1",
														"type": ""
													}
												],
												"src": "10046:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10223:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10233:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10244:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10233:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10205:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10215:7:1",
														"type": ""
													}
												],
												"src": "10178:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10312:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10335:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10340:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10345:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "10322:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10322:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10322:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10393:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10398:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10389:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10407:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10382:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10382:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10382:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10294:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10299:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10304:6:1",
														"type": ""
													}
												],
												"src": "10261:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10470:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10480:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10489:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10484:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10549:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10574:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10579:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10570:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10570:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10593:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10598:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10589:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10589:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10583:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10583:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10563:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10563:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10563:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10510:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10513:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10507:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10507:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10521:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10523:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10532:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10535:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10528:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10528:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10523:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10503:3:1",
																"statements": []
															},
															"src": "10499:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10646:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10696:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10701:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10692:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10692:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10710:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10685:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10685:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10685:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10627:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10630:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10624:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10624:13:1"
															},
															"nodeType": "YulIf",
															"src": "10621:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10452:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10457:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10462:6:1",
														"type": ""
													}
												],
												"src": "10421:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10785:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10795:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10809:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10815:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10805:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10805:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10795:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10826:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10856:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10862:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10852:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10852:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10830:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10903:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10917:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10931:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10939:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10927:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10927:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10917:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10883:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10876:26:1"
															},
															"nodeType": "YulIf",
															"src": "10873:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11006:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11020:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11020:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11020:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10970:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10993:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11001:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10990:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10990:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10967:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10967:38:1"
															},
															"nodeType": "YulIf",
															"src": "10964:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10769:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10778:6:1",
														"type": ""
													}
												],
												"src": "10734:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11103:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11113:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "11135:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "11165:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "11143:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11143:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11131:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11131:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "11117:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11282:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11284:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11284:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11284:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "11225:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11237:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11222:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11222:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "11261:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11273:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11258:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11258:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11219:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11219:62:1"
															},
															"nodeType": "YulIf",
															"src": "11216:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11320:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "11324:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11313:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11313:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11313:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11089:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "11097:4:1",
														"type": ""
													}
												],
												"src": "11060:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11375:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11392:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11395:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11385:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11385:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11385:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11489:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11492:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11482:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11482:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11513:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11516:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11506:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11506:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11506:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11347:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11561:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11578:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11581:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11571:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11571:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11571:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11675:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11678:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11668:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11668:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11699:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11702:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11692:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11533:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11764:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11767:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11757:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11757:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11757:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11861:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11864:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11854:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11854:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11854:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11885:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11888:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11878:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11878:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11719:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11933:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11950:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11953:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11943:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11943:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12047:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12050:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12040:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12040:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12040:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12071:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12074:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12064:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12064:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11905:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12180:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12197:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12200:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12190:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12190:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12190:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "12091:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12303:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12320:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12323:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12313:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12313:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12313:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "12214:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12426:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12443:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12446:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12436:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12436:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12436:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12337:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12549:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12566:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12569:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12559:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12559:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12559:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "12460:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12631:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12641:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12659:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12666:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12655:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12655:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12675:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12671:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12651:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12651:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12641:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12614:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12624:6:1",
														"type": ""
													}
												],
												"src": "12583:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12797:128:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12819:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12827:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12815:14:1"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12831:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12808:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12808:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12808:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12887:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12895:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12883:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12883:15:1"
																	},
																	{
																		"hexValue": "6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12900:17:1",
																		"type": "",
																		"value": "er nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12876:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12876:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12789:6:1",
														"type": ""
													}
												],
												"src": "12691:234:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13037:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13059:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13067:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13055:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13055:14:1"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13071:34:1",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13048:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13048:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13127:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13135:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13123:15:1"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13140:12:1",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13116:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13116:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13029:6:1",
														"type": ""
													}
												],
												"src": "12931:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13272:118:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13294:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13302:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13290:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13290:14:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13306:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13283:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13283:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13362:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13370:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13358:15:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13375:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13351:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13351:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13351:32:1"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13264:6:1",
														"type": ""
													}
												],
												"src": "13166:224:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13502:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13524:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13532:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13520:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13520:14:1"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13536:34:1",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13513:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13513:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13513:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13592:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13600:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13588:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13588:15:1"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13605:12:1",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13581:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13581:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13581:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13494:6:1",
														"type": ""
													}
												],
												"src": "13396:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13737:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13759:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13767:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13755:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13755:14:1"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13771:34:1",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13748:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13748:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13827:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13835:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13823:15:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13840:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13816:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13816:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13816:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13729:6:1",
														"type": ""
													}
												],
												"src": "13631:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13900:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13957:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13966:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13969:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13959:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13959:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13959:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13923:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13948:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13930:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13930:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13920:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13920:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13913:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13913:43:1"
															},
															"nodeType": "YulIf",
															"src": "13910:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13893:5:1",
														"type": ""
													}
												],
												"src": "13857:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14028:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14085:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14094:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14097:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14087:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14087:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14087:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14051:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14076:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14058:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14058:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14048:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14048:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14041:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14041:43:1"
															},
															"nodeType": "YulIf",
															"src": "14038:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14021:5:1",
														"type": ""
													}
												],
												"src": "13985:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not token own\")\n\n        mstore(add(memPtr, 32), \"er nor approved\")\n\n    }\n\n    function store_literal_in_memory_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: address zero is not a v\")\n\n        mstore(add(memPtr, 32), \"alid owner\")\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function store_literal_in_memory_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: mint to the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100565760003560e01c8062fdd58e1461005b5780630e89341c1461008b57806357e87575146100bb578063a6f27714146100d7578063f242432a146100f3575b600080fd5b6100756004803603810190610070919061091b565b61010f565b6040516100829190610b81565b60405180910390f35b6100a560048036038101906100a0919061095b565b6101d8565b6040516100b29190610abf565b60405180910390f35b6100d560048036038101906100d09190610988565b61026c565b005b6100f160048036038101906100ec9190610884565b61028b565b005b61010d60048036038101906101089190610884565b61029f565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610180576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017790610b01565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6060600280546101e790610d0b565b80601f016020809104026020016040519081016040528092919081815260200182805461021390610d0b565b80156102605780601f1061023557610100808354040283529160200191610260565b820191906000526020600020905b81548152906001019060200180831161024357829003601f168201915b50505050509050919050565b61028733838360405180602001604052806000815250610328565b5050565b61029885858585856104ca565b5050505050565b6102a7610758565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90610ae1565b60405180910390fd5b61032185858585856104ca565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038f90610b61565b60405180910390fd5b60006103a2610758565b905060006103af85610760565b905060006103bc85610760565b90506103cd836000898585896107da565b8460008088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461042c9190610c37565b925050819055508673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6289896040516104aa929190610b9c565b60405180910390a46104c1836000898585896107e2565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561053a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053190610b21565b60405180910390fd5b6000610544610758565b9050600061055185610760565b9050600061055e85610760565b905061056e8389898585896107da565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc90610b41565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ba9190610c37565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610737929190610b9c565b60405180910390a461074d848a8a86868a6107e2565b505050505050505050565b600033905090565b60606000600167ffffffffffffffff81111561077f5761077e610dfb565b5b6040519080825280602002602001820160405280156107ad5781602001602082028036833780820191505090505b50905082816000815181106107c5576107c4610dcc565b5b60200260200101818152505080915050919050565b505050505050565b505050505050565b60006107fd6107f884610bea565b610bc5565b90508281526020810184848401111561081957610818610e2f565b5b610824848285610cc9565b509392505050565b60008135905061083b81610fda565b92915050565b600082601f83011261085657610855610e2a565b5b81356108668482602086016107ea565b91505092915050565b60008135905061087e81610ff1565b92915050565b600080600080600060a086880312156108a05761089f610e39565b5b60006108ae8882890161082c565b95505060206108bf8882890161082c565b94505060406108d08882890161086f565b93505060606108e18882890161086f565b925050608086013567ffffffffffffffff81111561090257610901610e34565b5b61090e88828901610841565b9150509295509295909350565b6000806040838503121561093257610931610e39565b5b60006109408582860161082c565b92505060206109518582860161086f565b9150509250929050565b60006020828403121561097157610970610e39565b5b600061097f8482850161086f565b91505092915050565b6000806040838503121561099f5761099e610e39565b5b60006109ad8582860161086f565b92505060206109be8582860161086f565b9150509250929050565b60006109d382610c1b565b6109dd8185610c26565b93506109ed818560208601610cd8565b6109f681610e3e565b840191505092915050565b6000610a0e602f83610c26565b9150610a1982610e4f565b604082019050919050565b6000610a31602a83610c26565b9150610a3c82610e9e565b604082019050919050565b6000610a54602583610c26565b9150610a5f82610eed565b604082019050919050565b6000610a77602a83610c26565b9150610a8282610f3c565b604082019050919050565b6000610a9a602183610c26565b9150610aa582610f8b565b604082019050919050565b610ab981610cbf565b82525050565b60006020820190508181036000830152610ad981846109c8565b905092915050565b60006020820190508181036000830152610afa81610a01565b9050919050565b60006020820190508181036000830152610b1a81610a24565b9050919050565b60006020820190508181036000830152610b3a81610a47565b9050919050565b60006020820190508181036000830152610b5a81610a6a565b9050919050565b60006020820190508181036000830152610b7a81610a8d565b9050919050565b6000602082019050610b966000830184610ab0565b92915050565b6000604082019050610bb16000830185610ab0565b610bbe6020830184610ab0565b9392505050565b6000610bcf610be0565b9050610bdb8282610d3d565b919050565b6000604051905090565b600067ffffffffffffffff821115610c0557610c04610dfb565b5b610c0e82610e3e565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000610c4282610cbf565b9150610c4d83610cbf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c8257610c81610d6e565b5b828201905092915050565b6000610c9882610c9f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610cf6578082015181840152602081019050610cdb565b83811115610d05576000848401525b50505050565b60006002820490506001821680610d2357607f821691505b60208210811415610d3757610d36610d9d565b5b50919050565b610d4682610e3e565b810181811067ffffffffffffffff82111715610d6557610d64610dfb565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206e6f7220617070726f7665640000000000000000000000000000000000602082015250565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b610fe381610c8d565b8114610fee57600080fd5b50565b610ffa81610cbf565b811461100557600080fd5b5056fea2646970667358221220469b3bde519080a923b3ec084d728a00dbf2f3dff509150407ad3fddf6d6d3a964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x57E87575 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xA6F27714 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x95B JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x988 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177 SWAP1 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x1E7 SWAP1 PUSH2 0xD0B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x213 SWAP1 PUSH2 0xD0B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x260 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x235 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x260 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x243 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x287 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x328 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x298 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4CA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x758 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30B SWAP1 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x321 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4CA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38F SWAP1 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3A2 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3AF DUP6 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3BC DUP6 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CD DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x7DA JUMP JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP3 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x4C1 DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x544 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x551 DUP6 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x55E DUP6 PUSH2 0x760 JUMP JUMPDEST SWAP1 POP PUSH2 0x56E DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP1 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0xC37 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x737 SWAP3 SWAP2 SWAP1 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x74D DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0x7E2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77E PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7AD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x7C5 JUMPI PUSH2 0x7C4 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FD PUSH2 0x7F8 DUP5 PUSH2 0xBEA JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x819 JUMPI PUSH2 0x818 PUSH2 0xE2F JUMP JUMPDEST JUMPDEST PUSH2 0x824 DUP5 DUP3 DUP6 PUSH2 0xCC9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x83B DUP2 PUSH2 0xFDA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0xE2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x866 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x87E DUP2 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8A0 JUMPI PUSH2 0x89F PUSH2 0xE39 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8AE DUP9 DUP3 DUP10 ADD PUSH2 0x82C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x8BF DUP9 DUP3 DUP10 ADD PUSH2 0x82C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x8D0 DUP9 DUP3 DUP10 ADD PUSH2 0x86F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x8E1 DUP9 DUP3 DUP10 ADD PUSH2 0x86F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x902 JUMPI PUSH2 0x901 PUSH2 0xE34 JUMP JUMPDEST JUMPDEST PUSH2 0x90E DUP9 DUP3 DUP10 ADD PUSH2 0x841 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x932 JUMPI PUSH2 0x931 PUSH2 0xE39 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x940 DUP6 DUP3 DUP7 ADD PUSH2 0x82C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x951 DUP6 DUP3 DUP7 ADD PUSH2 0x86F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x971 JUMPI PUSH2 0x970 PUSH2 0xE39 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x97F DUP5 DUP3 DUP6 ADD PUSH2 0x86F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x99F JUMPI PUSH2 0x99E PUSH2 0xE39 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9AD DUP6 DUP3 DUP7 ADD PUSH2 0x86F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9BE DUP6 DUP3 DUP7 ADD PUSH2 0x86F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D3 DUP3 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x9DD DUP2 DUP6 PUSH2 0xC26 JUMP JUMPDEST SWAP4 POP PUSH2 0x9ED DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0x9F6 DUP2 PUSH2 0xE3E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0E PUSH1 0x2F DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xA19 DUP3 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA31 PUSH1 0x2A DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3C DUP3 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA54 PUSH1 0x25 DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xA5F DUP3 PUSH2 0xEED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA77 PUSH1 0x2A DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xA82 DUP3 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9A PUSH1 0x21 DUP4 PUSH2 0xC26 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA5 DUP3 PUSH2 0xF8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB9 DUP2 PUSH2 0xCBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAD9 DUP2 DUP5 PUSH2 0x9C8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAFA DUP2 PUSH2 0xA01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB1A DUP2 PUSH2 0xA24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB3A DUP2 PUSH2 0xA47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB5A DUP2 PUSH2 0xA6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB7A DUP2 PUSH2 0xA8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB96 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBB1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0xBBE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCF PUSH2 0xBE0 JUMP JUMPDEST SWAP1 POP PUSH2 0xBDB DUP3 DUP3 PUSH2 0xD3D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC05 JUMPI PUSH2 0xC04 PUSH2 0xDFB JUMP JUMPDEST JUMPDEST PUSH2 0xC0E DUP3 PUSH2 0xE3E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC42 DUP3 PUSH2 0xCBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC4D DUP4 PUSH2 0xCBF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xC82 JUMPI PUSH2 0xC81 PUSH2 0xD6E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC98 DUP3 PUSH2 0xC9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xCDB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD23 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD36 PUSH2 0xD9D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD46 DUP3 PUSH2 0xE3E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD65 JUMPI PUSH2 0xD64 PUSH2 0xDFB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572206E6F7220617070726F7665640000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C6964206F776E657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xFE3 DUP2 PUSH2 0xC8D JUMP JUMPDEST DUP2 EQ PUSH2 0xFEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFFA DUP2 PUSH2 0xCBF JUMP JUMPDEST DUP2 EQ PUSH2 0x1005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SWAP12 EXTCODESIZE 0xDE MLOAD SWAP1 DUP1 0xA9 0x23 0xB3 0xEC ADDMOD 0x4D PUSH19 0x8A00DBF2F3DFF509150407AD3FDDF6D6D3A964 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "2767:9278:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4504:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4268:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11620:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11823:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4859:346;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4504:288;4613:7;4676:1;4657:21;;:7;:21;;;;4636:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;4763:9;:13;4773:2;4763:13;;;;;;;;;;;:22;4777:7;4763:22;;;;;;;;;;;;;;;;4756:29;;4504:288;;;;:::o;4268:94::-;4319:13;4351:4;4344:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4268:94;;;:::o;11620:197::-;11691:39;11697:10;11709:8;11719:6;11691:39;;;;;;;;;;;;:5;:39::i;:::-;11620:197;;:::o;11823:220::-;11983:53;12001:4;12007;12013:8;12023:6;12031:4;11983:17;:53::i;:::-;11823:220;;;;;:::o;4859:346::-;5058:12;:10;:12::i;:::-;5050:20;;:4;:20;;;5029:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;5153:45;5171:4;5177:2;5181;5185:6;5193:4;5153:17;:45::i;:::-;4859:346;;;;;:::o;7395:624::-;7556:1;7542:16;;:2;:16;;;;7534:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;7607:16;7626:12;:10;:12::i;:::-;7607:31;;7648:20;7671:21;7689:2;7671:17;:21::i;:::-;7648:44;;7702:24;7729:25;7747:6;7729:17;:25::i;:::-;7702:52;;7765:66;7786:8;7804:1;7808:2;7812:3;7817:7;7826:4;7765:20;:66::i;:::-;7863:6;7842:9;:13;7852:2;7842:13;;;;;;;;;;;:17;7856:2;7842:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;7921:2;7884:52;;7917:1;7884:52;;7899:8;7884:52;;;7925:2;7929:6;7884:52;;;;;;;:::i;:::-;;;;;;;;7947:65;7967:8;7985:1;7989:2;7993:3;7998:7;8007:4;7947:19;:65::i;:::-;7524:495;;;7395:624;;;;:::o;5211:902::-;5406:1;5392:16;;:2;:16;;;;5384:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5461:16;5480:12;:10;:12::i;:::-;5461:31;;5502:20;5525:21;5543:2;5525:17;:21::i;:::-;5502:44;;5556:24;5583:25;5601:6;5583:17;:25::i;:::-;5556:52;;5619:60;5640:8;5650:4;5656:2;5660:3;5665:7;5674:4;5619:20;:60::i;:::-;5690:19;5712:9;:13;5722:2;5712:13;;;;;;;;;;;:19;5726:4;5712:19;;;;;;;;;;;;;;;;5690:41;;5777:6;5762:11;:21;;5741:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;5921:6;5907:11;:20;5885:9;:13;5895:2;5885:13;;;;;;;;;;;:19;5899:4;5885:19;;;;;;;;;;;;;;;:42;;;;5968:6;5947:9;:13;5957:2;5947:13;;;;;;;;;;;:17;5961:2;5947:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6021:2;5990:46;;6015:4;5990:46;;6005:8;5990:46;;;6025:2;6029:6;5990:46;;;;;;;:::i;:::-;;;;;;;;6047:59;6067:8;6077:4;6083:2;6087:3;6092:7;6101:4;6047:19;:59::i;:::-;5374:739;;;;5211:902;;;;;:::o;3671:87::-;3715:7;3741:10;3734:17;;3671:87;:::o;11393:221::-;11483:16;11515:22;11554:1;11540:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11515:41;;11577:7;11566:5;11572:1;11566:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;11602:5;11595:12;;;11393:221;;;:::o;10027:214::-;;;;;;;:::o;11174:213::-;;;;;;;:::o;7:410:1:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:1089::-;1174:6;1182;1190;1198;1206;1255:3;1243:9;1234:7;1230:23;1226:33;1223:120;;;1262:79;;:::i;:::-;1223:120;1382:1;1407:53;1452:7;1443:6;1432:9;1428:22;1407:53;:::i;:::-;1397:63;;1353:117;1509:2;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1480:118;1637:2;1663:53;1708:7;1699:6;1688:9;1684:22;1663:53;:::i;:::-;1653:63;;1608:118;1765:2;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1736:118;1921:3;1910:9;1906:19;1893:33;1953:18;1945:6;1942:30;1939:117;;;1975:79;;:::i;:::-;1939:117;2080:62;2134:7;2125:6;2114:9;2110:22;2080:62;:::i;:::-;2070:72;;1864:288;1070:1089;;;;;;;;:::o;2165:474::-;2233:6;2241;2290:2;2278:9;2269:7;2265:23;2261:32;2258:119;;;2296:79;;:::i;:::-;2258:119;2416:1;2441:53;2486:7;2477:6;2466:9;2462:22;2441:53;:::i;:::-;2431:63;;2387:117;2543:2;2569:53;2614:7;2605:6;2594:9;2590:22;2569:53;:::i;:::-;2559:63;;2514:118;2165:474;;;;;:::o;2645:329::-;2704:6;2753:2;2741:9;2732:7;2728:23;2724:32;2721:119;;;2759:79;;:::i;:::-;2721:119;2879:1;2904:53;2949:7;2940:6;2929:9;2925:22;2904:53;:::i;:::-;2894:63;;2850:117;2645:329;;;;:::o;2980:474::-;3048:6;3056;3105:2;3093:9;3084:7;3080:23;3076:32;3073:119;;;3111:79;;:::i;:::-;3073:119;3231:1;3256:53;3301:7;3292:6;3281:9;3277:22;3256:53;:::i;:::-;3246:63;;3202:117;3358:2;3384:53;3429:7;3420:6;3409:9;3405:22;3384:53;:::i;:::-;3374:63;;3329:118;2980:474;;;;;:::o;3460:364::-;3548:3;3576:39;3609:5;3576:39;:::i;:::-;3631:71;3695:6;3690:3;3631:71;:::i;:::-;3624:78;;3711:52;3756:6;3751:3;3744:4;3737:5;3733:16;3711:52;:::i;:::-;3788:29;3810:6;3788:29;:::i;:::-;3783:3;3779:39;3772:46;;3552:272;3460:364;;;;:::o;3830:366::-;3972:3;3993:67;4057:2;4052:3;3993:67;:::i;:::-;3986:74;;4069:93;4158:3;4069:93;:::i;:::-;4187:2;4182:3;4178:12;4171:19;;3830:366;;;:::o;4202:::-;4344:3;4365:67;4429:2;4424:3;4365:67;:::i;:::-;4358:74;;4441:93;4530:3;4441:93;:::i;:::-;4559:2;4554:3;4550:12;4543:19;;4202:366;;;:::o;4574:::-;4716:3;4737:67;4801:2;4796:3;4737:67;:::i;:::-;4730:74;;4813:93;4902:3;4813:93;:::i;:::-;4931:2;4926:3;4922:12;4915:19;;4574:366;;;:::o;4946:::-;5088:3;5109:67;5173:2;5168:3;5109:67;:::i;:::-;5102:74;;5185:93;5274:3;5185:93;:::i;:::-;5303:2;5298:3;5294:12;5287:19;;4946:366;;;:::o;5318:::-;5460:3;5481:67;5545:2;5540:3;5481:67;:::i;:::-;5474:74;;5557:93;5646:3;5557:93;:::i;:::-;5675:2;5670:3;5666:12;5659:19;;5318:366;;;:::o;5690:118::-;5777:24;5795:5;5777:24;:::i;:::-;5772:3;5765:37;5690:118;;:::o;5814:313::-;5927:4;5965:2;5954:9;5950:18;5942:26;;6014:9;6008:4;6004:20;6000:1;5989:9;5985:17;5978:47;6042:78;6115:4;6106:6;6042:78;:::i;:::-;6034:86;;5814:313;;;;:::o;6133:419::-;6299:4;6337:2;6326:9;6322:18;6314:26;;6386:9;6380:4;6376:20;6372:1;6361:9;6357:17;6350:47;6414:131;6540:4;6414:131;:::i;:::-;6406:139;;6133:419;;;:::o;6558:::-;6724:4;6762:2;6751:9;6747:18;6739:26;;6811:9;6805:4;6801:20;6797:1;6786:9;6782:17;6775:47;6839:131;6965:4;6839:131;:::i;:::-;6831:139;;6558:419;;;:::o;6983:::-;7149:4;7187:2;7176:9;7172:18;7164:26;;7236:9;7230:4;7226:20;7222:1;7211:9;7207:17;7200:47;7264:131;7390:4;7264:131;:::i;:::-;7256:139;;6983:419;;;:::o;7408:::-;7574:4;7612:2;7601:9;7597:18;7589:26;;7661:9;7655:4;7651:20;7647:1;7636:9;7632:17;7625:47;7689:131;7815:4;7689:131;:::i;:::-;7681:139;;7408:419;;;:::o;7833:::-;7999:4;8037:2;8026:9;8022:18;8014:26;;8086:9;8080:4;8076:20;8072:1;8061:9;8057:17;8050:47;8114:131;8240:4;8114:131;:::i;:::-;8106:139;;7833:419;;;:::o;8258:222::-;8351:4;8389:2;8378:9;8374:18;8366:26;;8402:71;8470:1;8459:9;8455:17;8446:6;8402:71;:::i;:::-;8258:222;;;;:::o;8486:332::-;8607:4;8645:2;8634:9;8630:18;8622:26;;8658:71;8726:1;8715:9;8711:17;8702:6;8658:71;:::i;:::-;8739:72;8807:2;8796:9;8792:18;8783:6;8739:72;:::i;:::-;8486:332;;;;;:::o;8824:129::-;8858:6;8885:20;;:::i;:::-;8875:30;;8914:33;8942:4;8934:6;8914:33;:::i;:::-;8824:129;;;:::o;8959:75::-;8992:6;9025:2;9019:9;9009:19;;8959:75;:::o;9040:307::-;9101:4;9191:18;9183:6;9180:30;9177:56;;;9213:18;;:::i;:::-;9177:56;9251:29;9273:6;9251:29;:::i;:::-;9243:37;;9335:4;9329;9325:15;9317:23;;9040:307;;;:::o;9353:99::-;9405:6;9439:5;9433:12;9423:22;;9353:99;;;:::o;9458:169::-;9542:11;9576:6;9571:3;9564:19;9616:4;9611:3;9607:14;9592:29;;9458:169;;;;:::o;9633:305::-;9673:3;9692:20;9710:1;9692:20;:::i;:::-;9687:25;;9726:20;9744:1;9726:20;:::i;:::-;9721:25;;9880:1;9812:66;9808:74;9805:1;9802:81;9799:107;;;9886:18;;:::i;:::-;9799:107;9930:1;9927;9923:9;9916:16;;9633:305;;;;:::o;9944:96::-;9981:7;10010:24;10028:5;10010:24;:::i;:::-;9999:35;;9944:96;;;:::o;10046:126::-;10083:7;10123:42;10116:5;10112:54;10101:65;;10046:126;;;:::o;10178:77::-;10215:7;10244:5;10233:16;;10178:77;;;:::o;10261:154::-;10345:6;10340:3;10335;10322:30;10407:1;10398:6;10393:3;10389:16;10382:27;10261:154;;;:::o;10421:307::-;10489:1;10499:113;10513:6;10510:1;10507:13;10499:113;;;10598:1;10593:3;10589:11;10583:18;10579:1;10574:3;10570:11;10563:39;10535:2;10532:1;10528:10;10523:15;;10499:113;;;10630:6;10627:1;10624:13;10621:101;;;10710:1;10701:6;10696:3;10692:16;10685:27;10621:101;10470:258;10421:307;;;:::o;10734:320::-;10778:6;10815:1;10809:4;10805:12;10795:22;;10862:1;10856:4;10852:12;10883:18;10873:81;;10939:4;10931:6;10927:17;10917:27;;10873:81;11001:2;10993:6;10990:14;10970:18;10967:38;10964:84;;;11020:18;;:::i;:::-;10964:84;10785:269;10734:320;;;:::o;11060:281::-;11143:27;11165:4;11143:27;:::i;:::-;11135:6;11131:40;11273:6;11261:10;11258:22;11237:18;11225:10;11222:34;11219:62;11216:88;;;11284:18;;:::i;:::-;11216:88;11324:10;11320:2;11313:22;11103:238;11060:281;;:::o;11347:180::-;11395:77;11392:1;11385:88;11492:4;11489:1;11482:15;11516:4;11513:1;11506:15;11533:180;11581:77;11578:1;11571:88;11678:4;11675:1;11668:15;11702:4;11699:1;11692:15;11719:180;11767:77;11764:1;11757:88;11864:4;11861:1;11854:15;11888:4;11885:1;11878:15;11905:180;11953:77;11950:1;11943:88;12050:4;12047:1;12040:15;12074:4;12071:1;12064:15;12091:117;12200:1;12197;12190:12;12214:117;12323:1;12320;12313:12;12337:117;12446:1;12443;12436:12;12460:117;12569:1;12566;12559:12;12583:102;12624:6;12675:2;12671:7;12666:2;12659:5;12655:14;12651:28;12641:38;;12583:102;;;:::o;12691:234::-;12831:34;12827:1;12819:6;12815:14;12808:58;12900:17;12895:2;12887:6;12883:15;12876:42;12691:234;:::o;12931:229::-;13071:34;13067:1;13059:6;13055:14;13048:58;13140:12;13135:2;13127:6;13123:15;13116:37;12931:229;:::o;13166:224::-;13306:34;13302:1;13294:6;13290:14;13283:58;13375:7;13370:2;13362:6;13358:15;13351:32;13166:224;:::o;13396:229::-;13536:34;13532:1;13524:6;13520:14;13513:58;13605:12;13600:2;13592:6;13588:15;13581:37;13396:229;:::o;13631:220::-;13771:34;13767:1;13759:6;13755:14;13748:58;13840:3;13835:2;13827:6;13823:15;13816:28;13631:220;:::o;13857:122::-;13930:24;13948:5;13930:24;:::i;:::-;13923:5;13920:35;13910:63;;13969:1;13966;13959:12;13910:63;13857:122;:::o;13985:::-;14058:24;14076:5;14058:24;:::i;:::-;14051:5;14048:35;14038:63;;14097:1;14094;14087:12;14038:63;13985:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "831600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CouponMint(uint256,uint256)": "infinite",
								"balanceOf(address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"transf(address,address,uint256,uint256,bytes)": "infinite",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_msgSender()": "22",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setURI(string memory)": "infinite",
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3849,
									"end": 3862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3857,
									"end": 3861,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3849,
									"end": 3856,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3849,
									"end": 3856,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3849,
									"end": 3856,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 3849,
									"end": 3862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3849,
									"end": 3862,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 3849,
									"end": 3862,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3849,
									"end": 3862,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3849,
									"end": 3862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3807,
									"end": 3869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6936,
									"end": 7022,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6936,
									"end": 7022,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7009,
									"end": 7015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7006,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6936,
									"end": 7022,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6936,
									"end": 7022,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 889,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 926,
									"end": 935,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 917,
									"end": 924,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 913,
									"end": 936,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 909,
									"end": 941,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 944,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 906,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1085,
									"end": 1086,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1083,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1087,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1133,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1134,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1101,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1308,
									"end": 1315,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1297,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1284,
									"end": 1306,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1242,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1232,
									"end": 1316,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1326,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 809,
									"end": 1333,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1379,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1400,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1420,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1457,
									"end": 1461,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1449,
									"end": 1455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1429,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1339,
									"end": 1468,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1513,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1534,
									"end": 1543,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1474,
									"end": 1549,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1617,
									"end": 1621,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1707,
									"end": 1725,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1726,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1693,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1767,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1759,
									"end": 1796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1851,
									"end": 1855,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1841,
									"end": 1856,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1833,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1863,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1937,
									"end": 1938,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1961,
									"end": 1967,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1958,
									"end": 1959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1955,
									"end": 1968,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2047,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2044,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2048,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2049,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2027,
									"end": 2028,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2025,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2018,
									"end": 2029,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2011,
									"end": 2050,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1983,
									"end": 1985,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 1986,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1971,
									"end": 1986,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1947,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2078,
									"end": 2084,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2075,
									"end": 2076,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2072,
									"end": 2085,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2159,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2149,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2144,
									"end": 2147,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2140,
									"end": 2156,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2160,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2069,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 2176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1869,
									"end": 2176,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2226,
									"end": 2232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2263,
									"end": 2264,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2257,
									"end": 2261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2253,
									"end": 2265,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2243,
									"end": 2265,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2310,
									"end": 2311,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2304,
									"end": 2308,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2312,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2331,
									"end": 2349,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2391,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 2379,
									"end": 2385,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2375,
									"end": 2392,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2365,
									"end": 2392,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2321,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2449,
									"end": 2451,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2441,
									"end": 2447,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2438,
									"end": 2452,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2415,
									"end": 2453,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2468,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2412,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2233,
									"end": 2502,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2182,
									"end": 2502,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2613,
									"end": 2617,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 2591,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2583,
									"end": 2589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2619,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2727,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2709,
									"end": 2719,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2706,
									"end": 2728,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2703,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2673,
									"end": 2683,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2670,
									"end": 2704,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2667,
									"end": 2729,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2732,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2664,
									"end": 2752,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2772,
									"end": 2782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2768,
									"end": 2770,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2761,
									"end": 2783,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2551,
									"end": 2789,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2508,
									"end": 2789,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2795,
									"end": 2975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2843,
									"end": 2920,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2840,
									"end": 2841,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2833,
									"end": 2921,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2940,
									"end": 2944,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2937,
									"end": 2938,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2930,
									"end": 2945,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2969,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2981,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3026,
									"end": 3027,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3019,
									"end": 3107,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3126,
									"end": 3130,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3116,
									"end": 3131,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3150,
									"end": 3154,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3147,
									"end": 3148,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3140,
									"end": 3155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3167,
									"end": 3284,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 3290,
									"end": 3407,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3399,
									"end": 3400,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3396,
									"end": 3397,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3389,
									"end": 3401,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 3413,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3519,
									"end": 3520,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3512,
									"end": 3524,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3536,
									"end": 3653,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3645,
									"end": 3646,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3642,
									"end": 3643,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3635,
									"end": 3647,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3700,
									"end": 3706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3751,
									"end": 3753,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3747,
									"end": 3754,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3742,
									"end": 3744,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3735,
									"end": 3740,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3731,
									"end": 3745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3727,
									"end": 3755,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3717,
									"end": 3755,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3659,
									"end": 3761,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 12045,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220469b3bde519080a923b3ec084d728a00dbf2f3dff509150407ad3fddf6d6d3a964736f6c63430008070033",
									".code": [
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "57E87575"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "A6F27714"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 12045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4613,
											"end": 4620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4636,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4773,
											"end": 4775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4756,
											"end": 4785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4792,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4319,
											"end": 4332,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4351,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4344,
											"end": 4355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4268,
											"end": 4362,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11697,
											"end": 11707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11709,
											"end": 11717,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11719,
											"end": 11725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11691,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 11691,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11620,
											"end": 11817,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11983,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12001,
											"end": 12005,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12007,
											"end": 12011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12013,
											"end": 12021,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12029,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12031,
											"end": 12035,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11983,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11983,
											"end": 12036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11983,
											"end": 12036,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11983,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11823,
											"end": 12043,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5058,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5058,
											"end": 5070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5058,
											"end": 5070,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5058,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5050,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5050,
											"end": 5070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5050,
											"end": 5054,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5050,
											"end": 5070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5050,
											"end": 5070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5050,
											"end": 5070,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5029,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5153,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5171,
											"end": 5175,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5193,
											"end": 5197,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5153,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5153,
											"end": 5198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5153,
											"end": 5198,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5153,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4859,
											"end": 5205,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7395,
											"end": 8019,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7395,
											"end": 8019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7556,
											"end": 7557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7542,
											"end": 7558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7542,
											"end": 7558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7542,
											"end": 7544,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7542,
											"end": 7558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7542,
											"end": 7558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7542,
											"end": 7558,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7542,
											"end": 7558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7534,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7626,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7626,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7626,
											"end": 7638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7626,
											"end": 7638,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7626,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7648,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7671,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7689,
											"end": 7691,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7671,
											"end": 7692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7671,
											"end": 7692,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7671,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7648,
											"end": 7692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7648,
											"end": 7692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7702,
											"end": 7726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7747,
											"end": 7753,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7729,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7729,
											"end": 7754,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7729,
											"end": 7754,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7729,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7702,
											"end": 7754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7702,
											"end": 7754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7786,
											"end": 7794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7804,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7810,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7815,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7824,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7830,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7765,
											"end": 7831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7765,
											"end": 7831,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7765,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7852,
											"end": 7854,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 7923,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7907,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 7925,
											"end": 7927,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7929,
											"end": 7935,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7884,
											"end": 7936,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7947,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 7967,
											"end": 7975,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7985,
											"end": 7986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 7991,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7993,
											"end": 7996,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7998,
											"end": 8005,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8007,
											"end": 8011,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7947,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7947,
											"end": 8012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7947,
											"end": 8012,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 7947,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7524,
											"end": 8019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7524,
											"end": 8019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7524,
											"end": 8019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 8019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 8019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 8019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 8019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7395,
											"end": 8019,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5211,
											"end": 6113,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5211,
											"end": 6113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5392,
											"end": 5408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5408,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5392,
											"end": 5408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5408,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5384,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5461,
											"end": 5477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5480,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5480,
											"end": 5492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5480,
											"end": 5492,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5480,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5461,
											"end": 5492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5461,
											"end": 5492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5543,
											"end": 5545,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5525,
											"end": 5546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5525,
											"end": 5546,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5525,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5583,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5583,
											"end": 5608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5583,
											"end": 5608,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5583,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5640,
											"end": 5648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5650,
											"end": 5654,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5656,
											"end": 5658,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5663,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5672,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5619,
											"end": 5679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5619,
											"end": 5679,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5619,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 5709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5724,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5730,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 5731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5690,
											"end": 5731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5777,
											"end": 5783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5783,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5741,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5927,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5895,
											"end": 5897,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5899,
											"end": 5903,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5927,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5957,
											"end": 5959,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5963,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6023,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6019,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6005,
											"end": 6013,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6025,
											"end": 6027,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 6035,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6036,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6067,
											"end": 6075,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6077,
											"end": 6081,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6083,
											"end": 6085,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6087,
											"end": 6090,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6092,
											"end": 6099,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6101,
											"end": 6105,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6047,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5211,
											"end": 6113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3671,
											"end": 3758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3671,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3671,
											"end": 3758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3671,
											"end": 3758,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11393,
											"end": 11614,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11393,
											"end": 11614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11499,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11515,
											"end": 11537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11554,
											"end": 11555,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11540,
											"end": 11556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11577,
											"end": 11584,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11572,
											"end": 11573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11602,
											"end": 11607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11595,
											"end": 11607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11595,
											"end": 11607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11595,
											"end": 11607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11393,
											"end": 11614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11393,
											"end": 11614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11393,
											"end": 11614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11393,
											"end": 11614,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10027,
											"end": 10241,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10027,
											"end": 10241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10241,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11174,
											"end": 11387,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 11174,
											"end": 11387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11174,
											"end": 11387,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1212,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1253,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1223,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1262,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1262,
											"end": 1341,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1341,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1262,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1223,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1452,
											"end": 1459,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1407,
											"end": 1460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1407,
											"end": 1460,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1407,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1460,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1663,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1697,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1663,
											"end": 1716,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1663,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1663,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1716,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1924,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1926,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1972,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2056,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1939,
											"end": 2056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1975,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1975,
											"end": 2054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2054,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1975,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2056,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1939,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2134,
											"end": 2141,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2123,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2080,
											"end": 2142,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2142,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2080,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2142,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2165,
											"end": 2639,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2165,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2288,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2293,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2258,
											"end": 2377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2377,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2258,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2486,
											"end": 2493,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2441,
											"end": 2494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2494,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2441,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2545,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2614,
											"end": 2621,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2603,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2569,
											"end": 2622,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 2622,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2569,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2559,
											"end": 2622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2559,
											"end": 2622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2639,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2639,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2639,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2645,
											"end": 2974,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2645,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2704,
											"end": 2710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2739,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2756,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2721,
											"end": 2840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2759,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2759,
											"end": 2838,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2759,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2759,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2840,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2721,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 2938,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2974,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2974,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2974,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3454,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2980,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3103,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3108,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3192,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3073,
											"end": 3192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3111,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3111,
											"end": 3190,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3111,
											"end": 3190,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3111,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3192,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3073,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3301,
											"end": 3308,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3290,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3256,
											"end": 3309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3256,
											"end": 3309,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3256,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3309,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3384,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3429,
											"end": 3436,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3384,
											"end": 3437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3384,
											"end": 3437,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3384,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3454,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3460,
											"end": 3824,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3460,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3576,
											"end": 3615,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3576,
											"end": 3615,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3576,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3695,
											"end": 3701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3693,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3631,
											"end": 3702,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3631,
											"end": 3702,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3631,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3754,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3744,
											"end": 3748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3737,
											"end": 3742,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3711,
											"end": 3763,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3711,
											"end": 3763,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 3711,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3786,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3824,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3824,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3830,
											"end": 4196,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3830,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3993,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4057,
											"end": 4059,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3993,
											"end": 4060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3993,
											"end": 4060,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3993,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 4060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3986,
											"end": 4060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4158,
											"end": 4161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4069,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4069,
											"end": 4162,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4069,
											"end": 4162,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4069,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3830,
											"end": 4196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3830,
											"end": 4196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3830,
											"end": 4196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3830,
											"end": 4196,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4202,
											"end": 4568,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4202,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4429,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 4424,
											"end": 4427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4365,
											"end": 4432,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4365,
											"end": 4432,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4365,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4441,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4530,
											"end": 4533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4441,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4441,
											"end": 4534,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4441,
											"end": 4534,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4441,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4554,
											"end": 4557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4568,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4568,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4801,
											"end": 4803,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4796,
											"end": 4799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4737,
											"end": 4804,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4804,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4737,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4902,
											"end": 4905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4813,
											"end": 4906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4813,
											"end": 4906,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4813,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4933,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4926,
											"end": 4929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4940,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4946,
											"end": 5312,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4946,
											"end": 5312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5109,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5173,
											"end": 5175,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 5168,
											"end": 5171,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5109,
											"end": 5176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5109,
											"end": 5176,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5109,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5274,
											"end": 5277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5185,
											"end": 5278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5185,
											"end": 5278,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5185,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5298,
											"end": 5301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5294,
											"end": 5306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4946,
											"end": 5312,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5318,
											"end": 5684,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 5318,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5545,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5540,
											"end": 5543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5548,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5646,
											"end": 5649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5557,
											"end": 5650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5557,
											"end": 5650,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 5557,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5670,
											"end": 5673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5690,
											"end": 5808,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5690,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5795,
											"end": 5800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 5777,
											"end": 5801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5777,
											"end": 5801,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 5777,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5690,
											"end": 5808,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5965,
											"end": 5967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5954,
											"end": 5963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 5968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6004,
											"end": 6024,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 5998,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5985,
											"end": 6002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5978,
											"end": 6025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6115,
											"end": 6119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6042,
											"end": 6120,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6042,
											"end": 6120,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6042,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 6127,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6133,
											"end": 6552,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6133,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6299,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6326,
											"end": 6335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6380,
											"end": 6384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6396,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6414,
											"end": 6545,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6414,
											"end": 6545,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6414,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6133,
											"end": 6552,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6724,
											"end": 6728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6762,
											"end": 6764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6751,
											"end": 6760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6739,
											"end": 6765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6821,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6965,
											"end": 6969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 6839,
											"end": 6970,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6839,
											"end": 6970,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6839,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6983,
											"end": 7402,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6983,
											"end": 7402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7176,
											"end": 7185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7246,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7222,
											"end": 7223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7211,
											"end": 7220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7264,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7390,
											"end": 7394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7264,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7264,
											"end": 7395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7264,
											"end": 7395,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7264,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 7402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 7402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 7402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 7402,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7612,
											"end": 7614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7671,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7647,
											"end": 7648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7636,
											"end": 7645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7815,
											"end": 7819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7408,
											"end": 7827,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7833,
											"end": 8252,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 7833,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7999,
											"end": 8003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8037,
											"end": 8039,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8026,
											"end": 8035,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8014,
											"end": 8040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8061,
											"end": 8070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8240,
											"end": 8244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8114,
											"end": 8245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8114,
											"end": 8245,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8114,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 8252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 8252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 8252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 8252,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8258,
											"end": 8480,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 8258,
											"end": 8480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8378,
											"end": 8387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8470,
											"end": 8471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8459,
											"end": 8468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8455,
											"end": 8472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8402,
											"end": 8473,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8402,
											"end": 8473,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8402,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8480,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8480,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8486,
											"end": 8818,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 8486,
											"end": 8818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8634,
											"end": 8643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8726,
											"end": 8727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8715,
											"end": 8724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 8708,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8658,
											"end": 8729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8658,
											"end": 8729,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8658,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 8807,
											"end": 8809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8796,
											"end": 8805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8792,
											"end": 8810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8739,
											"end": 8811,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8739,
											"end": 8811,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 8739,
											"end": 8811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8818,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8818,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8486,
											"end": 8818,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8824,
											"end": 8953,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8824,
											"end": 8953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8885,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8885,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8885,
											"end": 8905,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8885,
											"end": 8905,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8885,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8942,
											"end": 8946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8934,
											"end": 8940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8914,
											"end": 8947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8914,
											"end": 8947,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8914,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8953,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8959,
											"end": 9034,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8959,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8992,
											"end": 8998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9027,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9019,
											"end": 9028,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 9034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 9034,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9040,
											"end": 9347,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9040,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9101,
											"end": 9105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9209,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9183,
											"end": 9189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9180,
											"end": 9210,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 9177,
											"end": 9233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 9213,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 9213,
											"end": 9231,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9213,
											"end": 9231,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 9213,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9233,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 9177,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 9273,
											"end": 9279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9251,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 9251,
											"end": 9280,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9251,
											"end": 9280,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 9251,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9243,
											"end": 9280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9243,
											"end": 9280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9335,
											"end": 9339,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9329,
											"end": 9333,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9325,
											"end": 9340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9040,
											"end": 9347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9040,
											"end": 9347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9040,
											"end": 9347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9040,
											"end": 9347,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9353,
											"end": 9452,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9353,
											"end": 9452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9405,
											"end": 9411,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9439,
											"end": 9444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9433,
											"end": 9445,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9452,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9458,
											"end": 9627,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 9458,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9576,
											"end": 9582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9571,
											"end": 9574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9583,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9620,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9611,
											"end": 9614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9627,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9627,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9627,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9633,
											"end": 9938,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 9633,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9673,
											"end": 9676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 9710,
											"end": 9711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 9692,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9687,
											"end": 9712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9726,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9744,
											"end": 9745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9726,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 9726,
											"end": 9746,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9726,
											"end": 9746,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9726,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9746,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9812,
											"end": 9878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9808,
											"end": 9882,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 9883,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 9799,
											"end": 9906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 9886,
											"end": 9904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9906,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 9799,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9923,
											"end": 9932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9633,
											"end": 9938,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9633,
											"end": 9938,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9633,
											"end": 9938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9633,
											"end": 9938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9633,
											"end": 9938,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 10028,
											"end": 10033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10010,
											"end": 10034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 10010,
											"end": 10034,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10010,
											"end": 10034,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 10010,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9999,
											"end": 10034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9999,
											"end": 10034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10046,
											"end": 10172,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 10046,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10083,
											"end": 10090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10123,
											"end": 10165,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10116,
											"end": 10121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10112,
											"end": 10166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10046,
											"end": 10172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10046,
											"end": 10172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10046,
											"end": 10172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10046,
											"end": 10172,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10178,
											"end": 10255,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10178,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10255,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10261,
											"end": 10415,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10261,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10340,
											"end": 10343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10322,
											"end": 10352,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 10407,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10393,
											"end": 10396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10389,
											"end": 10405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10382,
											"end": 10409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10261,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10261,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10261,
											"end": 10415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10261,
											"end": 10415,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10421,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 10421,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10612,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 10499,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10513,
											"end": 10519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10510,
											"end": 10511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10612,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10499,
											"end": 10612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10598,
											"end": 10599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10593,
											"end": 10596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10583,
											"end": 10601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10574,
											"end": 10577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10570,
											"end": 10581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10563,
											"end": 10602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10535,
											"end": 10537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10523,
											"end": 10538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 10499,
											"end": 10612,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10612,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10499,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10630,
											"end": 10636,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10624,
											"end": 10637,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10722,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10621,
											"end": 10722,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10710,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10696,
											"end": 10699,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10692,
											"end": 10708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10685,
											"end": 10712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10722,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10621,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10470,
											"end": 10728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10421,
											"end": 10728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10421,
											"end": 10728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10421,
											"end": 10728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10421,
											"end": 10728,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10734,
											"end": 11054,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 10734,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10778,
											"end": 10784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10815,
											"end": 10816,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10809,
											"end": 10813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10805,
											"end": 10817,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10795,
											"end": 10817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10862,
											"end": 10863,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10856,
											"end": 10860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10852,
											"end": 10864,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10873,
											"end": 10954,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10939,
											"end": 10943,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 10931,
											"end": 10937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10944,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10954,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10873,
											"end": 10954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11001,
											"end": 11003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 11004,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10970,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 11005,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10964,
											"end": 11048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 11020,
											"end": 11038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 11020,
											"end": 11038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11020,
											"end": 11038,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 11020,
											"end": 11038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10964,
											"end": 11048,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10964,
											"end": 11048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10785,
											"end": 11054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 11054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 11054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 11054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 11054,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11060,
											"end": 11341,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 11060,
											"end": 11341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 11143,
											"end": 11170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11143,
											"end": 11170,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 11143,
											"end": 11170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11135,
											"end": 11141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11131,
											"end": 11171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11261,
											"end": 11271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11280,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11255,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11225,
											"end": 11235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11256,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11219,
											"end": 11281,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11216,
											"end": 11304,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11216,
											"end": 11304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 11216,
											"end": 11304,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11284,
											"end": 11302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 11284,
											"end": 11302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11284,
											"end": 11302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11284,
											"end": 11302,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 11284,
											"end": 11302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11216,
											"end": 11304,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 11216,
											"end": 11304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11324,
											"end": 11334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11313,
											"end": 11335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11341,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11347,
											"end": 11527,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 11347,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11395,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11392,
											"end": 11393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11385,
											"end": 11473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11492,
											"end": 11496,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11489,
											"end": 11490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11482,
											"end": 11497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11516,
											"end": 11520,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11513,
											"end": 11514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11506,
											"end": 11521,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11713,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 11533,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11581,
											"end": 11658,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11578,
											"end": 11579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11571,
											"end": 11659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11678,
											"end": 11682,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11675,
											"end": 11676,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11702,
											"end": 11706,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11699,
											"end": 11700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11692,
											"end": 11707,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11719,
											"end": 11899,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11719,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11767,
											"end": 11844,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11764,
											"end": 11765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11757,
											"end": 11845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11864,
											"end": 11868,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11861,
											"end": 11862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11888,
											"end": 11892,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11885,
											"end": 11886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11878,
											"end": 11893,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 12085,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11905,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11953,
											"end": 12030,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11950,
											"end": 11951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11943,
											"end": 12031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12050,
											"end": 12054,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 12047,
											"end": 12048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12040,
											"end": 12055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12078,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12071,
											"end": 12072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12064,
											"end": 12079,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12208,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 12091,
											"end": 12208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12200,
											"end": 12201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12197,
											"end": 12198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12202,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 12331,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 12214,
											"end": 12331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12313,
											"end": 12325,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12337,
											"end": 12454,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 12337,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12443,
											"end": 12444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12436,
											"end": 12448,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12460,
											"end": 12577,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 12460,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12569,
											"end": 12570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12566,
											"end": 12567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12559,
											"end": 12571,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12685,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 12583,
											"end": 12685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12624,
											"end": 12630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12675,
											"end": 12677,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 12671,
											"end": 12678,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12666,
											"end": 12668,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 12659,
											"end": 12664,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12655,
											"end": 12669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12651,
											"end": 12679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12641,
											"end": 12679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12685,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12691,
											"end": 12925,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 12691,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12831,
											"end": 12865,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 12827,
											"end": 12828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12819,
											"end": 12825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12815,
											"end": 12829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 12866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12900,
											"end": 12917,
											"name": "PUSH",
											"source": 1,
											"value": "6572206E6F7220617070726F7665640000000000000000000000000000000000"
										},
										{
											"begin": 12895,
											"end": 12897,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12887,
											"end": 12893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12883,
											"end": 12898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12876,
											"end": 12918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12691,
											"end": 12925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12691,
											"end": 12925,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12931,
											"end": 13160,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 12931,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13071,
											"end": 13105,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 13067,
											"end": 13068,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13059,
											"end": 13065,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13106,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13152,
											"name": "PUSH",
											"source": 1,
											"value": "616C6964206F776E657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 13135,
											"end": 13137,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13127,
											"end": 13133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13123,
											"end": 13138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13116,
											"end": 13153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 13160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12931,
											"end": 13160,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13166,
											"end": 13390,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 13166,
											"end": 13390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13306,
											"end": 13340,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 13302,
											"end": 13303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13294,
											"end": 13300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13290,
											"end": 13304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13283,
											"end": 13341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13382,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13370,
											"end": 13372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13362,
											"end": 13368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13358,
											"end": 13373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13166,
											"end": 13390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13166,
											"end": 13390,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13396,
											"end": 13625,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 13396,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13570,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 13532,
											"end": 13533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13524,
											"end": 13530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13520,
											"end": 13534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13513,
											"end": 13571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13617,
											"name": "PUSH",
											"source": 1,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 13600,
											"end": 13602,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13592,
											"end": 13598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13588,
											"end": 13603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13581,
											"end": 13618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13396,
											"end": 13625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13396,
											"end": 13625,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13631,
											"end": 13851,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 13631,
											"end": 13851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13771,
											"end": 13805,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 13767,
											"end": 13768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13759,
											"end": 13765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13755,
											"end": 13769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13748,
											"end": 13806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13840,
											"end": 13843,
											"name": "PUSH",
											"source": 1,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13835,
											"end": 13837,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13827,
											"end": 13833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13823,
											"end": 13838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13631,
											"end": 13851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13631,
											"end": 13851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13857,
											"end": 13979,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 13857,
											"end": 13979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13930,
											"end": 13954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 13948,
											"end": 13953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13930,
											"end": 13954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 13930,
											"end": 13954,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13930,
											"end": 13954,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 13930,
											"end": 13954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13923,
											"end": 13928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13920,
											"end": 13955,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 13973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 13910,
											"end": 13973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13969,
											"end": 13970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13966,
											"end": 13967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13959,
											"end": 13971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 13973,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 13910,
											"end": 13973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13857,
											"end": 13979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13857,
											"end": 13979,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13985,
											"end": 14107,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 13985,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14058,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 14076,
											"end": 14081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14058,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 14058,
											"end": 14082,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14058,
											"end": 14082,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 14058,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14051,
											"end": 14056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14048,
											"end": 14083,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14038,
											"end": 14101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 14038,
											"end": 14101,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14097,
											"end": 14098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14094,
											"end": 14095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14087,
											"end": 14099,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14038,
											"end": 14101,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 14038,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13985,
											"end": 14107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13985,
											"end": 14107,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CouponMint(uint256,uint256)": "57e87575",
							"balanceOf(address,uint256)": "00fdd58e",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"transf(address,address,uint256,uint256,bytes)": "a6f27714",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"discount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CouponMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"discount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coupon.sol\":\"Coupon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coupon.sol\":{\"keccak256\":\"0x88e4c5c07a46cb91b2fd3ee1ec4054c3ac04a220f91f09260949b0014152c79a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b090e89298f41aca8b42c5b1c4ca60b60831debac99b0036ffdd2a813a7f057\",\"dweb:/ipfs/QmV83CTf9h3rsbm1yFEmtE3Bsbk7HEnVcYdHojAhQzyNAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 58,
								"contract": "contracts/Coupon.sol:Coupon",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 64,
								"contract": "contracts/Coupon.sol:Coupon",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 78,
								"contract": "contracts/Coupon.sol:Coupon",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coupon.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coupon.sol\":{\"keccak256\":\"0x88e4c5c07a46cb91b2fd3ee1ec4054c3ac04a220f91f09260949b0014152c79a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b090e89298f41aca8b42c5b1c4ca60b60831debac99b0036ffdd2a813a7f057\",\"dweb:/ipfs/QmV83CTf9h3rsbm1yFEmtE3Bsbk7HEnVcYdHojAhQzyNAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coupon.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coupon.sol\":{\"keccak256\":\"0x88e4c5c07a46cb91b2fd3ee1ec4054c3ac04a220f91f09260949b0014152c79a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b090e89298f41aca8b42c5b1c4ca60b60831debac99b0036ffdd2a813a7f057\",\"dweb:/ipfs/QmV83CTf9h3rsbm1yFEmtE3Bsbk7HEnVcYdHojAhQzyNAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coupon.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coupon.sol\":{\"keccak256\":\"0x88e4c5c07a46cb91b2fd3ee1ec4054c3ac04a220f91f09260949b0014152c79a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b090e89298f41aca8b42c5b1c4ca60b60831debac99b0036ffdd2a813a7f057\",\"dweb:/ipfs/QmV83CTf9h3rsbm1yFEmtE3Bsbk7HEnVcYdHojAhQzyNAG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Coupon.sol": {
				"ast": {
					"absolutePath": "contracts/Coupon.sol",
					"exportedSymbols": {
						"Coupon": [
							598
						],
						"ERC165": [
							32
						],
						"IERC1155Receiver": [
							52
						],
						"IERC165": [
							11
						]
					},
					"id": 599,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "347:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "361:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "715:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "740:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "733:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "776:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "776:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "775:6:0"
									},
									"scope": 11,
									"src": "706:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 599,
							"src": "337:447:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 13,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1391:7:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "1391:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 12,
								"nodeType": "StructuredDocumentation",
								"src": "786:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32,
								11
							],
							"name": "ERC165",
							"nameLocation": "1381:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1601:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 23,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1618:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 25,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1638:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 24,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1633:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1633:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$11",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1633:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1618:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 22,
												"id": 29,
												"nodeType": "Return",
												"src": "1611:47:0"
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "1405:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1475:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 19,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1565:8:0"
									},
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1500:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1493:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 16,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1493:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:20:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1591:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:6:0"
									},
									"scope": 32,
									"src": "1466:199:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 599,
							"src": "1363:304:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 34,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1739:7:0"
									},
									"id": 35,
									"nodeType": "InheritanceSpecifier",
									"src": "1739:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 33,
								"nodeType": "StructuredDocumentation",
								"src": "1669:39:0",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 52,
							"linearizedBaseContracts": [
								52,
								11
							],
							"name": "IERC1155Receiver",
							"nameLocation": "1719:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1753:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "2593:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2628:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2620:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2654:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2646:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2676:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2668:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2696:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2688:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2726:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2711:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 45,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2711:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:126:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2755:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 48,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:8:0"
									},
									"scope": 52,
									"src": "2584:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 599,
							"src": "1709:1056:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 598,
							"linearizedBaseContracts": [
								598
							],
							"name": "Coupon",
							"nameLocation": "2776:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 58,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "2894:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "2838:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 57,
										"keyType": {
											"id": 53,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2846:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2838:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 56,
											"keyType": {
												"id": 54,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2865:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2857:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 55,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2876:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 64,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "3013:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "2960:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 63,
										"keyType": {
											"id": 59,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2968:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2960:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 62,
											"keyType": {
												"id": 60,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2987:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2979:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 61,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2998:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 76,
									"name": "TransferSingle",
									"nameLocation": "3044:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3068:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3118:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3102:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3148:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3132:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3168:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3160:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3188:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3180:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3058:141:0"
									},
									"src": "3038:162:0"
								},
								{
									"constant": false,
									"id": 78,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "3335:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 598,
									"src": "3320:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 77,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3320:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3411:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 85,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "3635:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "3635:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3635:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3657:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3635:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 84,
												"id": 90,
												"nodeType": "Return",
												"src": "3628:30:0"
											}
										]
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "3355:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3374:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3366:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3365:17:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3405:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 82,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3405:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3404:6:0"
									},
									"scope": 598,
									"src": "3346:319:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3724:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3741:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3741:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3734:17:0"
											}
										]
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3680:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3690:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3714:9:0"
									},
									"scope": 598,
									"src": "3671:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3839:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 108,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "3857:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 107,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "3849:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3849:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "3849:13:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3764:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 112,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "3833:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3819:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 103,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3819:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:20:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3839:0:0"
									},
									"scope": 598,
									"src": "3807:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "4334:28:0",
										"statements": [
											{
												"expression": {
													"id": 120,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "4351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 119,
												"id": 121,
												"nodeType": "Return",
												"src": "4344:11:0"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3875:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "4277:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "4281:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4280:9:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "4319:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4319:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4318:15:0"
									},
									"scope": 598,
									"src": "4268:94:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4626:166:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 134,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "4657:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4676:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4668:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 135,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4668:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4668:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4657:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4692:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4636:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4636:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "4636:110:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 143,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "4763:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 145,
														"indexExpression": {
															"id": 144,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "4773:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4763:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 147,
													"indexExpression": {
														"id": 146,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "4777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4763:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 132,
												"id": 148,
												"nodeType": "Return",
												"src": "4756:29:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "4368:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4513:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4531:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4523:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4548:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4540:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4522:29:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4613:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4612:9:0"
									},
									"scope": 598,
									"src": "4504:288:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5019:186:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 165,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "5050:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 166,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "5058:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5058:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5050:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5084:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															},
															"value": "ERC1155: caller is not token owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															}
														],
														"id": 164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5029:114:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5029:114:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 173,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "5171:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 174,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "5177:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 175,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "5181:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 176,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "5185:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 177,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5193:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 172,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "5153:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5153:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "5153:45:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4798:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4868:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4902:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4894:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4924:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4916:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4964:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4956:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4993:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4980:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4980:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4884:119:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5019:0:0"
									},
									"scope": 598,
									"src": "4859:346:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "5374:739:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 195,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "5392:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5406:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5398:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 196,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5398:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5398:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5392:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5410:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "5384:66:0"
											},
											{
												"assignments": [
													205
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5469:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 287,
														"src": "5461:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 204,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5461:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 208,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 206,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "5480:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5461:31:0"
											},
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5519:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 287,
														"src": "5502:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 211,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5502:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 212,
															"nodeType": "ArrayTypeName",
															"src": "5502:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 217,
												"initialValue": {
													"arguments": [
														{
															"id": 215,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5543:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "5525:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5525:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5502:44:0"
											},
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5573:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 287,
														"src": "5556:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 220,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5556:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 221,
															"nodeType": "ArrayTypeName",
															"src": "5556:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"arguments": [
														{
															"id": 224,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "5601:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 223,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "5583:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5583:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5556:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "5640:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 229,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "5650:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5656:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "5660:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 232,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "5665:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 233,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "5674:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 227,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "5619:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5619:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "5619:60:0"
											},
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5698:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 287,
														"src": "5690:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 238,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "5712:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 240,
														"indexExpression": {
															"id": 239,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5722:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5712:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 242,
													"indexExpression": {
														"id": 241,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "5726:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5712:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5690:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 245,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "5762:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 246,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "5777:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5762:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5797:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "5741:110:0"
											},
											{
												"id": 261,
												"nodeType": "UncheckedBlock",
												"src": "5861:77:0",
												"statements": [
													{
														"expression": {
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 251,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "5885:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 254,
																	"indexExpression": {
																		"id": 252,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "5895:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5885:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 255,
																"indexExpression": {
																	"id": 253,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "5899:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5885:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 256,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "5907:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 257,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "5921:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5907:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5885:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 260,
														"nodeType": "ExpressionStatement",
														"src": "5885:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 262,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "5947:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 265,
															"indexExpression": {
																"id": 263,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "5957:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5947:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 266,
														"indexExpression": {
															"id": 264,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5961:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5947:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 267,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "5968:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5947:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "5947:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 271,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6005:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6015:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6021:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "6025:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 275,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6029:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "5990:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5990:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "EmitStatement",
												"src": "5985:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6067:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "6077:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 281,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6083:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 282,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6087:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 283,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "6092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 284,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6101:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 278,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "6047:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6047:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "6047:59:0"
											}
										]
									},
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5220:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5255:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "5247:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5277:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "5269:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5297:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "5289:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5317:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "5309:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5346:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "5333:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5333:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5237:119:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5374:0:0"
									},
									"scope": 598,
									"src": "5211:902:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "6992:30:0",
										"statements": [
											{
												"expression": {
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 294,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "7002:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 295,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "7009:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "7002:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "7002:13:0"
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "6119:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "6945:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "6967:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "6953:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6953:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6952:22:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6992:0:0"
									},
									"scope": 598,
									"src": "6936:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "7524:495:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "7542:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7556:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7548:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7548:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7542:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7560:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7534:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "7534:62:0"
											},
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "7615:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "7607:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 321,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7607:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 323,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "7626:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7626:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7607:31:0"
											},
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "7665:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "7648:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 328,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7648:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 329,
															"nodeType": "ArrayTypeName",
															"src": "7648:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [
														{
															"id": 332,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "7689:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 331,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "7671:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7648:44:0"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "7719:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "7702:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 337,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7702:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 338,
															"nodeType": "ArrayTypeName",
															"src": "7702:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [
														{
															"id": 341,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "7747:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 340,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "7729:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7729:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7702:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "7786:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7804:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7796:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 346,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7796:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7796:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "7808:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "7812:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 352,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "7817:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "7826:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 344,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "7765:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7765:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "7765:66:0"
											},
											{
												"expression": {
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 356,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "7842:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 359,
															"indexExpression": {
																"id": 357,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "7852:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7842:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 360,
														"indexExpression": {
															"id": 358,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "7856:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7842:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 361,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "7863:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7842:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "7842:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 365,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "7899:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7917:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7909:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7909:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7909:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "7921:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "7925:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 372,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "7929:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "7884:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7884:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "EmitStatement",
												"src": "7879:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "7967:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7985:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7977:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7977:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7977:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "7989:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "7993:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 383,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "7998:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "8007:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 375,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "7947:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7947:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "7947:65:0"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "7028:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7404:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7427:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "7419:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "7447:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "7439:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7467:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "7459:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "7483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7409:97:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7524:0:0"
									},
									"scope": 598,
									"src": "7395:624:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "8409:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 399,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "8427:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8443:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8435:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 400,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8435:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8435:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8427:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8447:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8419:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "8419:66:0"
											},
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8504:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 492,
														"src": "8496:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8496:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "8515:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8515:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8496:31:0"
											},
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8554:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 492,
														"src": "8537:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 415,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8537:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 416,
															"nodeType": "ArrayTypeName",
															"src": "8537:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"arguments": [
														{
															"id": 419,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "8578:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 418,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "8560:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8560:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8537:44:0"
											},
											{
												"assignments": [
													426
												],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8608:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 492,
														"src": "8591:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 424,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8591:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ArrayTypeName",
															"src": "8591:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"initialValue": {
													"arguments": [
														{
															"id": 428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "8636:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 427,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "8618:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8618:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8591:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 432,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "8675:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "8685:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8699:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8691:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 434,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8691:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8691:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "8703:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 439,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "8708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8717:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 431,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "8654:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8654:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "8654:66:0"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8739:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 492,
														"src": "8731:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 445,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "8753:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 447,
														"indexExpression": {
															"id": 446,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "8763:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8753:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 449,
													"indexExpression": {
														"id": 448,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "8767:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8753:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8731:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 452,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "8790:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 453,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "8805:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8790:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8813:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8782:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8782:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "8782:70:0"
											},
											{
												"id": 468,
												"nodeType": "UncheckedBlock",
												"src": "8862:77:0",
												"statements": [
													{
														"expression": {
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 458,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "8886:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 461,
																	"indexExpression": {
																		"id": 459,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "8896:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8886:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 462,
																"indexExpression": {
																	"id": 460,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "8900:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8886:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 463,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "8908:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 464,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8922:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8908:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8886:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 467,
														"nodeType": "ExpressionStatement",
														"src": "8886:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 470,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "8969:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "8979:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8993:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8985:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8985:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8985:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "8997:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 477,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "9001:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "8954:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8954:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "EmitStatement",
												"src": "8949:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "9039:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "9049:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9063:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9055:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9055:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9055:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "9067:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 488,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "9072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9081:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 480,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "9019:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9019:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "9019:65:0"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "8025:275:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8314:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8337:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8329:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8359:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8351:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8379:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "8371:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8319:72:0"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8409:0:0"
									},
									"scope": 598,
									"src": "8305:786:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "10239:2:0",
										"statements": []
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "9097:925:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10036:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10074:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "10066:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10100:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "10092:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10122:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "10114:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10151:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "10134:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 501,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 502,
													"nodeType": "ArrayTypeName",
													"src": "10134:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10181:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "10164:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 504,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 505,
													"nodeType": "ArrayTypeName",
													"src": "10164:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10211:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "10198:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10198:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10056:165:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10239:0:0"
									},
									"scope": 598,
									"src": "10027:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "11385:2:0",
										"statements": []
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "10247:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11183:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11220:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "11212:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11246:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "11238:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11268:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "11260:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11297:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "11280:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 520,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11280:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 521,
													"nodeType": "ArrayTypeName",
													"src": "11280:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11327:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "11310:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 523,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11310:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 524,
													"nodeType": "ArrayTypeName",
													"src": "11310:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11357:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "11344:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11344:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11202:165:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11385:0:0"
									},
									"scope": 598,
									"src": "11174:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "11505:109:0",
										"statements": [
											{
												"assignments": [
													543
												],
												"declarations": [
													{
														"constant": false,
														"id": 543,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "11532:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 558,
														"src": "11515:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 541,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11515:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 542,
															"nodeType": "ArrayTypeName",
															"src": "11515:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11554:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "11540:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 544,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11544:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 545,
															"nodeType": "ArrayTypeName",
															"src": "11544:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11540:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11515:41:0"
											},
											{
												"expression": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 550,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "11566:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 552,
														"indexExpression": {
															"hexValue": "30",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11572:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11566:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 553,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "11577:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11566:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "11566:18:0"
											},
											{
												"expression": {
													"id": 556,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 543,
													"src": "11602:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 538,
												"id": 557,
												"nodeType": "Return",
												"src": "11595:12:0"
											}
										]
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "11402:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "11428:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "11420:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11419:17:0"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "11483:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 535,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11483:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 536,
													"nodeType": "ArrayTypeName",
													"src": "11483:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11482:18:0"
									},
									"scope": 598,
									"src": "11393:221:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "11681:136:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 567,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11697:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11697:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "discount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "11709:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 570,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "11719:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11727:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 566,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "11691:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11691:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "11691:39:0"
											}
										]
									},
									"functionSelector": "57e87575",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CouponMint",
									"nameLocation": "11629:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "discount",
												"nameLocation": "11648:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "11640:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11666:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "11658:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11639:34:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11681:0:0"
									},
									"scope": 598,
									"src": "11620:197:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "11973:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "12001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "12007:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "discount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "12013:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 592,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "12023:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "12031:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "11983:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11983:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "11983:53:0"
											}
										]
									},
									"functionSelector": "a6f27714",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transf",
									"nameLocation": "11832:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11856:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "11848:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "11878:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "11870:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "discount",
												"nameLocation": "11900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "11892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11926:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "11918:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11955:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "11942:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11942:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11838:127:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11973:0:0"
									},
									"scope": 598,
									"src": "11823:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 599,
							"src": "2767:9278:0",
							"usedErrors": []
						}
					],
					"src": "32:12014:0"
				},
				"id": 0
			}
		}
	}
}