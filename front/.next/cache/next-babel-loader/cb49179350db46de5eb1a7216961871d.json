{"ast":null,"code":"var _jsxFileName = \"/Users/odongjae/Desktop/2022Study/codestates/project/beb-05-Bills/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    function onScroll() {\n      // console.log(\n      //   window.scrollY, // 얼마나 내렸는지\n      //   document.documentElement.clientHeight, // 브라우저에서 툴바를 제외한 실제 컨텐츠 부분. 화면 보이는 길이\n      //   document.documentElement.scrollHeight // 가장 위부터 가장 아래까지 총 길이\n      // );\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePost, loadPostLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"sources":["/Users/odongjae/Desktop/2022Study/codestates/project/beb-05-Bills/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","END","axios","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","Home","dispatch","me","state","user","mainPosts","hasMorePost","loadPostLoading","retweetError","post","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","addEventListener","removeEventListener","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA,eAA1B;AAA2CC,IAAAA;AAA3C,MAA4DjB,WAAW,CAC1EY,KAAD,IAAWA,KAAK,CAACM,IAD0D,CAA7E;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,YAAJ,EAAkB;AAChBE,MAAAA,KAAK,CAACF,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMAnB,EAAAA,SAAS,CAAC,MAAM;AACd,aAASsB,QAAT,GAAoB;AAClB;AACA;AACA;AACA;AACA;AACA,UACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIX,WAAW,IAAI,CAACC,eAApB,EAAqC;AAAA;;AACnC,gBAAMW,MAAM,iBAAGb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACAnB,UAAAA,QAAQ,CAAC;AAAEoB,YAAAA,IAAI,EAAExB,kBAAR;AAA4BqB,YAAAA;AAA5B,WAAD,CAAR;AACD;AACF;AACF;;AACDN,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACD,KAFD;AAGD,GArBQ,EAqBN,CAACN,SAAD,EAAYC,WAAZ,EAAyBC,eAAzB,CArBM,CAAT;AAsBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,EAEGG,SAAS,CAACmB,GAAV,CAAef,IAAD,IACb,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACW,EAApB;AAAwB,IAAA,IAAI,EAAEX,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF;AAQD,CA3CD;;AA6CA,OAAO,MAAMgB,kBAAkB,GAAG1B,OAAO,CAAC0B,kBAAR,CAChC,MAAOC,OAAP,IAAmB;AACjB,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAlC,EAAAA,KAAK,CAACqC,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBlC,IAAAA,KAAK,CAACqC,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAc/B,QAAd,CAAuB;AACrBoB,IAAAA,IAAI,EAAEvB;AADe,GAAvB;AAGA4B,EAAAA,OAAO,CAACM,KAAR,CAAc/B,QAAd,CAAuB;AACrBoB,IAAAA,IAAI,EAAExB;AADe,GAAvB;AAGA6B,EAAAA,OAAO,CAACM,KAAR,CAAc/B,QAAd,CAAuBT,GAAvB;AACA,QAAMkC,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAf+B,CAA3B;AAkBP,eAAelC,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { mainPosts, hasMorePost, loadPostLoading, retweetError } = useSelector(\n    (state) => state.post\n  );\n\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n\n  useEffect(() => {\n    function onScroll() {\n      // console.log(\n      //   window.scrollY, // 얼마나 내렸는지\n      //   document.documentElement.clientHeight, // 브라우저에서 툴바를 제외한 실제 컨텐츠 부분. 화면 보이는 길이\n      //   document.documentElement.scrollHeight // 가장 위부터 가장 아래까지 총 길이\n      // );\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePost && !loadPostLoading) {\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\n          dispatch({ type: LOAD_POSTS_REQUEST, lastId });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePost, loadPostLoading]);\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}