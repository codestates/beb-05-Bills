{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/odongjae/Desktop/2022Study/codestates/project/react-sns/front/pages/user/[id].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\n\nvar User = function User() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading,\n      retweetError = _useSelector.retweetError;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo,\n      me = _useSelector2.me;\n\n  useEffect(function () {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id, loadPostsLoading]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, userInfo && __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"http://localhost:3060/favicon.ico\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"http://localhost:3060/user/\".concat(id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), userInfo && userInfo.id !== (me === null || me === void 0 ? void 0 : me.id) ? __jsx(Card, {\n    style: {\n      marginBottom: 20\n    },\n    actions: [__jsx(\"div\", {\n      key: \"twit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }), userInfo.Followers)],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  })) : null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(User, \"vmSXx1QHdQEhy61MJpl3pNMO7eE=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = User;\nexport var __N_SSP = true;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/odongjae/Desktop/2022Study/codestates/project/react-sns/front/pages/user/[id].js"],"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","Head","useRouter","LOAD_USER_POSTS_REQUEST","PostCard","AppLayout","User","dispatch","router","id","query","state","post","mainPosts","hasMorePosts","loadPostsLoading","retweetError","user","userInfo","me","alert","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","marginBottom","Posts","Followings","Followers","map","c"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,uBAAT,QAAwC,qBAAxC;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAMW,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAQO,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR;;AACA,qBACEX,WAAW,CAAC,UAACa,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADb;AAAA,MAAQC,SAAR,gBAAQA,SAAR;AAAA,MAAmBC,YAAnB,gBAAmBA,YAAnB;AAAA,MAAiCC,gBAAjC,gBAAiCA,gBAAjC;AAAA,MAAmDC,YAAnD,gBAAmDA,YAAnD;;AAEA,sBAAyBlB,WAAW,CAAC,UAACa,KAAD;AAAA,WAAWA,KAAK,CAACM,IAAjB;AAAA,GAAD,CAApC;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,EAAlB,iBAAkBA,EAAlB;;AAEAvB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIoB,YAAJ,EAAkB;AAChBI,MAAAA,KAAK,CAACJ,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAKApB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMyB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,UACEC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIb,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACrCR,UAAAA,QAAQ,CAAC;AACPqB,YAAAA,IAAI,EAAEzB,uBADC;AAEP0B,YAAAA,MAAM,EACJhB,SAAS,CAACA,SAAS,CAACiB,MAAV,GAAmB,CAApB,CAAT,IACAjB,SAAS,CAACA,SAAS,CAACiB,MAAV,GAAmB,CAApB,CAAT,CAAgCrB,EAJ3B;AAKPsB,YAAAA,IAAI,EAAEtB;AALC,WAAD,CAAR;AAOD;AACF;AACF,KAfD;;AAgBAa,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCX,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCZ,QAArC;AACD,KAFD;AAGD,GArBQ,EAqBN,CAACR,SAAS,CAACiB,MAAX,EAAmBhB,YAAnB,EAAiCL,EAAjC,EAAqCM,gBAArC,CArBM,CAAT;AAuBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QAAQ,IACP,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACgB,QADZ,wBADF,EAKE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,OAAO,YAAKhB,QAAQ,CAACgB,QAAd,oCAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASE;AACE,IAAA,QAAQ,EAAC,UADX;AAEE,IAAA,OAAO,YAAKhB,QAAQ,CAACgB,QAAd,oCAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAaE;AACE,IAAA,QAAQ,EAAC,gBADX;AAEE,IAAA,OAAO,YAAKhB,QAAQ,CAACgB,QAAd,oCAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAiBE;AACE,IAAA,QAAQ,EAAC,UADX;AAEE,IAAA,OAAO,EAAC,mCAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAqBE;AACE,IAAA,QAAQ,EAAC,QADX;AAEE,IAAA,OAAO,uCAAgCzB,EAAhC,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CAFJ,EA6BGS,QAAQ,IAAIA,QAAQ,CAACT,EAAT,MAAgBU,EAAhB,aAAgBA,EAAhB,uBAAgBA,EAAE,CAAEV,EAApB,CAAZ,GACC,MAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAE0B,MAAAA,YAAY,EAAE;AAAhB,KADT;AAEE,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGjB,QAAQ,CAACkB,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGlB,QAAQ,CAACmB,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGnB,QAAQ,CAACoB,SAHZ,CAXO,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASpB,QAAQ,CAACgB,QAAT,CAAkB,CAAlB,CAAT,CADV;AAEE,IAAA,KAAK,EAAEhB,QAAQ,CAACgB,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADD,GA0BG,IAvDN,EAwDGrB,SAAS,CAAC0B,GAAV,CAAc,UAACC,CAAD;AAAA,WACb,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAAC/B,EAAjB;AAAqB,MAAA,IAAI,EAAE+B,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CAxDH,CADF;AA8DD,CAlGD;;GAAMlC,I;UACaT,W,EACFK,S,EAGbJ,W,EACuBA,W;;;KANrBQ,I;;AA2HN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\nimport axios from 'axios';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { id } = router.query;\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } =\n    useSelector((state) => state.post);\n  const { userInfo, me } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    const onScroll = () => {\n      if (\n        window.pageYOffset + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId:\n              mainPosts[mainPosts.length - 1] &&\n              mainPosts[mainPosts.length - 1].id,\n            data: id,\n          });\n        }\n      }\n    };\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, id, loadPostsLoading]);\n\n  return (\n    <AppLayout>\n      {userInfo && (\n        <Head>\n          <title>\n            {userInfo.nickname}\n            님의 글\n          </title>\n          <meta\n            name=\"description\"\n            content={`${userInfo.nickname}님의 게시글`}\n          />\n          <meta\n            property=\"og:title\"\n            content={`${userInfo.nickname}님의 게시글`}\n          />\n          <meta\n            property=\"og:description\"\n            content={`${userInfo.nickname}님의 게시글`}\n          />\n          <meta\n            property=\"og:image\"\n            content=\"http://localhost:3060/favicon.ico\"\n          />\n          <meta\n            property=\"og:url\"\n            content={`http://localhost:3060/user/${id}`}\n          />\n        </Head>\n      )}\n      {userInfo && userInfo.id !== me?.id ? (\n        <Card\n          style={{ marginBottom: 20 }}\n          actions={[\n            <div key=\"twit\">\n              짹짹\n              <br />\n              {userInfo.Posts}\n            </div>,\n            <div key=\"following\">\n              팔로잉\n              <br />\n              {userInfo.Followings}\n            </div>,\n            <div key=\"follower\">\n              팔로워\n              <br />\n              {userInfo.Followers}\n            </div>,\n          ]}\n        >\n          <Card.Meta\n            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n            title={userInfo.nickname}\n          />\n        </Card>\n      ) : null}\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n      type: LOAD_USER_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}