{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from 'immer';\nexport const initialState = {\n  loadMyInfoLoading: false,\n  // 내 로그인 정보 가져오기 시도 중\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  loadUserLoading: false,\n  // 남의 정보 가져오기 시도 중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false,\n  // 팔로우 시도 중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 언팔로우 시도 중\n  unfollowDone: false,\n  unfollowError: null,\n  isLoggingIn: false,\n  // 로그인 시도 중\n  isLoggedIn: false,\n  logInError: null,\n  isLoggingOut: false,\n  // 로그아웃 시도 중\n  isLoggedOut: false,\n  logOutError: null,\n  isSigningUp: false,\n  // 회원가입 시도 중\n  isSignedUp: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  loadFollowersLoading: false,\n  // 팔로워 로드 시도중\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  loadFollowingsLoading: false,\n  // 팔로잉 로드 시도중\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  removeFollowerLoading: false,\n  // 팔로워 차단 시도중\n  removeFollowerDone: false,\n  removeFollowerError: null,\n  me: null,\n  userInfo: null,\n  signUpData: {},\n  logInData: {}\n};\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const RESET_LOG_IN_ERROR = 'RESET_LOG_IN_ERROR';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n/* redux-thunk code\nexport const loginAction = (data) => {\n  return (dispatch, getState) => {\n    const state = getState(); // combineReducers에 정의된 initialState가 로드됨.\n    dispatch(loginRequestAction());\n    axios\n      .post('/api/login')\n      .then((res) => {\n        dispatch(loginSuccessAction(res.data));\n      })\n      .catch((err) => dispatch(loginFailureAction(err)));\n  };\n};\n*/\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  id: 1,\n  nickname: 'bban',\n  Posts: [{\n    id: 1\n  }],\n  // 추후 Sequelize로 데이터를 합칠 것은 대문자로 입력.\n  Followings: [],\n  Followers: []\n});\n\nexport const loginRequestAction = data => ({\n  type: 'LOG_IN_REQUEST',\n  data\n});\nexport const resetLogInError = () => ({\n  type: 'RESET_LOG_IN_ERROR'\n});\nexport const loginSuccessAction = data => ({\n  type: 'LOG_IN_SUCCESS',\n  data\n});\nexport const loginFailureAction = data => ({\n  type: 'LOG_IN_FAILURE',\n  data\n});\nexport const logoutRequestAction = () => ({\n  type: 'LOG_OUT_REQUEST'\n});\nexport const logoutSuccessAction = () => ({\n  type: 'LOG_OUT_SUCCESS'\n});\nexport const logoutFailureAction = () => ({\n  type: 'LOG_OUT_FAILURE'\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_MY_INFO_REQUEST:\n      draft.loadMyInfoLoading = true;\n      draft.loadMyInfoDone = false;\n      draft.loadMyInfoError = null;\n      break;\n\n    case LOAD_MY_INFO_SUCCESS:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoDone = true;\n      draft.me = action.data;\n      break;\n\n    case LOAD_MY_INFO_FAILURE:\n      draft.loadMyInfoLoading = false;\n      draft.loadMyInfoError = action.error;\n      break;\n\n    case LOAD_USER_REQUEST:\n      draft.loadUserLoading = true;\n      draft.loadUserDone = false;\n      draft.loadUserError = null;\n      break;\n\n    case LOAD_USER_SUCCESS:\n      draft.loadUserLoading = false;\n      draft.loadUserDone = true;\n      draft.userInfo = action.data;\n      break;\n\n    case LOAD_USER_FAILURE:\n      draft.loadUserLoading = false;\n      draft.loadUserError = action.error;\n      break;\n\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followDone = false;\n      draft.followError = null;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.followDone = true;\n      draft.me.Followings.push({\n        id: action.data.UserId\n      });\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n\n    case UNFOLLOW_REQUEST:\n      draft.unfollowLoading = true;\n      draft.unfollowDone = false;\n      draft.unfollowError = null;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.unfollowLoading = false;\n      draft.unfollowDone = true;\n      draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId);\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.unfollowLoading = false;\n      draft.unfollowError = action.error;\n      break;\n\n    case LOG_IN_REQUEST:\n      console.log('REDUCER Login 💖');\n      draft.isLoggingIn = true;\n      draft.isLoggedIn = false;\n      draft.logInError = null;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.isLoggingIn = false;\n      draft.isLoggedIn = true;\n      draft.me = action.data;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.isLoggingIn = false;\n      draft.logInError = action.error;\n      break;\n\n    case RESET_LOG_IN_ERROR:\n      draft.logInError = null;\n      break;\n\n    case LOG_OUT_REQUEST:\n      draft.isLoggingOut = true;\n      draft.isLoggedOut = false;\n      draft.logOutError = null;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.isLoggingOut = false;\n      draft.isLoggedOut = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.isLoggingOut = false;\n      draft.logOutError = action.error;\n      break;\n\n    case SIGN_UP_REQUEST:\n      draft.isSigningUp = true;\n      draft.isSignedUp = false;\n      draft.signUpError = null;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.isSigningUp = false;\n      draft.isSignedUp = true;\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.isSigningUp = false;\n      draft.signUpError = action.error;\n      break;\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameDone = false;\n      draft.changeNicknameError = null;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.me.nickname = action.data.nickname;\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n\n    case LOAD_FOLLOWERS_REQUEST:\n      draft.loadFollowersLoading = true;\n      draft.loadFollowersDone = false;\n      draft.loadFollowersError = null;\n      break;\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      draft.loadFollowersLoading = false;\n      draft.me.Followers = action.data;\n      draft.loadFollowersDone = true;\n      break;\n\n    case LOAD_FOLLOWERS_FAILURE:\n      draft.loadFollowersLoading = false;\n      draft.loadFollowersError = action.error;\n      break;\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      draft.loadFollowingsLoading = true;\n      draft.loadFollowingsDone = false;\n      draft.loadFollowingsError = null;\n      break;\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      draft.loadFollowingsLoading = false;\n      draft.me.Followings = action.data;\n      draft.loadFollowingsDone = true;\n      break;\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      draft.loadFollowingsLoading = false;\n      draft.loadFollowingsError = action.error;\n      break;\n\n    case REMOVE_FOLLOWER_REQUEST:\n      draft.removeFollowerLoading = true;\n      draft.removeFollowerDone = false;\n      draft.removeFollowerError = null;\n      break;\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      draft.removeFollowerLoading = false;\n      draft.me.Followers = draft.me.Followers.filter(v => {\n        v.id !== action.data.UserId;\n      });\n      draft.removeFollowerDone = true;\n      break;\n\n    case REMOVE_FOLLOWER_FAILURE:\n      draft.removeFollowerLoading = false;\n      draft.removeFollowerError = action.error;\n      break;\n\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      break;\n    // return {\n    //   ...state,\n    //   me: {\n    //     ...state.me,\n    //     Posts: [{ id: action.data }, ...state.me.Posts],\n    //   },\n    // };\n\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n      break;\n    // return {\n    //   ...state,\n    //   me: {\n    //     ...state.me,\n    //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n    //   },\n    // };\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["/Users/odongjae/Desktop/2022Study/codestates/project/beb-05-Bills/front/reducers/user.js"],"names":["produce","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","isLoggingIn","isLoggedIn","logInError","isLoggingOut","isLoggedOut","logOutError","isSigningUp","isSignedUp","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","removeFollowerLoading","removeFollowerDone","removeFollowerError","me","userInfo","signUpData","logInData","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","RESET_LOG_IN_ERROR","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","id","nickname","Posts","Followings","Followers","loginRequestAction","type","resetLogInError","loginSuccessAction","loginFailureAction","logoutRequestAction","logoutSuccessAction","logoutFailureAction","reducer","state","action","draft","error","push","UserId","filter","v","console","log","unshift"],"mappings":"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","sourcesContent":["import produce from 'immer';\n\nexport const initialState = {\n  loadMyInfoLoading: false, // 내 로그인 정보 가져오기 시도 중\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  loadUserLoading: false, // 남의 정보 가져오기 시도 중\n  loadUserDone: false,\n  loadUserError: null,\n  followLoading: false, // 팔로우 시도 중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false, // 언팔로우 시도 중\n  unfollowDone: false,\n  unfollowError: null,\n  isLoggingIn: false, // 로그인 시도 중\n  isLoggedIn: false,\n  logInError: null,\n  isLoggingOut: false, // 로그아웃 시도 중\n  isLoggedOut: false,\n  logOutError: null,\n  isSigningUp: false, // 회원가입 시도 중\n  isSignedUp: false,\n  signUpError: null,\n  changeNicknameLoading: false, // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  loadFollowersLoading: false, // 팔로워 로드 시도중\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  loadFollowingsLoading: false, // 팔로잉 로드 시도중\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  removeFollowerLoading: false, // 팔로워 차단 시도중\n  removeFollowerDone: false,\n  removeFollowerError: null,\n  me: null,\n  userInfo: null,\n  signUpData: {},\n  logInData: {},\n};\n\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const RESET_LOG_IN_ERROR = 'RESET_LOG_IN_ERROR';\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\n\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\n\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\n/* redux-thunk code\nexport const loginAction = (data) => {\n  return (dispatch, getState) => {\n    const state = getState(); // combineReducers에 정의된 initialState가 로드됨.\n    dispatch(loginRequestAction());\n    axios\n      .post('/api/login')\n      .then((res) => {\n        dispatch(loginSuccessAction(res.data));\n      })\n      .catch((err) => dispatch(loginFailureAction(err)));\n  };\n};\n*/\nconst dummyUser = (data) => ({\n  ...data,\n  id: 1,\n  nickname: 'bban',\n  Posts: [{ id: 1 }], // 추후 Sequelize로 데이터를 합칠 것은 대문자로 입력.\n  Followings: [],\n  Followers: [],\n});\nexport const loginRequestAction = (data) => ({\n  type: 'LOG_IN_REQUEST',\n  data,\n});\n\nexport const resetLogInError = () => ({\n  type: 'RESET_LOG_IN_ERROR',\n});\nexport const loginSuccessAction = (data) => ({\n  type: 'LOG_IN_SUCCESS',\n  data,\n});\nexport const loginFailureAction = (data) => ({\n  type: 'LOG_IN_FAILURE',\n  data,\n});\n\nexport const logoutRequestAction = () => ({\n  type: 'LOG_OUT_REQUEST',\n});\nexport const logoutSuccessAction = () => ({\n  type: 'LOG_OUT_SUCCESS',\n});\nexport const logoutFailureAction = () => ({\n  type: 'LOG_OUT_FAILURE',\n});\n\nconst reducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case LOAD_MY_INFO_REQUEST:\n        draft.loadMyInfoLoading = true;\n        draft.loadMyInfoDone = false;\n        draft.loadMyInfoError = null;\n        break;\n      case LOAD_MY_INFO_SUCCESS:\n        draft.loadMyInfoLoading = false;\n        draft.loadMyInfoDone = true;\n        draft.me = action.data;\n        break;\n      case LOAD_MY_INFO_FAILURE:\n        draft.loadMyInfoLoading = false;\n        draft.loadMyInfoError = action.error;\n        break;\n      case LOAD_USER_REQUEST:\n        draft.loadUserLoading = true;\n        draft.loadUserDone = false;\n        draft.loadUserError = null;\n        break;\n      case LOAD_USER_SUCCESS:\n        draft.loadUserLoading = false;\n        draft.loadUserDone = true;\n        draft.userInfo = action.data;\n        break;\n      case LOAD_USER_FAILURE:\n        draft.loadUserLoading = false;\n        draft.loadUserError = action.error;\n        break;\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followDone = false;\n        draft.followError = null;\n        break;\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.me.Followings.push({ id: action.data.UserId });\n        break;\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n      case UNFOLLOW_REQUEST:\n        draft.unfollowLoading = true;\n        draft.unfollowDone = false;\n        draft.unfollowError = null;\n        break;\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.unfollowDone = true;\n        draft.me.Followings = draft.me.Followings.filter(\n          (v) => v.id !== action.data.UserId\n        );\n        break;\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n      case LOG_IN_REQUEST:\n        console.log('REDUCER Login 💖');\n        draft.isLoggingIn = true;\n        draft.isLoggedIn = false;\n        draft.logInError = null;\n        break;\n      case LOG_IN_SUCCESS:\n        draft.isLoggingIn = false;\n        draft.isLoggedIn = true;\n        draft.me = action.data;\n        break;\n      case LOG_IN_FAILURE:\n        draft.isLoggingIn = false;\n        draft.logInError = action.error;\n        break;\n      case RESET_LOG_IN_ERROR:\n        draft.logInError = null;\n        break;\n      case LOG_OUT_REQUEST:\n        draft.isLoggingOut = true;\n        draft.isLoggedOut = false;\n        draft.logOutError = null;\n        break;\n      case LOG_OUT_SUCCESS:\n        draft.isLoggingOut = false;\n        draft.isLoggedOut = true;\n        draft.me = null;\n        break;\n      case LOG_OUT_FAILURE:\n        draft.isLoggingOut = false;\n        draft.logOutError = action.error;\n        break;\n      case SIGN_UP_REQUEST:\n        draft.isSigningUp = true;\n        draft.isSignedUp = false;\n        draft.signUpError = null;\n        break;\n      case SIGN_UP_SUCCESS:\n        draft.isSigningUp = false;\n        draft.isSignedUp = true;\n        break;\n      case SIGN_UP_FAILURE:\n        draft.isSigningUp = false;\n        draft.signUpError = action.error;\n        break;\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.me.nickname = action.data.nickname;\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n      case LOAD_FOLLOWERS_REQUEST:\n        draft.loadFollowersLoading = true;\n        draft.loadFollowersDone = false;\n        draft.loadFollowersError = null;\n        break;\n      case LOAD_FOLLOWERS_SUCCESS:\n        draft.loadFollowersLoading = false;\n        draft.me.Followers = action.data;\n        draft.loadFollowersDone = true;\n        break;\n      case LOAD_FOLLOWERS_FAILURE:\n        draft.loadFollowersLoading = false;\n        draft.loadFollowersError = action.error;\n        break;\n      case LOAD_FOLLOWINGS_REQUEST:\n        draft.loadFollowingsLoading = true;\n        draft.loadFollowingsDone = false;\n        draft.loadFollowingsError = null;\n        break;\n      case LOAD_FOLLOWINGS_SUCCESS:\n        draft.loadFollowingsLoading = false;\n        draft.me.Followings = action.data;\n        draft.loadFollowingsDone = true;\n        break;\n      case LOAD_FOLLOWINGS_FAILURE:\n        draft.loadFollowingsLoading = false;\n        draft.loadFollowingsError = action.error;\n        break;\n      case REMOVE_FOLLOWER_REQUEST:\n        draft.removeFollowerLoading = true;\n        draft.removeFollowerDone = false;\n        draft.removeFollowerError = null;\n        break;\n      case REMOVE_FOLLOWER_SUCCESS:\n        draft.removeFollowerLoading = false;\n        draft.me.Followers = draft.me.Followers.filter((v) => {\n          v.id !== action.data.UserId;\n        });\n        draft.removeFollowerDone = true;\n        break;\n      case REMOVE_FOLLOWER_FAILURE:\n        draft.removeFollowerLoading = false;\n        draft.removeFollowerError = action.error;\n        break;\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({ id: action.data });\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\n      //   },\n      // };\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      //   },\n      // };\n      default:\n        break;\n    }\n  });\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}